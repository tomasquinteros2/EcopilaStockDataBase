services:
  # --- INFRAESTRUCTURA DE LA NUBE ---

  eureka-service-online:
    build:
      context: .
      dockerfile: eureka-service/Dockerfile
    container_name: eureka_service_online
    ports: [ "9761:8761" ]
    environment:
      SPRING_PROFILES_ACTIVE: "online"
      # Opcional (el servidor ya no se auto-registra)
      EUREKA_CLIENT_REGISTER_WITH_EUREKA: "false"
      EUREKA_CLIENT_FETCH_REGISTRY: "false"
    volumes:
      - eureka-data-online:/data
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://localhost:8761/actuator/health | grep -q UP" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 15s
    mem_limit: 350m

  gateway:
    build:
      context: .
      dockerfile: gateway/Dockerfile
    ports: [ "9090:8090" ]
    environment:
      SPRING_PROFILES_ACTIVE: "online"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-service-online:8761/eureka"
      EUREKA_URI: "http://eureka-service-online:8761/eureka"
      APPLICATION_SECURITY_AUTHENTICATION_JWT_BASE64_SECRET: "hRFxCC9ibkLnqP9Js9FiWRbCme1dbLPLIRzQVPKmhK/LscULomJ/flJJpUaZ+M9fa+hT0X4gpeileNbQJrEBrw=="
    depends_on:
      eureka-service-online:
        condition: service_healthy
    mem_limit: 320m

  # --- BASE DE DATOS Y CACHÃ‰ DE LA NUBE ---
  postgres-db:
    image: postgres:14-alpine
    container_name: postgres_db_online
    environment:
      POSTGRES_DB: ecopila_db_online
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
    volumes:
      - postgres-data-online:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U admin -d ecopila_db_online" ]
      interval: 5s
      timeout: 5s
      retries: 5

  symmetricds-master:
    build:
      context: .
      dockerfile: symmetricds/master/Dockerfile
    container_name: symmetricds_master
    ports:
      - "31415:31415"
    environment:
      - JAVA_OPTS=-Xmx512m
    volumes:
      - symmetricds-master-data:/app/symmetric-ds-3.14.0/data
      - symmetricds-master-logs:/app/symmetric-ds-3.14.0/logs
    depends_on:
      postgres-db:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:31415/sync/master/api/engine/status || exit 1" ]
      interval: 15s
      timeout: 10s
      retries: 5
      start_period: 60s
    command: /app/init-symmetric-master.sh

  redis-online:
    image: redis:alpine
    container_name: redis_online
    volumes:
      - redis-data-online:/data

  # --- MICROSERVICIOS DE NEGOCIO (NUBE) ---
  auth-service-online:
    build:
      context: .
      dockerfile: auth-service/Dockerfile
    container_name: auth_service_online
    ports: [ "9086:8086" ]
    environment:
      SPRING_PROFILES_ACTIVE: "online"
      JWT_SECRET_KEY: "hRFxCC9ibkLnqP9Js9FiWRbCme1dbLPLIRzQVPKmhK/LscULomJ/flJJpUaZ+M9fa+hT0X4gpeileNbQJrEBrw=="
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-service-online:8761/eureka"
      JAVA_TOOL_OPTIONS: "-XX:+UseSerialGC -Xms128m -Xmx256m -XX:MaxMetaspaceSize=96m -XX:MaxDirectMemorySize=64m -XX:+ExitOnOutOfMemoryError -Dspring.main.lazy-initialization=true -Dserver.tomcat.threads.max=25"
    depends_on:
      eureka-service-online:
        condition: service_started
    mem_limit: 384m

  proveedor-service-online:
    build:
      context: .
      dockerfile: microservicio_proveedor/Dockerfile
    container_name: proveedor_service_online
    ports:
      - "9084:8084"
    environment:
      SPRING_PROFILES_ACTIVE: "online"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-service-online:8761/eureka"
      JAVA_TOOL_OPTIONS: "-XX:+UseSerialGC -XX:+ClassUnloading -XX:ActiveProcessorCount=1 -XX:ThreadStackSize=512k -Xms96m -Xmx168m -XX:MaxMetaspaceSize=112m -XX:ReservedCodeCacheSize=32m -XX:MaxDirectMemorySize=12m -XX:+ExitOnOutOfMemoryError -Dspring.main.lazy-initialization=true -Dserver.tomcat.threads.max=16"
    depends_on:
      eureka-service-online:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL","wget -qO- http://localhost:8084/actuator/health | grep -q UP" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 25s
    mem_limit: 320m

  tipo-producto-service-online:
    build:
      context: .
      dockerfile: microservicio_tipo_producto/Dockerfile
    container_name: tipo_producto_service_online
    ports: [ "9085:8085" ]
    environment:
      SPRING_PROFILES_ACTIVE: "online"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-service-online:8761/eureka"
      JAVA_TOOL_OPTIONS: "-XX:+UseSerialGC -XX:+ClassUnloading -XX:ActiveProcessorCount=1 -XX:ThreadStackSize=512k -Xms96m -Xmx168m -XX:MaxMetaspaceSize=96m -XX:ReservedCodeCacheSize=40m -XX:MaxDirectMemorySize=24m -XX:+ExitOnOutOfMemoryError -Dspring.main.lazy-initialization=true -Dserver.tomcat.threads.max=16"
    depends_on:
      eureka-service-online:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://localhost:8085/actuator/health | grep -q UP" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 25s
    mem_limit: 300m

  dolar-service-online:
    build:
      context: .
      dockerfile: microservicio_dolar/Dockerfile
    container_name: dolar_service_online
    ports: [ "9082:8082" ]
    environment:
      SPRING_PROFILES_ACTIVE: "online"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-service-online:8761/eureka"
      EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
      JAVA_TOOL_OPTIONS: "-XX:+UseSerialGC -XX:+ClassUnloading -XX:ActiveProcessorCount=1 -XX:ThreadStackSize=512k -Xms96m -Xmx176m -XX:MaxMetaspaceSize=112m -XX:ReservedCodeCacheSize=48m -XX:MaxDirectMemorySize=32m -XX:+ExitOnOutOfMemoryError -Dspring.main.lazy-initialization=true -Dserver.tomcat.threads.max=16"
    depends_on:
      eureka-service-online:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget -qO- http://localhost:8082/actuator/health | grep -q UP" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    mem_limit: 280m

  producto-service-online:
    build:
      context: .
      dockerfile: microservicio_producto/Dockerfile
    ports: [ "9083:8083" ]
    environment:
      SPRING_PROFILES_ACTIVE: "online"
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: "http://eureka-service-online:8761/eureka"
    depends_on:
      eureka-service-online:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL","wget -qO- http://localhost:8083/actuator/health | grep -q UP" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 25s
    mem_limit: 300m

volumes:
  eureka-data-online:
  redis-data-online:
  postgres-data-online:
  symmetricds-master-data:
  symmetricds-master-logs:
