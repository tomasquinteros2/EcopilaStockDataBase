Classfile /app/BOOT-INF/lib/org/springframework/http/HttpHeaders.class
  Last modified Apr 11, 2024; size 41225 bytes
  SHA-256 checksum 9146de2843b8874b23c8c0f160ca4481c483633bb63f446529d1387e003d45ca
  Compiled from "HttpHeaders.java"
public class org.springframework.http.HttpHeaders extends java.lang.Object implements org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>, java.io.Serializable
  minor version: 0
  major version: 61
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #20                         // org/springframework/http/HttpHeaders
  super_class: #25                        // java/lang/Object
  interfaces: 2, fields: 69, methods: 152, attributes: 4
Constant pool:
     #1 = Class              #2           // org/springframework/util/LinkedCaseInsensitiveMap
     #2 = Utf8               org/springframework/util/LinkedCaseInsensitiveMap
     #3 = Fieldref           #4.#5        // java/util/Locale.ENGLISH:Ljava/util/Locale;
     #4 = Class              #6           // java/util/Locale
     #5 = NameAndType        #7:#8        // ENGLISH:Ljava/util/Locale;
     #6 = Utf8               java/util/Locale
     #7 = Utf8               ENGLISH
     #8 = Utf8               Ljava/util/Locale;
     #9 = Methodref          #1.#10       // org/springframework/util/LinkedCaseInsensitiveMap."<init>":(ILjava/util/Locale;)V
    #10 = NameAndType        #11:#12      // "<init>":(ILjava/util/Locale;)V
    #11 = Utf8               <init>
    #12 = Utf8               (ILjava/util/Locale;)V
    #13 = Methodref          #14.#15      // org/springframework/util/CollectionUtils.toMultiValueMap:(Ljava/util/Map;)Lorg/springframework/util/MultiValueMap;
    #14 = Class              #16          // org/springframework/util/CollectionUtils
    #15 = NameAndType        #17:#18      // toMultiValueMap:(Ljava/util/Map;)Lorg/springframework/util/MultiValueMap;
    #16 = Utf8               org/springframework/util/CollectionUtils
    #17 = Utf8               toMultiValueMap
    #18 = Utf8               (Ljava/util/Map;)Lorg/springframework/util/MultiValueMap;
    #19 = Methodref          #20.#21      // org/springframework/http/HttpHeaders."<init>":(Lorg/springframework/util/MultiValueMap;)V
    #20 = Class              #22          // org/springframework/http/HttpHeaders
    #21 = NameAndType        #11:#23      // "<init>":(Lorg/springframework/util/MultiValueMap;)V
    #22 = Utf8               org/springframework/http/HttpHeaders
    #23 = Utf8               (Lorg/springframework/util/MultiValueMap;)V
    #24 = Methodref          #25.#26      // java/lang/Object."<init>":()V
    #25 = Class              #27          // java/lang/Object
    #26 = NameAndType        #11:#28      // "<init>":()V
    #27 = Utf8               java/lang/Object
    #28 = Utf8               ()V
    #29 = String             #30          // MultiValueMap must not be null
    #30 = Utf8               MultiValueMap must not be null
    #31 = Methodref          #32.#33      // org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
    #32 = Class              #34          // org/springframework/util/Assert
    #33 = NameAndType        #35:#36      // notNull:(Ljava/lang/Object;Ljava/lang/String;)V
    #34 = Utf8               org/springframework/util/Assert
    #35 = Utf8               notNull
    #36 = Utf8               (Ljava/lang/Object;Ljava/lang/String;)V
    #37 = Fieldref           #20.#38      // org/springframework/http/HttpHeaders.headers:Lorg/springframework/util/MultiValueMap;
    #38 = NameAndType        #39:#40      // headers:Lorg/springframework/util/MultiValueMap;
    #39 = Utf8               headers
    #40 = Utf8               Lorg/springframework/util/MultiValueMap;
    #41 = Methodref          #20.#42      // org/springframework/http/HttpHeaders.get:(Ljava/lang/Object;)Ljava/util/List;
    #42 = NameAndType        #43:#44      // get:(Ljava/lang/Object;)Ljava/util/List;
    #43 = Utf8               get
    #44 = Utf8               (Ljava/lang/Object;)Ljava/util/List;
    #45 = Methodref          #46.#47      // java/util/Collections.emptyList:()Ljava/util/List;
    #46 = Class              #48          // java/util/Collections
    #47 = NameAndType        #49:#50      // emptyList:()Ljava/util/List;
    #48 = Utf8               java/util/Collections
    #49 = Utf8               emptyList
    #50 = Utf8               ()Ljava/util/List;
    #51 = String             #52          // Accept
    #52 = Utf8               Accept
    #53 = Methodref          #54.#55      // org/springframework/http/MediaType.toString:(Ljava/util/Collection;)Ljava/lang/String;
    #54 = Class              #56          // org/springframework/http/MediaType
    #55 = NameAndType        #57:#58      // toString:(Ljava/util/Collection;)Ljava/lang/String;
    #56 = Utf8               org/springframework/http/MediaType
    #57 = Utf8               toString
    #58 = Utf8               (Ljava/util/Collection;)Ljava/lang/String;
    #59 = Methodref          #20.#60      // org/springframework/http/HttpHeaders.set:(Ljava/lang/String;Ljava/lang/String;)V
    #60 = NameAndType        #61:#62      // set:(Ljava/lang/String;Ljava/lang/String;)V
    #61 = Utf8               set
    #62 = Utf8               (Ljava/lang/String;Ljava/lang/String;)V
    #63 = Methodref          #54.#64      // org/springframework/http/MediaType.parseMediaTypes:(Ljava/util/List;)Ljava/util/List;
    #64 = NameAndType        #65:#66      // parseMediaTypes:(Ljava/util/List;)Ljava/util/List;
    #65 = Utf8               parseMediaTypes
    #66 = Utf8               (Ljava/util/List;)Ljava/util/List;
    #67 = String             #68          // LanguageRange List must not be null
    #68 = Utf8               LanguageRange List must not be null
    #69 = Class              #70          // java/text/DecimalFormat
    #70 = Utf8               java/text/DecimalFormat
    #71 = String             #72          // 0.0
    #72 = Utf8               0.0
    #73 = Fieldref           #20.#74      // org/springframework/http/HttpHeaders.DECIMAL_FORMAT_SYMBOLS:Ljava/text/DecimalFormatSymbols;
    #74 = NameAndType        #75:#76      // DECIMAL_FORMAT_SYMBOLS:Ljava/text/DecimalFormatSymbols;
    #75 = Utf8               DECIMAL_FORMAT_SYMBOLS
    #76 = Utf8               Ljava/text/DecimalFormatSymbols;
    #77 = Methodref          #69.#78      // java/text/DecimalFormat."<init>":(Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V
    #78 = NameAndType        #11:#79      // "<init>":(Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V
    #79 = Utf8               (Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V
    #80 = InterfaceMethodref #81.#82      // java/util/List.stream:()Ljava/util/stream/Stream;
    #81 = Class              #83          // java/util/List
    #82 = NameAndType        #84:#85      // stream:()Ljava/util/stream/Stream;
    #83 = Utf8               java/util/List
    #84 = Utf8               stream
    #85 = Utf8               ()Ljava/util/stream/Stream;
    #86 = InvokeDynamic      #0:#87       // #0:apply:(Ljava/text/DecimalFormat;)Ljava/util/function/Function;
    #87 = NameAndType        #88:#89      // apply:(Ljava/text/DecimalFormat;)Ljava/util/function/Function;
    #88 = Utf8               apply
    #89 = Utf8               (Ljava/text/DecimalFormat;)Ljava/util/function/Function;
    #90 = InterfaceMethodref #91.#92      // java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
    #91 = Class              #93          // java/util/stream/Stream
    #92 = NameAndType        #94:#95      // map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
    #93 = Utf8               java/util/stream/Stream
    #94 = Utf8               map
    #95 = Utf8               (Ljava/util/function/Function;)Ljava/util/stream/Stream;
    #96 = InterfaceMethodref #91.#97      // java/util/stream/Stream.toList:()Ljava/util/List;
    #97 = NameAndType        #98:#50      // toList:()Ljava/util/List;
    #98 = Utf8               toList
    #99 = String             #100         // Accept-Language
   #100 = Utf8               Accept-Language
   #101 = Methodref          #20.#102     // org/springframework/http/HttpHeaders.toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
   #102 = NameAndType        #103:#104    // toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
   #103 = Utf8               toCommaDelimitedString
   #104 = Utf8               (Ljava/util/List;)Ljava/lang/String;
   #105 = Methodref          #20.#106     // org/springframework/http/HttpHeaders.getFirst:(Ljava/lang/String;)Ljava/lang/String;
   #106 = NameAndType        #107:#108    // getFirst:(Ljava/lang/String;)Ljava/lang/String;
   #107 = Utf8               getFirst
   #108 = Utf8               (Ljava/lang/String;)Ljava/lang/String;
   #109 = Methodref          #110.#111    // org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
   #110 = Class              #112         // org/springframework/util/StringUtils
   #111 = NameAndType        #113:#114    // hasText:(Ljava/lang/String;)Z
   #112 = Utf8               org/springframework/util/StringUtils
   #113 = Utf8               hasText
   #114 = Utf8               (Ljava/lang/String;)Z
   #115 = Methodref          #116.#117    // java/util/Locale$LanguageRange.parse:(Ljava/lang/String;)Ljava/util/List;
   #116 = Class              #118         // java/util/Locale$LanguageRange
   #117 = NameAndType        #119:#120    // parse:(Ljava/lang/String;)Ljava/util/List;
   #118 = Utf8               java/util/Locale$LanguageRange
   #119 = Utf8               parse
   #120 = Utf8               (Ljava/lang/String;)Ljava/util/List;
   #121 = InvokeDynamic      #1:#122      // #1:apply:()Ljava/util/function/Function;
   #122 = NameAndType        #88:#123     // apply:()Ljava/util/function/Function;
   #123 = Utf8               ()Ljava/util/function/Function;
   #124 = Methodref          #20.#125     // org/springframework/http/HttpHeaders.setAcceptLanguage:(Ljava/util/List;)V
   #125 = NameAndType        #126:#127    // setAcceptLanguage:(Ljava/util/List;)V
   #126 = Utf8               setAcceptLanguage
   #127 = Utf8               (Ljava/util/List;)V
   #128 = Methodref          #20.#129     // org/springframework/http/HttpHeaders.getAcceptLanguage:()Ljava/util/List;
   #129 = NameAndType        #130:#50     // getAcceptLanguage:()Ljava/util/List;
   #130 = Utf8               getAcceptLanguage
   #131 = InterfaceMethodref #81.#132     // java/util/List.isEmpty:()Z
   #132 = NameAndType        #133:#134    // isEmpty:()Z
   #133 = Utf8               isEmpty
   #134 = Utf8               ()Z
   #135 = Class              #136         // java/util/ArrayList
   #136 = Utf8               java/util/ArrayList
   #137 = InterfaceMethodref #81.#138     // java/util/List.size:()I
   #138 = NameAndType        #139:#140    // size:()I
   #139 = Utf8               size
   #140 = Utf8               ()I
   #141 = Methodref          #135.#142    // java/util/ArrayList."<init>":(I)V
   #142 = NameAndType        #11:#143     // "<init>":(I)V
   #143 = Utf8               (I)V
   #144 = InterfaceMethodref #81.#145     // java/util/List.iterator:()Ljava/util/Iterator;
   #145 = NameAndType        #146:#147    // iterator:()Ljava/util/Iterator;
   #146 = Utf8               iterator
   #147 = Utf8               ()Ljava/util/Iterator;
   #148 = InterfaceMethodref #149.#150    // java/util/Iterator.hasNext:()Z
   #149 = Class              #151         // java/util/Iterator
   #150 = NameAndType        #152:#134    // hasNext:()Z
   #151 = Utf8               java/util/Iterator
   #152 = Utf8               hasNext
   #153 = InterfaceMethodref #149.#154    // java/util/Iterator.next:()Ljava/lang/Object;
   #154 = NameAndType        #155:#156    // next:()Ljava/lang/Object;
   #155 = Utf8               next
   #156 = Utf8               ()Ljava/lang/Object;
   #157 = Methodref          #116.#158    // java/util/Locale$LanguageRange.getRange:()Ljava/lang/String;
   #158 = NameAndType        #159:#160    // getRange:()Ljava/lang/String;
   #159 = Utf8               getRange
   #160 = Utf8               ()Ljava/lang/String;
   #161 = String             #162         // *
   #162 = Utf8               *
   #163 = Methodref          #164.#165    // java/lang/String.startsWith:(Ljava/lang/String;)Z
   #164 = Class              #166         // java/lang/String
   #165 = NameAndType        #167:#114    // startsWith:(Ljava/lang/String;)Z
   #166 = Utf8               java/lang/String
   #167 = Utf8               startsWith
   #168 = Methodref          #4.#169      // java/util/Locale.forLanguageTag:(Ljava/lang/String;)Ljava/util/Locale;
   #169 = NameAndType        #170:#171    // forLanguageTag:(Ljava/lang/String;)Ljava/util/Locale;
   #170 = Utf8               forLanguageTag
   #171 = Utf8               (Ljava/lang/String;)Ljava/util/Locale;
   #172 = InterfaceMethodref #81.#173     // java/util/List.add:(Ljava/lang/Object;)Z
   #173 = NameAndType        #174:#175    // add:(Ljava/lang/Object;)Z
   #174 = Utf8               add
   #175 = Utf8               (Ljava/lang/Object;)Z
   #176 = String             #177         // Accept-Patch
   #177 = Utf8               Accept-Patch
   #178 = String             #179         // Access-Control-Allow-Credentials
   #179 = Utf8               Access-Control-Allow-Credentials
   #180 = Methodref          #181.#182    // java/lang/Boolean.toString:(Z)Ljava/lang/String;
   #181 = Class              #183         // java/lang/Boolean
   #182 = NameAndType        #57:#184     // toString:(Z)Ljava/lang/String;
   #183 = Utf8               java/lang/Boolean
   #184 = Utf8               (Z)Ljava/lang/String;
   #185 = Methodref          #181.#186    // java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
   #186 = NameAndType        #187:#114    // parseBoolean:(Ljava/lang/String;)Z
   #187 = Utf8               parseBoolean
   #188 = String             #189         // Access-Control-Allow-Headers
   #189 = Utf8               Access-Control-Allow-Headers
   #190 = Methodref          #20.#191     // org/springframework/http/HttpHeaders.getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
   #191 = NameAndType        #192:#120    // getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
   #192 = Utf8               getValuesAsList
   #193 = String             #194         // Access-Control-Allow-Methods
   #194 = Utf8               Access-Control-Allow-Methods
   #195 = Methodref          #110.#196    // org/springframework/util/StringUtils.collectionToCommaDelimitedString:(Ljava/util/Collection;)Ljava/lang/String;
   #196 = NameAndType        #197:#58     // collectionToCommaDelimitedString:(Ljava/util/Collection;)Ljava/lang/String;
   #197 = Utf8               collectionToCommaDelimitedString
   #198 = String             #199         // ,
   #199 = Utf8               ,
   #200 = Methodref          #110.#201    // org/springframework/util/StringUtils.tokenizeToStringArray:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
   #201 = NameAndType        #202:#203    // tokenizeToStringArray:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
   #202 = Utf8               tokenizeToStringArray
   #203 = Utf8               (Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
   #204 = Methodref          #205.#206    // org/springframework/http/HttpMethod.valueOf:(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
   #205 = Class              #207         // org/springframework/http/HttpMethod
   #206 = NameAndType        #208:#209    // valueOf:(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
   #207 = Utf8               org/springframework/http/HttpMethod
   #208 = Utf8               valueOf
   #209 = Utf8               (Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
   #210 = String             #211         // Access-Control-Allow-Origin
   #211 = Utf8               Access-Control-Allow-Origin
   #212 = Methodref          #20.#213     // org/springframework/http/HttpHeaders.setOrRemove:(Ljava/lang/String;Ljava/lang/String;)V
   #213 = NameAndType        #214:#62     // setOrRemove:(Ljava/lang/String;Ljava/lang/String;)V
   #214 = Utf8               setOrRemove
   #215 = Methodref          #20.#216     // org/springframework/http/HttpHeaders.getFieldValues:(Ljava/lang/String;)Ljava/lang/String;
   #216 = NameAndType        #217:#108    // getFieldValues:(Ljava/lang/String;)Ljava/lang/String;
   #217 = Utf8               getFieldValues
   #218 = String             #219         // Access-Control-Expose-Headers
   #219 = Utf8               Access-Control-Expose-Headers
   #220 = String             #221         // Access-Control-Max-Age
   #221 = Utf8               Access-Control-Max-Age
   #222 = Methodref          #223.#224    // java/time/Duration.getSeconds:()J
   #223 = Class              #225         // java/time/Duration
   #224 = NameAndType        #226:#227    // getSeconds:()J
   #225 = Utf8               java/time/Duration
   #226 = Utf8               getSeconds
   #227 = Utf8               ()J
   #228 = Methodref          #229.#230    // java/lang/Long.toString:(J)Ljava/lang/String;
   #229 = Class              #231         // java/lang/Long
   #230 = NameAndType        #57:#232     // toString:(J)Ljava/lang/String;
   #231 = Utf8               java/lang/Long
   #232 = Utf8               (J)Ljava/lang/String;
   #233 = Methodref          #229.#234    // java/lang/Long.parseLong:(Ljava/lang/String;)J
   #234 = NameAndType        #235:#236    // parseLong:(Ljava/lang/String;)J
   #235 = Utf8               parseLong
   #236 = Utf8               (Ljava/lang/String;)J
   #237 = Long               -1l
   #239 = String             #240         // Access-Control-Request-Headers
   #240 = Utf8               Access-Control-Request-Headers
   #241 = String             #242         // Access-Control-Request-Method
   #242 = Utf8               Access-Control-Request-Method
   #243 = Methodref          #205.#244    // org/springframework/http/HttpMethod.name:()Ljava/lang/String;
   #244 = NameAndType        #245:#160    // name:()Ljava/lang/String;
   #245 = Utf8               name
   #246 = Class              #247         // java/util/StringJoiner
   #247 = Utf8               java/util/StringJoiner
   #248 = String             #249         // ,
   #249 = Utf8               ,
   #250 = Methodref          #246.#251    // java/util/StringJoiner."<init>":(Ljava/lang/CharSequence;)V
   #251 = NameAndType        #11:#252     // "<init>":(Ljava/lang/CharSequence;)V
   #252 = Utf8               (Ljava/lang/CharSequence;)V
   #253 = Class              #254         // java/nio/charset/Charset
   #254 = Utf8               java/nio/charset/Charset
   #255 = Methodref          #253.#244    // java/nio/charset/Charset.name:()Ljava/lang/String;
   #256 = Methodref          #164.#257    // java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
   #257 = NameAndType        #258:#259    // toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
   #258 = Utf8               toLowerCase
   #259 = Utf8               (Ljava/util/Locale;)Ljava/lang/String;
   #260 = Methodref          #246.#261    // java/util/StringJoiner.add:(Ljava/lang/CharSequence;)Ljava/util/StringJoiner;
   #261 = NameAndType        #174:#262    // add:(Ljava/lang/CharSequence;)Ljava/util/StringJoiner;
   #262 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/StringJoiner;
   #263 = String             #264         // Accept-Charset
   #264 = Utf8               Accept-Charset
   #265 = Methodref          #246.#266    // java/util/StringJoiner.toString:()Ljava/lang/String;
   #266 = NameAndType        #57:#160     // toString:()Ljava/lang/String;
   #267 = Methodref          #164.#268    // java/lang/String.indexOf:(I)I
   #268 = NameAndType        #269:#270    // indexOf:(I)I
   #269 = Utf8               indexOf
   #270 = Utf8               (I)I
   #271 = Methodref          #164.#272    // java/lang/String.substring:(II)Ljava/lang/String;
   #272 = NameAndType        #273:#274    // substring:(II)Ljava/lang/String;
   #273 = Utf8               substring
   #274 = Utf8               (II)Ljava/lang/String;
   #275 = Methodref          #164.#276    // java/lang/String.equals:(Ljava/lang/Object;)Z
   #276 = NameAndType        #277:#175    // equals:(Ljava/lang/Object;)Z
   #277 = Utf8               equals
   #278 = Methodref          #253.#279    // java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
   #279 = NameAndType        #280:#281    // forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
   #280 = Utf8               forName
   #281 = Utf8               (Ljava/lang/String;)Ljava/nio/charset/Charset;
   #282 = String             #283         // Allow
   #283 = Utf8               Allow
   #284 = Methodref          #110.#285    // org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
   #285 = NameAndType        #286:#114    // hasLength:(Ljava/lang/String;)Z
   #286 = Utf8               hasLength
   #287 = Class              #288         // java/util/LinkedHashSet
   #288 = Utf8               java/util/LinkedHashSet
   #289 = Methodref          #287.#142    // java/util/LinkedHashSet."<init>":(I)V
   #290 = InterfaceMethodref #291.#173    // java/util/Set.add:(Ljava/lang/Object;)Z
   #291 = Class              #292         // java/util/Set
   #292 = Utf8               java/util/Set
   #293 = Methodref          #46.#294     // java/util/Collections.emptySet:()Ljava/util/Set;
   #294 = NameAndType        #295:#296    // emptySet:()Ljava/util/Set;
   #295 = Utf8               emptySet
   #296 = Utf8               ()Ljava/util/Set;
   #297 = Methodref          #20.#298     // org/springframework/http/HttpHeaders.setBasicAuth:(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
   #298 = NameAndType        #299:#300    // setBasicAuth:(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
   #299 = Utf8               setBasicAuth
   #300 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
   #301 = Methodref          #20.#302     // org/springframework/http/HttpHeaders.encodeBasicAuth:(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
   #302 = NameAndType        #303:#304    // encodeBasicAuth:(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
   #303 = Utf8               encodeBasicAuth
   #304 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
   #305 = Methodref          #20.#306     // org/springframework/http/HttpHeaders.setBasicAuth:(Ljava/lang/String;)V
   #306 = NameAndType        #299:#307    // setBasicAuth:(Ljava/lang/String;)V
   #307 = Utf8               (Ljava/lang/String;)V
   #308 = String             #309         // \'encodedCredentials\' must not be null or blank
   #309 = Utf8               \'encodedCredentials\' must not be null or blank
   #310 = Methodref          #32.#311     // org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
   #311 = NameAndType        #113:#62     // hasText:(Ljava/lang/String;Ljava/lang/String;)V
   #312 = String             #313         // Authorization
   #313 = Utf8               Authorization
   #314 = InvokeDynamic      #2:#315      // #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #315 = NameAndType        #316:#108    // makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #316 = Utf8               makeConcatWithConstants
   #317 = InvokeDynamic      #3:#315      // #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #318 = String             #319         // Cache-Control
   #319 = Utf8               Cache-Control
   #320 = Methodref          #321.#322    // org/springframework/http/CacheControl.getHeaderValue:()Ljava/lang/String;
   #321 = Class              #323         // org/springframework/http/CacheControl
   #322 = NameAndType        #324:#160    // getHeaderValue:()Ljava/lang/String;
   #323 = Utf8               org/springframework/http/CacheControl
   #324 = Utf8               getHeaderValue
   #325 = String             #326         // Connection
   #326 = Utf8               Connection
   #327 = String             #328         // Name must not be null
   #328 = Utf8               Name must not be null
   #329 = Methodref          #330.#331    // org/springframework/http/ContentDisposition.formData:()Lorg/springframework/http/ContentDisposition$Builder;
   #330 = Class              #332         // org/springframework/http/ContentDisposition
   #331 = NameAndType        #333:#334    // formData:()Lorg/springframework/http/ContentDisposition$Builder;
   #332 = Utf8               org/springframework/http/ContentDisposition
   #333 = Utf8               formData
   #334 = Utf8               ()Lorg/springframework/http/ContentDisposition$Builder;
   #335 = InterfaceMethodref #336.#337    // org/springframework/http/ContentDisposition$Builder.name:(Ljava/lang/String;)Lorg/springframework/http/ContentDisposition$Builder;
   #336 = Class              #338         // org/springframework/http/ContentDisposition$Builder
   #337 = NameAndType        #245:#339    // name:(Ljava/lang/String;)Lorg/springframework/http/ContentDisposition$Builder;
   #338 = Utf8               org/springframework/http/ContentDisposition$Builder
   #339 = Utf8               (Ljava/lang/String;)Lorg/springframework/http/ContentDisposition$Builder;
   #340 = InterfaceMethodref #336.#341    // org/springframework/http/ContentDisposition$Builder.filename:(Ljava/lang/String;)Lorg/springframework/http/ContentDisposition$Builder;
   #341 = NameAndType        #342:#339    // filename:(Ljava/lang/String;)Lorg/springframework/http/ContentDisposition$Builder;
   #342 = Utf8               filename
   #343 = InterfaceMethodref #336.#344    // org/springframework/http/ContentDisposition$Builder.build:()Lorg/springframework/http/ContentDisposition;
   #344 = NameAndType        #345:#346    // build:()Lorg/springframework/http/ContentDisposition;
   #345 = Utf8               build
   #346 = Utf8               ()Lorg/springframework/http/ContentDisposition;
   #347 = Methodref          #20.#348     // org/springframework/http/HttpHeaders.setContentDisposition:(Lorg/springframework/http/ContentDisposition;)V
   #348 = NameAndType        #349:#350    // setContentDisposition:(Lorg/springframework/http/ContentDisposition;)V
   #349 = Utf8               setContentDisposition
   #350 = Utf8               (Lorg/springframework/http/ContentDisposition;)V
   #351 = String             #352         // Content-Disposition
   #352 = Utf8               Content-Disposition
   #353 = Methodref          #330.#266    // org/springframework/http/ContentDisposition.toString:()Ljava/lang/String;
   #354 = Methodref          #330.#355    // org/springframework/http/ContentDisposition.parse:(Ljava/lang/String;)Lorg/springframework/http/ContentDisposition;
   #355 = NameAndType        #119:#356    // parse:(Ljava/lang/String;)Lorg/springframework/http/ContentDisposition;
   #356 = Utf8               (Ljava/lang/String;)Lorg/springframework/http/ContentDisposition;
   #357 = Methodref          #330.#358    // org/springframework/http/ContentDisposition.empty:()Lorg/springframework/http/ContentDisposition;
   #358 = NameAndType        #359:#346    // empty:()Lorg/springframework/http/ContentDisposition;
   #359 = Utf8               empty
   #360 = String             #361         // Content-Language
   #361 = Utf8               Content-Language
   #362 = Methodref          #4.#363      // java/util/Locale.toLanguageTag:()Ljava/lang/String;
   #363 = NameAndType        #364:#160    // toLanguageTag:()Ljava/lang/String;
   #364 = Utf8               toLanguageTag
   #365 = InterfaceMethodref #91.#366     // java/util/stream/Stream.findFirst:()Ljava/util/Optional;
   #366 = NameAndType        #367:#368    // findFirst:()Ljava/util/Optional;
   #367 = Utf8               findFirst
   #368 = Utf8               ()Ljava/util/Optional;
   #369 = InvokeDynamic      #4:#122      // #4:apply:()Ljava/util/function/Function;
   #370 = Methodref          #371.#372    // java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
   #371 = Class              #373         // java/util/Optional
   #372 = NameAndType        #94:#374     // map:(Ljava/util/function/Function;)Ljava/util/Optional;
   #373 = Utf8               java/util/Optional
   #374 = Utf8               (Ljava/util/function/Function;)Ljava/util/Optional;
   #375 = Methodref          #371.#376    // java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
   #376 = NameAndType        #377:#378    // orElse:(Ljava/lang/Object;)Ljava/lang/Object;
   #377 = Utf8               orElse
   #378 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;
   #379 = String             #380         // Content-Length
   #380 = Utf8               Content-Length
   #381 = Methodref          #54.#382     // org/springframework/http/MediaType.isWildcardType:()Z
   #382 = NameAndType        #383:#134    // isWildcardType:()Z
   #383 = Utf8               isWildcardType
   #384 = String             #385         // Content-Type cannot contain wildcard type \'*\'
   #385 = Utf8               Content-Type cannot contain wildcard type \'*\'
   #386 = Methodref          #32.#387     // org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
   #387 = NameAndType        #388:#389    // isTrue:(ZLjava/lang/String;)V
   #388 = Utf8               isTrue
   #389 = Utf8               (ZLjava/lang/String;)V
   #390 = Methodref          #54.#391     // org/springframework/http/MediaType.isWildcardSubtype:()Z
   #391 = NameAndType        #392:#134    // isWildcardSubtype:()Z
   #392 = Utf8               isWildcardSubtype
   #393 = String             #394         // Content-Type cannot contain wildcard subtype \'*\'
   #394 = Utf8               Content-Type cannot contain wildcard subtype \'*\'
   #395 = String             #396         // Content-Type
   #396 = Utf8               Content-Type
   #397 = Methodref          #54.#266     // org/springframework/http/MediaType.toString:()Ljava/lang/String;
   #398 = Methodref          #20.#399     // org/springframework/http/HttpHeaders.remove:(Ljava/lang/Object;)Ljava/util/List;
   #399 = NameAndType        #400:#44     // remove:(Ljava/lang/Object;)Ljava/util/List;
   #400 = Utf8               remove
   #401 = Methodref          #54.#402     // org/springframework/http/MediaType.parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
   #402 = NameAndType        #403:#404    // parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
   #403 = Utf8               parseMediaType
   #404 = Utf8               (Ljava/lang/String;)Lorg/springframework/http/MediaType;
   #405 = String             #406         // Date
   #406 = Utf8               Date
   #407 = Methodref          #20.#408     // org/springframework/http/HttpHeaders.setZonedDateTime:(Ljava/lang/String;Ljava/time/ZonedDateTime;)V
   #408 = NameAndType        #409:#410    // setZonedDateTime:(Ljava/lang/String;Ljava/time/ZonedDateTime;)V
   #409 = Utf8               setZonedDateTime
   #410 = Utf8               (Ljava/lang/String;Ljava/time/ZonedDateTime;)V
   #411 = Methodref          #20.#412     // org/springframework/http/HttpHeaders.setInstant:(Ljava/lang/String;Ljava/time/Instant;)V
   #412 = NameAndType        #413:#414    // setInstant:(Ljava/lang/String;Ljava/time/Instant;)V
   #413 = Utf8               setInstant
   #414 = Utf8               (Ljava/lang/String;Ljava/time/Instant;)V
   #415 = Methodref          #20.#416     // org/springframework/http/HttpHeaders.setDate:(Ljava/lang/String;J)V
   #416 = NameAndType        #417:#418    // setDate:(Ljava/lang/String;J)V
   #417 = Utf8               setDate
   #418 = Utf8               (Ljava/lang/String;J)V
   #419 = Methodref          #20.#420     // org/springframework/http/HttpHeaders.getFirstDate:(Ljava/lang/String;)J
   #420 = NameAndType        #421:#236    // getFirstDate:(Ljava/lang/String;)J
   #421 = Utf8               getFirstDate
   #422 = String             #423         // \"
   #423 = Utf8               \"
   #424 = String             #425         // W/
   #425 = Utf8               W/
   #426 = String             #427         // Invalid ETag: does not start with W/ or \"
   #427 = Utf8               Invalid ETag: does not start with W/ or \"
   #428 = Methodref          #164.#429    // java/lang/String.endsWith:(Ljava/lang/String;)Z
   #429 = NameAndType        #430:#114    // endsWith:(Ljava/lang/String;)Z
   #430 = Utf8               endsWith
   #431 = String             #432         // Invalid ETag: does not end with \"
   #432 = Utf8               Invalid ETag: does not end with \"
   #433 = String             #434         // ETag
   #434 = Utf8               ETag
   #435 = String             #436         // Expires
   #436 = Utf8               Expires
   #437 = Methodref          #20.#438     // org/springframework/http/HttpHeaders.getFirstDate:(Ljava/lang/String;Z)J
   #438 = NameAndType        #421:#439    // getFirstDate:(Ljava/lang/String;Z)J
   #439 = Utf8               (Ljava/lang/String;Z)J
   #440 = Methodref          #441.#442    // java/net/InetSocketAddress.getHostString:()Ljava/lang/String;
   #441 = Class              #443         // java/net/InetSocketAddress
   #442 = NameAndType        #444:#160    // getHostString:()Ljava/lang/String;
   #443 = Utf8               java/net/InetSocketAddress
   #444 = Utf8               getHostString
   #445 = Methodref          #441.#446    // java/net/InetSocketAddress.getPort:()I
   #446 = NameAndType        #447:#140    // getPort:()I
   #447 = Utf8               getPort
   #448 = InvokeDynamic      #5:#449      // #5:makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;
   #449 = NameAndType        #316:#450    // makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;
   #450 = Utf8               (Ljava/lang/String;I)Ljava/lang/String;
   #451 = String             #452         // Host
   #452 = Utf8               Host
   #453 = Methodref          #20.#454     // org/springframework/http/HttpHeaders.remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #454 = NameAndType        #400:#455    // remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
   #455 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Z
   #456 = String             #457         // [
   #457 = Utf8               [
   #458 = Methodref          #164.#459    // java/lang/String.indexOf:(II)I
   #459 = NameAndType        #269:#460    // indexOf:(II)I
   #460 = Utf8               (II)I
   #461 = Methodref          #164.#462    // java/lang/String.lastIndexOf:(I)I
   #462 = NameAndType        #463:#270    // lastIndexOf:(I)I
   #463 = Utf8               lastIndexOf
   #464 = Methodref          #164.#465    // java/lang/String.substring:(I)Ljava/lang/String;
   #465 = NameAndType        #273:#466    // substring:(I)Ljava/lang/String;
   #466 = Utf8               (I)Ljava/lang/String;
   #467 = Methodref          #468.#469    // java/lang/Integer.parseInt:(Ljava/lang/String;)I
   #468 = Class              #470         // java/lang/Integer
   #469 = NameAndType        #471:#472    // parseInt:(Ljava/lang/String;)I
   #470 = Utf8               java/lang/Integer
   #471 = Utf8               parseInt
   #472 = Utf8               (Ljava/lang/String;)I
   #473 = Class              #474         // java/lang/NumberFormatException
   #474 = Utf8               java/lang/NumberFormatException
   #475 = Methodref          #441.#476    // java/net/InetSocketAddress.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;
   #476 = NameAndType        #477:#478    // createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;
   #477 = Utf8               createUnresolved
   #478 = Utf8               (Ljava/lang/String;I)Ljava/net/InetSocketAddress;
   #479 = String             #480         // If-Match
   #480 = Utf8               If-Match
   #481 = Methodref          #20.#482     // org/springframework/http/HttpHeaders.getETagValuesAsList:(Ljava/lang/String;)Ljava/util/List;
   #482 = NameAndType        #483:#120    // getETagValuesAsList:(Ljava/lang/String;)Ljava/util/List;
   #483 = Utf8               getETagValuesAsList
   #484 = String             #485         // If-Modified-Since
   #485 = Utf8               If-Modified-Since
   #486 = Fieldref           #20.#487     // org/springframework/http/HttpHeaders.GMT:Ljava/time/ZoneId;
   #487 = NameAndType        #488:#489    // GMT:Ljava/time/ZoneId;
   #488 = Utf8               GMT
   #489 = Utf8               Ljava/time/ZoneId;
   #490 = Methodref          #491.#492    // java/time/ZonedDateTime.withZoneSameInstant:(Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
   #491 = Class              #493         // java/time/ZonedDateTime
   #492 = NameAndType        #494:#495    // withZoneSameInstant:(Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
   #493 = Utf8               java/time/ZonedDateTime
   #494 = Utf8               withZoneSameInstant
   #495 = Utf8               (Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
   #496 = String             #497         // If-None-Match
   #497 = Utf8               If-None-Match
   #498 = String             #499         // If-Unmodified-Since
   #499 = Utf8               If-Unmodified-Since
   #500 = String             #501         // Last-Modified
   #501 = Utf8               Last-Modified
   #502 = String             #503         // Location
   #503 = Utf8               Location
   #504 = Methodref          #505.#506    // java/net/URI.toASCIIString:()Ljava/lang/String;
   #505 = Class              #507         // java/net/URI
   #506 = NameAndType        #508:#160    // toASCIIString:()Ljava/lang/String;
   #507 = Utf8               java/net/URI
   #508 = Utf8               toASCIIString
   #509 = Methodref          #505.#510    // java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
   #510 = NameAndType        #511:#512    // create:(Ljava/lang/String;)Ljava/net/URI;
   #511 = Utf8               create
   #512 = Utf8               (Ljava/lang/String;)Ljava/net/URI;
   #513 = String             #514         // Origin
   #514 = Utf8               Origin
   #515 = String             #516         // Pragma
   #516 = Utf8               Pragma
   #517 = Methodref          #518.#55     // org/springframework/http/HttpRange.toString:(Ljava/util/Collection;)Ljava/lang/String;
   #518 = Class              #519         // org/springframework/http/HttpRange
   #519 = Utf8               org/springframework/http/HttpRange
   #520 = String             #521         // Range
   #521 = Utf8               Range
   #522 = Methodref          #518.#523    // org/springframework/http/HttpRange.parseRanges:(Ljava/lang/String;)Ljava/util/List;
   #523 = NameAndType        #524:#120    // parseRanges:(Ljava/lang/String;)Ljava/util/List;
   #524 = Utf8               parseRanges
   #525 = String             #526         // Upgrade
   #526 = Utf8               Upgrade
   #527 = String             #528         // Vary
   #528 = Utf8               Vary
   #529 = Fieldref           #20.#530     // org/springframework/http/HttpHeaders.DATE_FORMATTER:Ljava/time/format/DateTimeFormatter;
   #530 = NameAndType        #531:#532    // DATE_FORMATTER:Ljava/time/format/DateTimeFormatter;
   #531 = Utf8               DATE_FORMATTER
   #532 = Utf8               Ljava/time/format/DateTimeFormatter;
   #533 = Methodref          #534.#535    // java/time/format/DateTimeFormatter.format:(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/String;
   #534 = Class              #536         // java/time/format/DateTimeFormatter
   #535 = NameAndType        #537:#538    // format:(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/String;
   #536 = Utf8               java/time/format/DateTimeFormatter
   #537 = Utf8               format
   #538 = Utf8               (Ljava/time/temporal/TemporalAccessor;)Ljava/lang/String;
   #539 = Methodref          #491.#540    // java/time/ZonedDateTime.ofInstant:(Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
   #540 = NameAndType        #541:#542    // ofInstant:(Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
   #541 = Utf8               ofInstant
   #542 = Utf8               (Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
   #543 = Methodref          #544.#545    // java/time/Instant.ofEpochMilli:(J)Ljava/time/Instant;
   #544 = Class              #546         // java/time/Instant
   #545 = NameAndType        #547:#548    // ofEpochMilli:(J)Ljava/time/Instant;
   #546 = Utf8               java/time/Instant
   #547 = Utf8               ofEpochMilli
   #548 = Utf8               (J)Ljava/time/Instant;
   #549 = Methodref          #20.#550     // org/springframework/http/HttpHeaders.getFirstZonedDateTime:(Ljava/lang/String;Z)Ljava/time/ZonedDateTime;
   #550 = NameAndType        #551:#552    // getFirstZonedDateTime:(Ljava/lang/String;Z)Ljava/time/ZonedDateTime;
   #551 = Utf8               getFirstZonedDateTime
   #552 = Utf8               (Ljava/lang/String;Z)Ljava/time/ZonedDateTime;
   #553 = Methodref          #491.#554    // java/time/ZonedDateTime.toInstant:()Ljava/time/Instant;
   #554 = NameAndType        #555:#556    // toInstant:()Ljava/time/Instant;
   #555 = Utf8               toInstant
   #556 = Utf8               ()Ljava/time/Instant;
   #557 = Methodref          #544.#558    // java/time/Instant.toEpochMilli:()J
   #558 = NameAndType        #559:#227    // toEpochMilli:()J
   #559 = Utf8               toEpochMilli
   #560 = Methodref          #164.#561    // java/lang/String.length:()I
   #561 = NameAndType        #562:#140    // length:()I
   #562 = Utf8               length
   #563 = Fieldref           #20.#564     // org/springframework/http/HttpHeaders.DATE_PARSERS:[Ljava/time/format/DateTimeFormatter;
   #564 = NameAndType        #565:#566    // DATE_PARSERS:[Ljava/time/format/DateTimeFormatter;
   #565 = Utf8               DATE_PARSERS
   #566 = Utf8               [Ljava/time/format/DateTimeFormatter;
   #567 = Methodref          #491.#568    // java/time/ZonedDateTime.parse:(Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/ZonedDateTime;
   #568 = NameAndType        #119:#569    // parse:(Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/ZonedDateTime;
   #569 = Utf8               (Ljava/lang/CharSequence;Ljava/time/format/DateTimeFormatter;)Ljava/time/ZonedDateTime;
   #570 = Class              #571         // java/time/format/DateTimeParseException
   #571 = Utf8               java/time/format/DateTimeParseException
   #572 = Class              #573         // java/lang/IllegalArgumentException
   #573 = Utf8               java/lang/IllegalArgumentException
   #574 = InvokeDynamic      #6:#575      // #6:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #575 = NameAndType        #316:#576    // makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #576 = Utf8               (Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #577 = Methodref          #572.#578    // java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
   #578 = NameAndType        #11:#307     // "<init>":(Ljava/lang/String;)V
   #579 = Methodref          #135.#26     // java/util/ArrayList."<init>":()V
   #580 = Methodref          #20.#581     // org/springframework/http/HttpHeaders.tokenizeQuoted:(Ljava/lang/String;)Ljava/util/List;
   #581 = NameAndType        #582:#120    // tokenizeQuoted:(Ljava/lang/String;)Ljava/util/List;
   #582 = Utf8               tokenizeQuoted
   #583 = InterfaceMethodref #81.#584     // java/util/List.addAll:(Ljava/util/Collection;)Z
   #584 = NameAndType        #585:#586    // addAll:(Ljava/util/Collection;)Z
   #585 = Utf8               addAll
   #586 = Utf8               (Ljava/util/Collection;)Z
   #587 = Class              #588         // java/lang/StringBuilder
   #588 = Utf8               java/lang/StringBuilder
   #589 = Methodref          #587.#142    // java/lang/StringBuilder."<init>":(I)V
   #590 = Methodref          #164.#591    // java/lang/String.charAt:(I)C
   #591 = NameAndType        #592:#593    // charAt:(I)C
   #592 = Utf8               charAt
   #593 = Utf8               (I)C
   #594 = Methodref          #587.#132    // java/lang/StringBuilder.isEmpty:()Z
   #595 = Methodref          #587.#596    // java/lang/StringBuilder.append:(C)Ljava/lang/StringBuilder;
   #596 = NameAndType        #597:#598    // append:(C)Ljava/lang/StringBuilder;
   #597 = Utf8               append
   #598 = Utf8               (C)Ljava/lang/StringBuilder;
   #599 = Methodref          #20.#600     // org/springframework/http/HttpHeaders.addToken:(Ljava/lang/StringBuilder;Ljava/util/List;Z)V
   #600 = NameAndType        #601:#602    // addToken:(Ljava/lang/StringBuilder;Ljava/util/List;Z)V
   #601 = Utf8               addToken
   #602 = Utf8               (Ljava/lang/StringBuilder;Ljava/util/List;Z)V
   #603 = Methodref          #587.#604    // java/lang/StringBuilder.setLength:(I)V
   #604 = NameAndType        #605:#143    // setLength:(I)V
   #605 = Utf8               setLength
   #606 = Methodref          #607.#608    // java/lang/Character.isWhitespace:(C)Z
   #607 = Class              #609         // java/lang/Character
   #608 = NameAndType        #610:#611    // isWhitespace:(C)Z
   #609 = Utf8               java/lang/Character
   #610 = Utf8               isWhitespace
   #611 = Utf8               (C)Z
   #612 = Methodref          #587.#266    // java/lang/StringBuilder.toString:()Ljava/lang/String;
   #613 = Methodref          #164.#614    // java/lang/String.trim:()Ljava/lang/String;
   #614 = NameAndType        #615:#160    // trim:()Ljava/lang/String;
   #615 = Utf8               trim
   #616 = Methodref          #164.#132    // java/lang/String.isEmpty:()Z
   #617 = InterfaceMethodref #618.#619    // org/springframework/util/MultiValueMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
   #618 = Class              #620         // org/springframework/util/MultiValueMap
   #619 = NameAndType        #400:#378    // remove:(Ljava/lang/Object;)Ljava/lang/Object;
   #620 = Utf8               org/springframework/util/MultiValueMap
   #621 = String             #622         // Content-Encoding
   #622 = Utf8               Content-Encoding
   #623 = String             #624         // Content-Location
   #624 = Utf8               Content-Location
   #625 = String             #626         // Content-Range
   #626 = Utf8               Content-Range
   #627 = Fieldref           #20.#628     // org/springframework/http/HttpHeaders.ETAG_HEADER_VALUE_PATTERN:Ljava/util/regex/Pattern;
   #628 = NameAndType        #629:#630    // ETAG_HEADER_VALUE_PATTERN:Ljava/util/regex/Pattern;
   #629 = Utf8               ETAG_HEADER_VALUE_PATTERN
   #630 = Utf8               Ljava/util/regex/Pattern;
   #631 = Methodref          #632.#633    // java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
   #632 = Class              #634         // java/util/regex/Pattern
   #633 = NameAndType        #635:#636    // matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
   #634 = Utf8               java/util/regex/Pattern
   #635 = Utf8               matcher
   #636 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
   #637 = Methodref          #638.#639    // java/util/regex/Matcher.find:()Z
   #638 = Class              #640         // java/util/regex/Matcher
   #639 = NameAndType        #641:#134    // find:()Z
   #640 = Utf8               java/util/regex/Matcher
   #641 = Utf8               find
   #642 = Methodref          #638.#643    // java/util/regex/Matcher.group:()Ljava/lang/String;
   #643 = NameAndType        #644:#160    // group:()Ljava/lang/String;
   #644 = Utf8               group
   #645 = Methodref          #638.#646    // java/util/regex/Matcher.group:(I)Ljava/lang/String;
   #646 = NameAndType        #644:#466    // group:(I)Ljava/lang/String;
   #647 = InvokeDynamic      #7:#575      // #7:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #648 = InterfaceMethodref #618.#649    // org/springframework/util/MultiValueMap.getFirst:(Ljava/lang/Object;)Ljava/lang/Object;
   #649 = NameAndType        #107:#378    // getFirst:(Ljava/lang/Object;)Ljava/lang/Object;
   #650 = InterfaceMethodref #618.#651    // org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
   #651 = NameAndType        #174:#652    // add:(Ljava/lang/Object;Ljava/lang/Object;)V
   #652 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)V
   #653 = InterfaceMethodref #618.#654    // org/springframework/util/MultiValueMap.addAll:(Ljava/lang/Object;Ljava/util/List;)V
   #654 = NameAndType        #585:#655    // addAll:(Ljava/lang/Object;Ljava/util/List;)V
   #655 = Utf8               (Ljava/lang/Object;Ljava/util/List;)V
   #656 = InterfaceMethodref #618.#657    // org/springframework/util/MultiValueMap.addAll:(Lorg/springframework/util/MultiValueMap;)V
   #657 = NameAndType        #585:#23     // addAll:(Lorg/springframework/util/MultiValueMap;)V
   #658 = InterfaceMethodref #618.#659    // org/springframework/util/MultiValueMap.set:(Ljava/lang/Object;Ljava/lang/Object;)V
   #659 = NameAndType        #61:#652     // set:(Ljava/lang/Object;Ljava/lang/Object;)V
   #660 = InterfaceMethodref #618.#661    // org/springframework/util/MultiValueMap.setAll:(Ljava/util/Map;)V
   #661 = NameAndType        #662:#663    // setAll:(Ljava/util/Map;)V
   #662 = Utf8               setAll
   #663 = Utf8               (Ljava/util/Map;)V
   #664 = InterfaceMethodref #618.#665    // org/springframework/util/MultiValueMap.toSingleValueMap:()Ljava/util/Map;
   #665 = NameAndType        #666:#667    // toSingleValueMap:()Ljava/util/Map;
   #666 = Utf8               toSingleValueMap
   #667 = Utf8               ()Ljava/util/Map;
   #668 = InterfaceMethodref #618.#138    // org/springframework/util/MultiValueMap.size:()I
   #669 = InterfaceMethodref #618.#132    // org/springframework/util/MultiValueMap.isEmpty:()Z
   #670 = InterfaceMethodref #618.#671    // org/springframework/util/MultiValueMap.containsKey:(Ljava/lang/Object;)Z
   #671 = NameAndType        #672:#175    // containsKey:(Ljava/lang/Object;)Z
   #672 = Utf8               containsKey
   #673 = InterfaceMethodref #618.#674    // org/springframework/util/MultiValueMap.containsValue:(Ljava/lang/Object;)Z
   #674 = NameAndType        #675:#175    // containsValue:(Ljava/lang/Object;)Z
   #675 = Utf8               containsValue
   #676 = InterfaceMethodref #618.#677    // org/springframework/util/MultiValueMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
   #677 = NameAndType        #43:#378     // get:(Ljava/lang/Object;)Ljava/lang/Object;
   #678 = InterfaceMethodref #618.#679    // org/springframework/util/MultiValueMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #679 = NameAndType        #680:#681    // put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #680 = Utf8               put
   #681 = Utf8               (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #682 = InterfaceMethodref #618.#683    // org/springframework/util/MultiValueMap.putAll:(Ljava/util/Map;)V
   #683 = NameAndType        #684:#663    // putAll:(Ljava/util/Map;)V
   #684 = Utf8               putAll
   #685 = InterfaceMethodref #618.#686    // org/springframework/util/MultiValueMap.clear:()V
   #686 = NameAndType        #687:#28     // clear:()V
   #687 = Utf8               clear
   #688 = InterfaceMethodref #618.#689    // org/springframework/util/MultiValueMap.keySet:()Ljava/util/Set;
   #689 = NameAndType        #690:#296    // keySet:()Ljava/util/Set;
   #690 = Utf8               keySet
   #691 = InterfaceMethodref #618.#692    // org/springframework/util/MultiValueMap.values:()Ljava/util/Collection;
   #692 = NameAndType        #693:#694    // values:()Ljava/util/Collection;
   #693 = Utf8               values
   #694 = Utf8               ()Ljava/util/Collection;
   #695 = InterfaceMethodref #618.#696    // org/springframework/util/MultiValueMap.entrySet:()Ljava/util/Set;
   #696 = NameAndType        #697:#296    // entrySet:()Ljava/util/Set;
   #697 = Utf8               entrySet
   #698 = InterfaceMethodref #618.#699    // org/springframework/util/MultiValueMap.forEach:(Ljava/util/function/BiConsumer;)V
   #699 = NameAndType        #700:#701    // forEach:(Ljava/util/function/BiConsumer;)V
   #700 = Utf8               forEach
   #701 = Utf8               (Ljava/util/function/BiConsumer;)V
   #702 = InterfaceMethodref #618.#703    // org/springframework/util/MultiValueMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #703 = NameAndType        #704:#681    // putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
   #704 = Utf8               putIfAbsent
   #705 = Methodref          #20.#706     // org/springframework/http/HttpHeaders.unwrap:(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/util/MultiValueMap;
   #706 = NameAndType        #707:#708    // unwrap:(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/util/MultiValueMap;
   #707 = Utf8               unwrap
   #708 = Utf8               (Lorg/springframework/http/HttpHeaders;)Lorg/springframework/util/MultiValueMap;
   #709 = Methodref          #25.#276     // java/lang/Object.equals:(Ljava/lang/Object;)Z
   #710 = Methodref          #25.#711     // java/lang/Object.hashCode:()I
   #711 = NameAndType        #712:#140    // hashCode:()I
   #712 = Utf8               hashCode
   #713 = Methodref          #20.#714     // org/springframework/http/HttpHeaders.formatHeaders:(Lorg/springframework/util/MultiValueMap;)Ljava/lang/String;
   #714 = NameAndType        #715:#716    // formatHeaders:(Lorg/springframework/util/MultiValueMap;)Ljava/lang/String;
   #715 = Utf8               formatHeaders
   #716 = Utf8               (Lorg/springframework/util/MultiValueMap;)Ljava/lang/String;
   #717 = Methodref          #20.#718     // org/springframework/http/HttpHeaders.readOnlyHttpHeaders:(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpHeaders;
   #718 = NameAndType        #719:#720    // readOnlyHttpHeaders:(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpHeaders;
   #719 = Utf8               readOnlyHttpHeaders
   #720 = Utf8               (Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpHeaders;
   #721 = Class              #722         // org/springframework/http/ReadOnlyHttpHeaders
   #722 = Utf8               org/springframework/http/ReadOnlyHttpHeaders
   #723 = Methodref          #721.#21     // org/springframework/http/ReadOnlyHttpHeaders."<init>":(Lorg/springframework/util/MultiValueMap;)V
   #724 = String             #725         // HttpHeaders must not be null
   #725 = Utf8               HttpHeaders must not be null
   #726 = Fieldref           #20.#727     // org/springframework/http/HttpHeaders.EMPTY:Lorg/springframework/http/HttpHeaders;
   #727 = NameAndType        #728:#729    // EMPTY:Lorg/springframework/http/HttpHeaders;
   #728 = Utf8               EMPTY
   #729 = Utf8               Lorg/springframework/http/HttpHeaders;
   #730 = Methodref          #20.#26      // org/springframework/http/HttpHeaders."<init>":()V
   #731 = InterfaceMethodref #291.#82     // java/util/Set.stream:()Ljava/util/stream/Stream;
   #732 = InvokeDynamic      #8:#122      // #8:apply:()Ljava/util/function/Function;
   #733 = String             #734         // ]
   #734 = Utf8               ]
   #735 = Methodref          #736.#737    // java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
   #736 = Class              #738         // java/util/stream/Collectors
   #737 = NameAndType        #739:#740    // joining:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
   #738 = Utf8               java/util/stream/Collectors
   #739 = Utf8               joining
   #740 = Utf8               (Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
   #741 = InterfaceMethodref #91.#742     // java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
   #742 = NameAndType        #743:#744    // collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
   #743 = Utf8               collect
   #744 = Utf8               (Ljava/util/stream/Collector;)Ljava/lang/Object;
   #745 = String             #746         // Username must not be null
   #746 = Utf8               Username must not be null
   #747 = String             #748         // :
   #748 = Utf8               :
   #749 = String             #750         // Username must not contain a colon
   #750 = Utf8               Username must not contain a colon
   #751 = Methodref          #32.#752     // org/springframework/util/Assert.doesNotContain:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
   #752 = NameAndType        #753:#754    // doesNotContain:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
   #753 = Utf8               doesNotContain
   #754 = Utf8               (Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
   #755 = String             #756         // Password must not be null
   #756 = Utf8               Password must not be null
   #757 = Fieldref           #758.#759    // java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
   #758 = Class              #760         // java/nio/charset/StandardCharsets
   #759 = NameAndType        #761:#762    // ISO_8859_1:Ljava/nio/charset/Charset;
   #760 = Utf8               java/nio/charset/StandardCharsets
   #761 = Utf8               ISO_8859_1
   #762 = Utf8               Ljava/nio/charset/Charset;
   #763 = Methodref          #253.#764    // java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
   #764 = NameAndType        #765:#766    // newEncoder:()Ljava/nio/charset/CharsetEncoder;
   #765 = Utf8               newEncoder
   #766 = Utf8               ()Ljava/nio/charset/CharsetEncoder;
   #767 = Methodref          #768.#769    // java/nio/charset/CharsetEncoder.canEncode:(Ljava/lang/CharSequence;)Z
   #768 = Class              #770         // java/nio/charset/CharsetEncoder
   #769 = NameAndType        #771:#772    // canEncode:(Ljava/lang/CharSequence;)Z
   #770 = Utf8               java/nio/charset/CharsetEncoder
   #771 = Utf8               canEncode
   #772 = Utf8               (Ljava/lang/CharSequence;)Z
   #773 = Methodref          #253.#774    // java/nio/charset/Charset.displayName:()Ljava/lang/String;
   #774 = NameAndType        #775:#160    // displayName:()Ljava/lang/String;
   #775 = Utf8               displayName
   #776 = InvokeDynamic      #9:#315      // #9:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #777 = InvokeDynamic      #5:#575      // #5:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #778 = Methodref          #779.#780    // java/util/Base64.getEncoder:()Ljava/util/Base64$Encoder;
   #779 = Class              #781         // java/util/Base64
   #780 = NameAndType        #782:#783    // getEncoder:()Ljava/util/Base64$Encoder;
   #781 = Utf8               java/util/Base64
   #782 = Utf8               getEncoder
   #783 = Utf8               ()Ljava/util/Base64$Encoder;
   #784 = Methodref          #164.#785    // java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
   #785 = NameAndType        #786:#787    // getBytes:(Ljava/nio/charset/Charset;)[B
   #786 = Utf8               getBytes
   #787 = Utf8               (Ljava/nio/charset/Charset;)[B
   #788 = Methodref          #789.#790    // java/util/Base64$Encoder.encode:([B)[B
   #789 = Class              #791         // java/util/Base64$Encoder
   #790 = NameAndType        #792:#793    // encode:([B)[B
   #791 = Utf8               java/util/Base64$Encoder
   #792 = Utf8               encode
   #793 = Utf8               ([B)[B
   #794 = Methodref          #164.#795    // java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
   #795 = NameAndType        #11:#796     // "<init>":([BLjava/nio/charset/Charset;)V
   #796 = Utf8               ([BLjava/nio/charset/Charset;)V
   #797 = Methodref          #20.#798     // org/springframework/http/HttpHeaders.addAll:(Ljava/lang/String;Ljava/util/List;)V
   #798 = NameAndType        #585:#799    // addAll:(Ljava/lang/String;Ljava/util/List;)V
   #799 = Utf8               (Ljava/lang/String;Ljava/util/List;)V
   #800 = Methodref          #20.#801     // org/springframework/http/HttpHeaders.add:(Ljava/lang/String;Ljava/lang/String;)V
   #801 = NameAndType        #174:#62     // add:(Ljava/lang/String;Ljava/lang/String;)V
   #802 = Methodref          #20.#803     // org/springframework/http/HttpHeaders.putIfAbsent:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
   #803 = NameAndType        #704:#804    // putIfAbsent:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
   #804 = Utf8               (Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
   #805 = Methodref          #20.#806     // org/springframework/http/HttpHeaders.put:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
   #806 = NameAndType        #680:#804    // put:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
   #807 = InterfaceMethodref #808.#809    // java/util/Map$Entry.getValue:()Ljava/lang/Object;
   #808 = Class              #810         // java/util/Map$Entry
   #809 = NameAndType        #811:#156    // getValue:()Ljava/lang/Object;
   #810 = Utf8               java/util/Map$Entry
   #811 = Utf8               getValue
   #812 = InterfaceMethodref #808.#813    // java/util/Map$Entry.getKey:()Ljava/lang/Object;
   #813 = NameAndType        #814:#156    // getKey:()Ljava/lang/Object;
   #814 = Utf8               getKey
   #815 = InterfaceMethodref #81.#816     // java/util/List.get:(I)Ljava/lang/Object;
   #816 = NameAndType        #43:#817     // get:(I)Ljava/lang/Object;
   #817 = Utf8               (I)Ljava/lang/Object;
   #818 = InvokeDynamic      #10:#315     // #10:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
   #819 = InvokeDynamic      #11:#122     // #11:apply:()Ljava/util/function/Function;
   #820 = Methodref          #736.#821    // java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
   #821 = NameAndType        #739:#822    // joining:(Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
   #822 = Utf8               (Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
   #823 = Methodref          #116.#578    // java/util/Locale$LanguageRange."<init>":(Ljava/lang/String;)V
   #824 = Methodref          #116.#825    // java/util/Locale$LanguageRange.getWeight:()D
   #825 = NameAndType        #826:#827    // getWeight:()D
   #826 = Utf8               getWeight
   #827 = Utf8               ()D
   #828 = Methodref          #69.#829     // java/text/DecimalFormat.format:(D)Ljava/lang/String;
   #829 = NameAndType        #537:#830    // format:(D)Ljava/lang/String;
   #830 = Utf8               (D)Ljava/lang/String;
   #831 = InvokeDynamic      #12:#575     // #12:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
   #832 = Class              #833         // org/springframework/util/LinkedMultiValueMap
   #833 = Utf8               org/springframework/util/LinkedMultiValueMap
   #834 = Methodref          #832.#26     // org/springframework/util/LinkedMultiValueMap."<init>":()V
   #835 = String             #836         // \\*|\\s*((W\\/)?(\"[^\"]*\"))\\s*,?
   #836 = Utf8               \\*|\\s*((W\\/)?(\"[^\"]*\"))\\s*,?
   #837 = Methodref          #632.#838    // java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
   #838 = NameAndType        #839:#840    // compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
   #839 = Utf8               compile
   #840 = Utf8               (Ljava/lang/String;)Ljava/util/regex/Pattern;
   #841 = Class              #842         // java/text/DecimalFormatSymbols
   #842 = Utf8               java/text/DecimalFormatSymbols
   #843 = Methodref          #841.#844    // java/text/DecimalFormatSymbols."<init>":(Ljava/util/Locale;)V
   #844 = NameAndType        #11:#845     // "<init>":(Ljava/util/Locale;)V
   #845 = Utf8               (Ljava/util/Locale;)V
   #846 = String             #488         // GMT
   #847 = Methodref          #848.#849    // java/time/ZoneId.of:(Ljava/lang/String;)Ljava/time/ZoneId;
   #848 = Class              #850         // java/time/ZoneId
   #849 = NameAndType        #851:#852    // of:(Ljava/lang/String;)Ljava/time/ZoneId;
   #850 = Utf8               java/time/ZoneId
   #851 = Utf8               of
   #852 = Utf8               (Ljava/lang/String;)Ljava/time/ZoneId;
   #853 = String             #854         // EEE, dd MMM yyyy HH:mm:ss zzz
   #854 = Utf8               EEE, dd MMM yyyy HH:mm:ss zzz
   #855 = Fieldref           #4.#856      // java/util/Locale.US:Ljava/util/Locale;
   #856 = NameAndType        #857:#8      // US:Ljava/util/Locale;
   #857 = Utf8               US
   #858 = Methodref          #534.#859    // java/time/format/DateTimeFormatter.ofPattern:(Ljava/lang/String;Ljava/util/Locale;)Ljava/time/format/DateTimeFormatter;
   #859 = NameAndType        #860:#861    // ofPattern:(Ljava/lang/String;Ljava/util/Locale;)Ljava/time/format/DateTimeFormatter;
   #860 = Utf8               ofPattern
   #861 = Utf8               (Ljava/lang/String;Ljava/util/Locale;)Ljava/time/format/DateTimeFormatter;
   #862 = Methodref          #534.#863    // java/time/format/DateTimeFormatter.withZone:(Ljava/time/ZoneId;)Ljava/time/format/DateTimeFormatter;
   #863 = NameAndType        #864:#865    // withZone:(Ljava/time/ZoneId;)Ljava/time/format/DateTimeFormatter;
   #864 = Utf8               withZone
   #865 = Utf8               (Ljava/time/ZoneId;)Ljava/time/format/DateTimeFormatter;
   #866 = Fieldref           #534.#867    // java/time/format/DateTimeFormatter.RFC_1123_DATE_TIME:Ljava/time/format/DateTimeFormatter;
   #867 = NameAndType        #868:#532    // RFC_1123_DATE_TIME:Ljava/time/format/DateTimeFormatter;
   #868 = Utf8               RFC_1123_DATE_TIME
   #869 = String             #870         // EEEE, dd-MMM-yy HH:mm:ss zzz
   #870 = Utf8               EEEE, dd-MMM-yy HH:mm:ss zzz
   #871 = String             #872         // EEE MMM dd HH:mm:ss yyyy
   #872 = Utf8               EEE MMM dd HH:mm:ss yyyy
   #873 = Class              #874         // java/io/Serializable
   #874 = Utf8               java/io/Serializable
   #875 = Utf8               serialVersionUID
   #876 = Utf8               J
   #877 = Utf8               ConstantValue
   #878 = Long               -8578554704772377436l
   #880 = Utf8               ACCEPT
   #881 = Utf8               Ljava/lang/String;
   #882 = Utf8               ACCEPT_CHARSET
   #883 = Utf8               ACCEPT_ENCODING
   #884 = String             #885         // Accept-Encoding
   #885 = Utf8               Accept-Encoding
   #886 = Utf8               ACCEPT_LANGUAGE
   #887 = Utf8               ACCEPT_PATCH
   #888 = Utf8               ACCEPT_RANGES
   #889 = String             #890         // Accept-Ranges
   #890 = Utf8               Accept-Ranges
   #891 = Utf8               ACCESS_CONTROL_ALLOW_CREDENTIALS
   #892 = Utf8               ACCESS_CONTROL_ALLOW_HEADERS
   #893 = Utf8               ACCESS_CONTROL_ALLOW_METHODS
   #894 = Utf8               ACCESS_CONTROL_ALLOW_ORIGIN
   #895 = Utf8               ACCESS_CONTROL_EXPOSE_HEADERS
   #896 = Utf8               ACCESS_CONTROL_MAX_AGE
   #897 = Utf8               ACCESS_CONTROL_REQUEST_HEADERS
   #898 = Utf8               ACCESS_CONTROL_REQUEST_METHOD
   #899 = Utf8               AGE
   #900 = String             #901         // Age
   #901 = Utf8               Age
   #902 = Utf8               ALLOW
   #903 = Utf8               AUTHORIZATION
   #904 = Utf8               CACHE_CONTROL
   #905 = Utf8               CONNECTION
   #906 = Utf8               CONTENT_ENCODING
   #907 = Utf8               CONTENT_DISPOSITION
   #908 = Utf8               CONTENT_LANGUAGE
   #909 = Utf8               CONTENT_LENGTH
   #910 = Utf8               CONTENT_LOCATION
   #911 = Utf8               CONTENT_RANGE
   #912 = Utf8               CONTENT_TYPE
   #913 = Utf8               COOKIE
   #914 = String             #915         // Cookie
   #915 = Utf8               Cookie
   #916 = Utf8               DATE
   #917 = Utf8               ETAG
   #918 = Utf8               EXPECT
   #919 = String             #920         // Expect
   #920 = Utf8               Expect
   #921 = Utf8               EXPIRES
   #922 = Utf8               FROM
   #923 = String             #924         // From
   #924 = Utf8               From
   #925 = Utf8               HOST
   #926 = Utf8               IF_MATCH
   #927 = Utf8               IF_MODIFIED_SINCE
   #928 = Utf8               IF_NONE_MATCH
   #929 = Utf8               IF_RANGE
   #930 = String             #931         // If-Range
   #931 = Utf8               If-Range
   #932 = Utf8               IF_UNMODIFIED_SINCE
   #933 = Utf8               LAST_MODIFIED
   #934 = Utf8               LINK
   #935 = String             #936         // Link
   #936 = Utf8               Link
   #937 = Utf8               LOCATION
   #938 = Utf8               MAX_FORWARDS
   #939 = String             #940         // Max-Forwards
   #940 = Utf8               Max-Forwards
   #941 = Utf8               ORIGIN
   #942 = Utf8               PRAGMA
   #943 = Utf8               PROXY_AUTHENTICATE
   #944 = String             #945         // Proxy-Authenticate
   #945 = Utf8               Proxy-Authenticate
   #946 = Utf8               PROXY_AUTHORIZATION
   #947 = String             #948         // Proxy-Authorization
   #948 = Utf8               Proxy-Authorization
   #949 = Utf8               RANGE
   #950 = Utf8               REFERER
   #951 = String             #952         // Referer
   #952 = Utf8               Referer
   #953 = Utf8               RETRY_AFTER
   #954 = String             #955         // Retry-After
   #955 = Utf8               Retry-After
   #956 = Utf8               SERVER
   #957 = String             #958         // Server
   #958 = Utf8               Server
   #959 = Utf8               SET_COOKIE
   #960 = String             #961         // Set-Cookie
   #961 = Utf8               Set-Cookie
   #962 = Utf8               SET_COOKIE2
   #963 = String             #964         // Set-Cookie2
   #964 = Utf8               Set-Cookie2
   #965 = Utf8               TE
   #966 = String             #965         // TE
   #967 = Utf8               TRAILER
   #968 = String             #969         // Trailer
   #969 = Utf8               Trailer
   #970 = Utf8               TRANSFER_ENCODING
   #971 = String             #972         // Transfer-Encoding
   #972 = Utf8               Transfer-Encoding
   #973 = Utf8               UPGRADE
   #974 = Utf8               USER_AGENT
   #975 = String             #976         // User-Agent
   #976 = Utf8               User-Agent
   #977 = Utf8               VARY
   #978 = Utf8               VIA
   #979 = String             #980         // Via
   #980 = Utf8               Via
   #981 = Utf8               WARNING
   #982 = String             #983         // Warning
   #983 = Utf8               Warning
   #984 = Utf8               WWW_AUTHENTICATE
   #985 = String             #986         // WWW-Authenticate
   #986 = Utf8               WWW-Authenticate
   #987 = Utf8               Signature
   #988 = Utf8               Lorg/springframework/util/MultiValueMap<Ljava/lang/String;Ljava/lang/String;>;
   #989 = Utf8               Code
   #990 = Utf8               LineNumberTable
   #991 = Utf8               LocalVariableTable
   #992 = Utf8               this
   #993 = Utf8               LocalVariableTypeTable
   #994 = Utf8               MethodParameters
   #995 = Utf8               (Lorg/springframework/util/MultiValueMap<Ljava/lang/String;Ljava/lang/String;>;)V
   #996 = Utf8               getOrEmpty
   #997 = Utf8               headerName
   #998 = Utf8               Ljava/lang/Object;
   #999 = Utf8               Ljava/util/List;
  #1000 = Utf8               Ljava/util/List<Ljava/lang/String;>;
  #1001 = Utf8               StackMapTable
  #1002 = Utf8               (Ljava/lang/Object;)Ljava/util/List<Ljava/lang/String;>;
  #1003 = Utf8               setAccept
  #1004 = Utf8               acceptableMediaTypes
  #1005 = Utf8               Ljava/util/List<Lorg/springframework/http/MediaType;>;
  #1006 = Utf8               (Ljava/util/List<Lorg/springframework/http/MediaType;>;)V
  #1007 = Utf8               getAccept
  #1008 = Utf8               ()Ljava/util/List<Lorg/springframework/http/MediaType;>;
  #1009 = Utf8               languages
  #1010 = Utf8               decimal
  #1011 = Utf8               Ljava/text/DecimalFormat;
  #1012 = Utf8               Ljava/util/List<Ljava/util/Locale$LanguageRange;>;
  #1013 = Utf8               (Ljava/util/List<Ljava/util/Locale$LanguageRange;>;)V
  #1014 = Utf8               value
  #1015 = Utf8               ()Ljava/util/List<Ljava/util/Locale$LanguageRange;>;
  #1016 = Utf8               setAcceptLanguageAsLocales
  #1017 = Utf8               locales
  #1018 = Utf8               Ljava/util/List<Ljava/util/Locale;>;
  #1019 = Utf8               (Ljava/util/List<Ljava/util/Locale;>;)V
  #1020 = Utf8               getAcceptLanguageAsLocales
  #1021 = Utf8               range
  #1022 = Utf8               Ljava/util/Locale$LanguageRange;
  #1023 = Utf8               ranges
  #1024 = Utf8               ()Ljava/util/List<Ljava/util/Locale;>;
  #1025 = Utf8               setAcceptPatch
  #1026 = Utf8               mediaTypes
  #1027 = Utf8               getAcceptPatch
  #1028 = Utf8               setAccessControlAllowCredentials
  #1029 = Utf8               (Z)V
  #1030 = Utf8               allowCredentials
  #1031 = Utf8               Z
  #1032 = Utf8               getAccessControlAllowCredentials
  #1033 = Utf8               setAccessControlAllowHeaders
  #1034 = Utf8               allowedHeaders
  #1035 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)V
  #1036 = Utf8               getAccessControlAllowHeaders
  #1037 = Utf8               ()Ljava/util/List<Ljava/lang/String;>;
  #1038 = Utf8               setAccessControlAllowMethods
  #1039 = Utf8               allowedMethods
  #1040 = Utf8               Ljava/util/List<Lorg/springframework/http/HttpMethod;>;
  #1041 = Utf8               (Ljava/util/List<Lorg/springframework/http/HttpMethod;>;)V
  #1042 = Utf8               getAccessControlAllowMethods
  #1043 = Utf8               method
  #1044 = Utf8               Lorg/springframework/http/HttpMethod;
  #1045 = Utf8               token
  #1046 = Utf8               tokens
  #1047 = Utf8               [Ljava/lang/String;
  #1048 = Utf8               result
  #1049 = Class              #1047        // "[Ljava/lang/String;"
  #1050 = Utf8               ()Ljava/util/List<Lorg/springframework/http/HttpMethod;>;
  #1051 = Utf8               setAccessControlAllowOrigin
  #1052 = Utf8               allowedOrigin
  #1053 = Utf8               RuntimeVisibleParameterAnnotations
  #1054 = Utf8               Lorg/springframework/lang/Nullable;
  #1055 = Utf8               getAccessControlAllowOrigin
  #1056 = Utf8               RuntimeVisibleAnnotations
  #1057 = Utf8               setAccessControlExposeHeaders
  #1058 = Utf8               exposedHeaders
  #1059 = Utf8               getAccessControlExposeHeaders
  #1060 = Utf8               setAccessControlMaxAge
  #1061 = Utf8               (Ljava/time/Duration;)V
  #1062 = Utf8               maxAge
  #1063 = Utf8               Ljava/time/Duration;
  #1064 = Utf8               (J)V
  #1065 = Utf8               getAccessControlMaxAge
  #1066 = Utf8               setAccessControlRequestHeaders
  #1067 = Utf8               requestHeaders
  #1068 = Utf8               getAccessControlRequestHeaders
  #1069 = Utf8               setAccessControlRequestMethod
  #1070 = Utf8               (Lorg/springframework/http/HttpMethod;)V
  #1071 = Utf8               requestMethod
  #1072 = Utf8               getAccessControlRequestMethod
  #1073 = Utf8               ()Lorg/springframework/http/HttpMethod;
  #1074 = Utf8               setAcceptCharset
  #1075 = Utf8               charset
  #1076 = Utf8               acceptableCharsets
  #1077 = Utf8               joiner
  #1078 = Utf8               Ljava/util/StringJoiner;
  #1079 = Utf8               Ljava/util/List<Ljava/nio/charset/Charset;>;
  #1080 = Utf8               (Ljava/util/List<Ljava/nio/charset/Charset;>;)V
  #1081 = Utf8               getAcceptCharset
  #1082 = Utf8               charsetName
  #1083 = Utf8               paramIdx
  #1084 = Utf8               I
  #1085 = Utf8               ()Ljava/util/List<Ljava/nio/charset/Charset;>;
  #1086 = Utf8               setAllow
  #1087 = Utf8               (Ljava/util/Set;)V
  #1088 = Utf8               Ljava/util/Set;
  #1089 = Utf8               Ljava/util/Set<Lorg/springframework/http/HttpMethod;>;
  #1090 = Utf8               (Ljava/util/Set<Lorg/springframework/http/HttpMethod;>;)V
  #1091 = Utf8               getAllow
  #1092 = Utf8               ()Ljava/util/Set<Lorg/springframework/http/HttpMethod;>;
  #1093 = Utf8               username
  #1094 = Utf8               password
  #1095 = Utf8               encodedCredentials
  #1096 = Utf8               setBearerAuth
  #1097 = Utf8               setCacheControl
  #1098 = Utf8               (Lorg/springframework/http/CacheControl;)V
  #1099 = Utf8               cacheControl
  #1100 = Utf8               Lorg/springframework/http/CacheControl;
  #1101 = Utf8               getCacheControl
  #1102 = Utf8               setConnection
  #1103 = Utf8               connection
  #1104 = Utf8               getConnection
  #1105 = Utf8               setContentDispositionFormData
  #1106 = Utf8               disposition
  #1107 = Utf8               Lorg/springframework/http/ContentDisposition$Builder;
  #1108 = Utf8               contentDisposition
  #1109 = Utf8               Lorg/springframework/http/ContentDisposition;
  #1110 = Utf8               getContentDisposition
  #1111 = Utf8               setContentLanguage
  #1112 = Utf8               locale
  #1113 = Utf8               getContentLanguage
  #1114 = Utf8               ()Ljava/util/Locale;
  #1115 = Utf8               setContentLength
  #1116 = Utf8               contentLength
  #1117 = Utf8               getContentLength
  #1118 = Utf8               setContentType
  #1119 = Utf8               (Lorg/springframework/http/MediaType;)V
  #1120 = Utf8               mediaType
  #1121 = Utf8               Lorg/springframework/http/MediaType;
  #1122 = Utf8               getContentType
  #1123 = Utf8               ()Lorg/springframework/http/MediaType;
  #1124 = Utf8               (Ljava/time/ZonedDateTime;)V
  #1125 = Utf8               date
  #1126 = Utf8               Ljava/time/ZonedDateTime;
  #1127 = Utf8               (Ljava/time/Instant;)V
  #1128 = Utf8               Ljava/time/Instant;
  #1129 = Utf8               getDate
  #1130 = Utf8               setETag
  #1131 = Utf8               etag
  #1132 = Utf8               getETag
  #1133 = Utf8               setExpires
  #1134 = Utf8               expires
  #1135 = Utf8               getExpires
  #1136 = Utf8               setHost
  #1137 = Utf8               (Ljava/net/InetSocketAddress;)V
  #1138 = Utf8               port
  #1139 = Utf8               host
  #1140 = Utf8               Ljava/net/InetSocketAddress;
  #1141 = Utf8               getHost
  #1142 = Utf8               ()Ljava/net/InetSocketAddress;
  #1143 = Utf8               portString
  #1144 = Utf8               separator
  #1145 = Utf8               setIfMatch
  #1146 = Utf8               ifMatch
  #1147 = Utf8               ifMatchList
  #1148 = Utf8               getIfMatch
  #1149 = Utf8               setIfModifiedSince
  #1150 = Utf8               ifModifiedSince
  #1151 = Utf8               getIfModifiedSince
  #1152 = Utf8               setIfNoneMatch
  #1153 = Utf8               ifNoneMatch
  #1154 = Utf8               ifNoneMatchList
  #1155 = Utf8               getIfNoneMatch
  #1156 = Utf8               setIfUnmodifiedSince
  #1157 = Utf8               ifUnmodifiedSince
  #1158 = Utf8               getIfUnmodifiedSince
  #1159 = Utf8               setLastModified
  #1160 = Utf8               lastModified
  #1161 = Utf8               getLastModified
  #1162 = Utf8               setLocation
  #1163 = Utf8               (Ljava/net/URI;)V
  #1164 = Utf8               location
  #1165 = Utf8               Ljava/net/URI;
  #1166 = Utf8               getLocation
  #1167 = Utf8               ()Ljava/net/URI;
  #1168 = Utf8               setOrigin
  #1169 = Utf8               origin
  #1170 = Utf8               getOrigin
  #1171 = Utf8               setPragma
  #1172 = Utf8               pragma
  #1173 = Utf8               getPragma
  #1174 = Utf8               setRange
  #1175 = Utf8               Ljava/util/List<Lorg/springframework/http/HttpRange;>;
  #1176 = Utf8               (Ljava/util/List<Lorg/springframework/http/HttpRange;>;)V
  #1177 = Utf8               ()Ljava/util/List<Lorg/springframework/http/HttpRange;>;
  #1178 = Utf8               setUpgrade
  #1179 = Utf8               upgrade
  #1180 = Utf8               getUpgrade
  #1181 = Utf8               setVary
  #1182 = Utf8               getVary
  #1183 = Utf8               rejectInvalid
  #1184 = Utf8               zonedDateTime
  #1185 = Utf8               (Ljava/lang/String;)Ljava/time/ZonedDateTime;
  #1186 = Utf8               dateFormatter
  #1187 = Utf8               parametersIndex
  #1188 = Utf8               headerValue
  #1189 = Class              #566         // "[Ljava/time/format/DateTimeFormatter;"
  #1190 = Utf8               (Ljava/lang/String;)Ljava/util/List<Ljava/lang/String;>;
  #1191 = Utf8               ch
  #1192 = Utf8               C
  #1193 = Utf8               i
  #1194 = Utf8               str
  #1195 = Utf8               quoted
  #1196 = Utf8               builder
  #1197 = Utf8               Ljava/lang/StringBuilder;
  #1198 = Utf8               (Ljava/lang/StringBuilder;Ljava/util/List<Ljava/lang/String;>;Z)V
  #1199 = Utf8               clearContentHeaders
  #1200 = Utf8               Ljava/util/regex/Matcher;
  #1201 = Utf8               headerValues
  #1202 = Utf8               val
  #1203 = Utf8               (Ljava/util/List<Ljava/lang/String;>;)Ljava/lang/String;
  #1204 = Utf8               key
  #1205 = Utf8               Ljava/util/List<+Ljava/lang/String;>;
  #1206 = Utf8               (Ljava/lang/String;Ljava/util/List<+Ljava/lang/String;>;)V
  #1207 = Utf8               Ljava/util/Map;
  #1208 = Utf8               Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
  #1209 = Utf8               (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V
  #1210 = Utf8               ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
  #1211 = Utf8               (Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Ljava/lang/String;>;
  #1212 = Utf8               Ljava/util/Map<+Ljava/lang/String;+Ljava/util/List<Ljava/lang/String;>;>;
  #1213 = Utf8               (Ljava/util/Map<+Ljava/lang/String;+Ljava/util/List<Ljava/lang/String;>;>;)V
  #1214 = Utf8               ()Ljava/util/Set<Ljava/lang/String;>;
  #1215 = Utf8               ()Ljava/util/Collection<Ljava/util/List<Ljava/lang/String;>;>;
  #1216 = Utf8               ()Ljava/util/Set<Ljava/util/Map$Entry<Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;>;>;
  #1217 = Utf8               action
  #1218 = Utf8               Ljava/util/function/BiConsumer;
  #1219 = Utf8               Ljava/util/function/BiConsumer<-Ljava/lang/String;-Ljava/util/List<Ljava/lang/String;>;>;
  #1220 = Utf8               (Ljava/util/function/BiConsumer<-Ljava/lang/String;-Ljava/util/List<Ljava/lang/String;>;>;)V
  #1221 = Utf8               that
  #1222 = Utf8               other
  #1223 = Utf8               (Lorg/springframework/util/MultiValueMap;)Lorg/springframework/http/HttpHeaders;
  #1224 = Utf8               httpHeaders
  #1225 = Utf8               (Lorg/springframework/util/MultiValueMap<Ljava/lang/String;Ljava/lang/String;>;)Lorg/springframework/http/HttpHeaders;
  #1226 = Utf8               writableHttpHeaders
  #1227 = Utf8               (Lorg/springframework/util/MultiValueMap<Ljava/lang/String;Ljava/lang/String;>;)Ljava/lang/String;
  #1228 = Utf8               encoder
  #1229 = Utf8               Ljava/nio/charset/CharsetEncoder;
  #1230 = Utf8               credentialsString
  #1231 = Utf8               encodedBytes
  #1232 = Utf8               [B
  #1233 = Utf8               (Lorg/springframework/http/HttpHeaders;)Lorg/springframework/util/MultiValueMap<Ljava/lang/String;Ljava/lang/String;>;
  #1234 = Utf8               formatDate
  #1235 = Utf8               instant
  #1236 = Utf8               time
  #1237 = Utf8               lambda$formatHeaders$3
  #1238 = Utf8               (Ljava/util/Map$Entry;)Ljava/lang/String;
  #1239 = Utf8               entry
  #1240 = Utf8               Ljava/util/Map$Entry;
  #1241 = Utf8               lambda$formatHeaders$2
  #1242 = Utf8               s
  #1243 = Utf8               lambda$setAcceptLanguageAsLocales$1
  #1244 = Utf8               (Ljava/util/Locale;)Ljava/util/Locale$LanguageRange;
  #1245 = Utf8               lambda$setAcceptLanguage$0
  #1246 = Utf8               (Ljava/text/DecimalFormat;Ljava/util/Locale$LanguageRange;)Ljava/lang/String;
  #1247 = Utf8               <clinit>
  #1248 = Utf8               Ljava/lang/Object;Lorg/springframework/util/MultiValueMap<Ljava/lang/String;Ljava/lang/String;>;Ljava/io/Serializable;
  #1249 = Utf8               SourceFile
  #1250 = Utf8               HttpHeaders.java
  #1251 = Utf8               BootstrapMethods
  #1252 = MethodHandle       6:#1253      // REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #1253 = Methodref          #1254.#1255  // java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #1254 = Class              #1256        // java/lang/invoke/LambdaMetafactory
  #1255 = NameAndType        #1257:#1258  // metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #1256 = Utf8               java/lang/invoke/LambdaMetafactory
  #1257 = Utf8               metafactory
  #1258 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
  #1259 = MethodType         #378         //  (Ljava/lang/Object;)Ljava/lang/Object;
  #1260 = MethodHandle       6:#1261      // REF_invokeStatic org/springframework/http/HttpHeaders.lambda$setAcceptLanguage$0:(Ljava/text/DecimalFormat;Ljava/util/Locale$LanguageRange;)Ljava/lang/String;
  #1261 = Methodref          #20.#1262    // org/springframework/http/HttpHeaders.lambda$setAcceptLanguage$0:(Ljava/text/DecimalFormat;Ljava/util/Locale$LanguageRange;)Ljava/lang/String;
  #1262 = NameAndType        #1245:#1246  // lambda$setAcceptLanguage$0:(Ljava/text/DecimalFormat;Ljava/util/Locale$LanguageRange;)Ljava/lang/String;
  #1263 = MethodType         #1264        //  (Ljava/util/Locale$LanguageRange;)Ljava/lang/String;
  #1264 = Utf8               (Ljava/util/Locale$LanguageRange;)Ljava/lang/String;
  #1265 = MethodHandle       6:#1266      // REF_invokeStatic org/springframework/http/HttpHeaders.lambda$setAcceptLanguageAsLocales$1:(Ljava/util/Locale;)Ljava/util/Locale$LanguageRange;
  #1266 = Methodref          #20.#1267    // org/springframework/http/HttpHeaders.lambda$setAcceptLanguageAsLocales$1:(Ljava/util/Locale;)Ljava/util/Locale$LanguageRange;
  #1267 = NameAndType        #1243:#1244  // lambda$setAcceptLanguageAsLocales$1:(Ljava/util/Locale;)Ljava/util/Locale$LanguageRange;
  #1268 = MethodType         #1244        //  (Ljava/util/Locale;)Ljava/util/Locale$LanguageRange;
  #1269 = MethodHandle       6:#1270      // REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #1270 = Methodref          #1271.#1272  // java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #1271 = Class              #1273        // java/lang/invoke/StringConcatFactory
  #1272 = NameAndType        #316:#1274   // makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #1273 = Utf8               java/lang/invoke/StringConcatFactory
  #1274 = Utf8               (Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
  #1275 = String             #1276        // Basic \u0001
  #1276 = Utf8               Basic \u0001
  #1277 = String             #1278        // Bearer \u0001
  #1278 = Utf8               Bearer \u0001
  #1279 = MethodHandle       6:#168       // REF_invokeStatic java/util/Locale.forLanguageTag:(Ljava/lang/String;)Ljava/util/Locale;
  #1280 = MethodType         #171         //  (Ljava/lang/String;)Ljava/util/Locale;
  #1281 = String             #1282        // \u0001:\u0001
  #1282 = Utf8               \u0001:\u0001
  #1283 = String             #1284        // Cannot parse date value \"\u0001\" for \"\u0001\" header
  #1284 = Utf8               Cannot parse date value \"\u0001\" for \"\u0001\" header
  #1285 = String             #1286        // Could not parse header \'\u0001\' with value \'\u0001\'
  #1286 = Utf8               Could not parse header \'\u0001\' with value \'\u0001\'
  #1287 = MethodHandle       6:#1288      // REF_invokeStatic org/springframework/http/HttpHeaders.lambda$formatHeaders$3:(Ljava/util/Map$Entry;)Ljava/lang/String;
  #1288 = Methodref          #20.#1289    // org/springframework/http/HttpHeaders.lambda$formatHeaders$3:(Ljava/util/Map$Entry;)Ljava/lang/String;
  #1289 = NameAndType        #1237:#1238  // lambda$formatHeaders$3:(Ljava/util/Map$Entry;)Ljava/lang/String;
  #1290 = MethodType         #1238        //  (Ljava/util/Map$Entry;)Ljava/lang/String;
  #1291 = String             #1292        // Username or password contains characters that cannot be encoded to \u0001
  #1292 = Utf8               Username or password contains characters that cannot be encoded to \u0001
  #1293 = String             #1294        // \"\u0001\"
  #1294 = Utf8               \"\u0001\"
  #1295 = MethodHandle       6:#1296      // REF_invokeStatic org/springframework/http/HttpHeaders.lambda$formatHeaders$2:(Ljava/lang/String;)Ljava/lang/String;
  #1296 = Methodref          #20.#1297    // org/springframework/http/HttpHeaders.lambda$formatHeaders$2:(Ljava/lang/String;)Ljava/lang/String;
  #1297 = NameAndType        #1241:#108   // lambda$formatHeaders$2:(Ljava/lang/String;)Ljava/lang/String;
  #1298 = MethodType         #108         //  (Ljava/lang/String;)Ljava/lang/String;
  #1299 = String             #1300        // \u0001;q=\u0001
  #1300 = Utf8               \u0001;q=\u0001
  #1301 = Utf8               InnerClasses
  #1302 = Utf8               LanguageRange
  #1303 = Utf8               Builder
  #1304 = Utf8               Encoder
  #1305 = Class              #1306        // java/util/Map
  #1306 = Utf8               java/util/Map
  #1307 = Utf8               Entry
  #1308 = Class              #1309        // java/lang/invoke/MethodHandles$Lookup
  #1309 = Utf8               java/lang/invoke/MethodHandles$Lookup
  #1310 = Class              #1311        // java/lang/invoke/MethodHandles
  #1311 = Utf8               java/lang/invoke/MethodHandles
  #1312 = Utf8               Lookup
{
  public static final java.lang.String ACCEPT;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Accept

  public static final java.lang.String ACCEPT_CHARSET;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Accept-Charset

  public static final java.lang.String ACCEPT_ENCODING;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Accept-Encoding

  public static final java.lang.String ACCEPT_LANGUAGE;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Accept-Language

  public static final java.lang.String ACCEPT_PATCH;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Accept-Patch

  public static final java.lang.String ACCEPT_RANGES;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Accept-Ranges

  public static final java.lang.String ACCESS_CONTROL_ALLOW_CREDENTIALS;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Access-Control-Allow-Credentials

  public static final java.lang.String ACCESS_CONTROL_ALLOW_HEADERS;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Access-Control-Allow-Headers

  public static final java.lang.String ACCESS_CONTROL_ALLOW_METHODS;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Access-Control-Allow-Methods

  public static final java.lang.String ACCESS_CONTROL_ALLOW_ORIGIN;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Access-Control-Allow-Origin

  public static final java.lang.String ACCESS_CONTROL_EXPOSE_HEADERS;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Access-Control-Expose-Headers

  public static final java.lang.String ACCESS_CONTROL_MAX_AGE;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Access-Control-Max-Age

  public static final java.lang.String ACCESS_CONTROL_REQUEST_HEADERS;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Access-Control-Request-Headers

  public static final java.lang.String ACCESS_CONTROL_REQUEST_METHOD;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Access-Control-Request-Method

  public static final java.lang.String AGE;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Age

  public static final java.lang.String ALLOW;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Allow

  public static final java.lang.String AUTHORIZATION;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Authorization

  public static final java.lang.String CACHE_CONTROL;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Cache-Control

  public static final java.lang.String CONNECTION;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Connection

  public static final java.lang.String CONTENT_ENCODING;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Content-Encoding

  public static final java.lang.String CONTENT_DISPOSITION;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Content-Disposition

  public static final java.lang.String CONTENT_LANGUAGE;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Content-Language

  public static final java.lang.String CONTENT_LENGTH;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Content-Length

  public static final java.lang.String CONTENT_LOCATION;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Content-Location

  public static final java.lang.String CONTENT_RANGE;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Content-Range

  public static final java.lang.String CONTENT_TYPE;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Content-Type

  public static final java.lang.String COOKIE;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Cookie

  public static final java.lang.String DATE;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Date

  public static final java.lang.String ETAG;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String ETag

  public static final java.lang.String EXPECT;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Expect

  public static final java.lang.String EXPIRES;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Expires

  public static final java.lang.String FROM;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String From

  public static final java.lang.String HOST;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Host

  public static final java.lang.String IF_MATCH;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String If-Match

  public static final java.lang.String IF_MODIFIED_SINCE;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String If-Modified-Since

  public static final java.lang.String IF_NONE_MATCH;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String If-None-Match

  public static final java.lang.String IF_RANGE;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String If-Range

  public static final java.lang.String IF_UNMODIFIED_SINCE;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String If-Unmodified-Since

  public static final java.lang.String LAST_MODIFIED;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Last-Modified

  public static final java.lang.String LINK;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Link

  public static final java.lang.String LOCATION;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Location

  public static final java.lang.String MAX_FORWARDS;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Max-Forwards

  public static final java.lang.String ORIGIN;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Origin

  public static final java.lang.String PRAGMA;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Pragma

  public static final java.lang.String PROXY_AUTHENTICATE;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Proxy-Authenticate

  public static final java.lang.String PROXY_AUTHORIZATION;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Proxy-Authorization

  public static final java.lang.String RANGE;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Range

  public static final java.lang.String REFERER;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Referer

  public static final java.lang.String RETRY_AFTER;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Retry-After

  public static final java.lang.String SERVER;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Server

  public static final java.lang.String SET_COOKIE;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Set-Cookie

  public static final java.lang.String SET_COOKIE2;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Set-Cookie2

  public static final java.lang.String TE;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String TE

  public static final java.lang.String TRAILER;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Trailer

  public static final java.lang.String TRANSFER_ENCODING;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Transfer-Encoding

  public static final java.lang.String UPGRADE;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Upgrade

  public static final java.lang.String USER_AGENT;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String User-Agent

  public static final java.lang.String VARY;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Vary

  public static final java.lang.String VIA;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Via

  public static final java.lang.String WARNING;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String Warning

  public static final java.lang.String WWW_AUTHENTICATE;
    descriptor: Ljava/lang/String;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL
    ConstantValue: String WWW-Authenticate

  public static final org.springframework.http.HttpHeaders EMPTY;
    descriptor: Lorg/springframework/http/HttpHeaders;
    flags: (0x0019) ACC_PUBLIC, ACC_STATIC, ACC_FINAL

  final org.springframework.util.MultiValueMap<java.lang.String, java.lang.String> headers;
    descriptor: Lorg/springframework/util/MultiValueMap;
    flags: (0x0010) ACC_FINAL
    Signature: #988                         // Lorg/springframework/util/MultiValueMap<Ljava/lang/String;Ljava/lang/String;>;

  public org.springframework.http.HttpHeaders();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=5, locals=1, args_size=1
         0: aload_0
         1: new           #1                  // class org/springframework/util/LinkedCaseInsensitiveMap
         4: dup
         5: bipush        8
         7: getstatic     #3                  // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
        10: invokespecial #9                  // Method org/springframework/util/LinkedCaseInsensitiveMap."<init>":(ILjava/util/Locale;)V
        13: invokestatic  #13                 // Method org/springframework/util/CollectionUtils.toMultiValueMap:(Ljava/util/Map;)Lorg/springframework/util/MultiValueMap;
        16: invokespecial #19                 // Method "<init>":(Lorg/springframework/util/MultiValueMap;)V
        19: return
      LineNumberTable:
        line 433: 0
        line 434: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lorg/springframework/http/HttpHeaders;

  public org.springframework.http.HttpHeaders(org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>);
    descriptor: (Lorg/springframework/util/MultiValueMap;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: invokespecial #24                 // Method java/lang/Object."<init>":()V
         4: aload_1
         5: ldc           #29                 // String MultiValueMap must not be null
         7: invokestatic  #31                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
        10: aload_0
        11: aload_1
        12: putfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
        15: return
      LineNumberTable:
        line 443: 0
        line 444: 4
        line 445: 10
        line 446: 15
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      16     0  this   Lorg/springframework/http/HttpHeaders;
            0      16     1 headers   Lorg/springframework/util/MultiValueMap;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      16     1 headers   Lorg/springframework/util/MultiValueMap<Ljava/lang/String;Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      headers
    Signature: #995                         // (Lorg/springframework/util/MultiValueMap<Ljava/lang/String;Ljava/lang/String;>;)V

  public java.util.List<java.lang.String> getOrEmpty(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #41                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
         5: astore_2
         6: aload_2
         7: ifnull        14
        10: aload_2
        11: goto          17
        14: invokestatic  #45                 // Method java/util/Collections.emptyList:()Ljava/util/List;
        17: areturn
      LineNumberTable:
        line 456: 0
        line 457: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/springframework/http/HttpHeaders;
            0      18     1 headerName   Ljava/lang/Object;
            6      12     2 values   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            6      12     2 values   Ljava/util/List<Ljava/lang/String;>;
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ class java/util/List ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/util/List ]
    MethodParameters:
      Name                           Flags
      headerName
    Signature: #1002                        // (Ljava/lang/Object;)Ljava/util/List<Ljava/lang/String;>;

  public void setAccept(java.util.List<org.springframework.http.MediaType>);
    descriptor: (Ljava/util/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc           #51                 // String Accept
         3: aload_1
         4: invokestatic  #53                 // Method org/springframework/http/MediaType.toString:(Ljava/util/Collection;)Ljava/lang/String;
         7: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        10: return
      LineNumberTable:
        line 465: 0
        line 466: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/springframework/http/HttpHeaders;
            0      11     1 acceptableMediaTypes   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      11     1 acceptableMediaTypes   Ljava/util/List<Lorg/springframework/http/MediaType;>;
    MethodParameters:
      Name                           Flags
      acceptableMediaTypes
    Signature: #1006                        // (Ljava/util/List<Lorg/springframework/http/MediaType;>;)V

  public java.util.List<org.springframework.http.MediaType> getAccept();
    descriptor: ()Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc           #51                 // String Accept
         3: invokevirtual #41                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
         6: invokestatic  #63                 // Method org/springframework/http/MediaType.parseMediaTypes:(Ljava/util/List;)Ljava/util/List;
         9: areturn
      LineNumberTable:
        line 474: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/springframework/http/HttpHeaders;
    Signature: #1008                        // ()Ljava/util/List<Lorg/springframework/http/MediaType;>;

  public void setAcceptLanguage(java.util.List<java.util.Locale$LanguageRange>);
    descriptor: (Ljava/util/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: aload_1
         1: ldc           #67                 // String LanguageRange List must not be null
         3: invokestatic  #31                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
         6: new           #69                 // class java/text/DecimalFormat
         9: dup
        10: ldc           #71                 // String 0.0
        12: getstatic     #73                 // Field DECIMAL_FORMAT_SYMBOLS:Ljava/text/DecimalFormatSymbols;
        15: invokespecial #77                 // Method java/text/DecimalFormat."<init>":(Ljava/lang/String;Ljava/text/DecimalFormatSymbols;)V
        18: astore_2
        19: aload_1
        20: invokeinterface #80,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
        25: aload_2
        26: invokedynamic #86,  0             // InvokeDynamic #0:apply:(Ljava/text/DecimalFormat;)Ljava/util/function/Function;
        31: invokeinterface #90,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
        36: invokeinterface #96,  1           // InterfaceMethod java/util/stream/Stream.toList:()Ljava/util/List;
        41: astore_3
        42: aload_0
        43: ldc           #99                 // String Accept-Language
        45: aload_0
        46: aload_3
        47: invokevirtual #101                // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
        50: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        53: return
      LineNumberTable:
        line 483: 0
        line 484: 6
        line 485: 19
        line 486: 31
        line 490: 36
        line 491: 42
        line 492: 53
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      54     0  this   Lorg/springframework/http/HttpHeaders;
            0      54     1 languages   Ljava/util/List;
           19      35     2 decimal   Ljava/text/DecimalFormat;
           42      12     3 values   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      54     1 languages   Ljava/util/List<Ljava/util/Locale$LanguageRange;>;
           42      12     3 values   Ljava/util/List<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      languages
    Signature: #1013                        // (Ljava/util/List<Ljava/util/Locale$LanguageRange;>;)V

  public java.util.List<java.util.Locale$LanguageRange> getAcceptLanguage();
    descriptor: ()Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: ldc           #99                 // String Accept-Language
         3: invokevirtual #105                // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
         6: astore_1
         7: aload_1
         8: invokestatic  #109                // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
        11: ifeq          21
        14: aload_1
        15: invokestatic  #115                // Method java/util/Locale$LanguageRange.parse:(Ljava/lang/String;)Ljava/util/List;
        18: goto          24
        21: invokestatic  #45                 // Method java/util/Collections.emptyList:()Ljava/util/List;
        24: areturn
      LineNumberTable:
        line 504: 0
        line 505: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      25     0  this   Lorg/springframework/http/HttpHeaders;
            7      18     1 value   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 21
          locals = [ class java/lang/String ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ class java/util/List ]
    Signature: #1015                        // ()Ljava/util/List<Ljava/util/Locale$LanguageRange;>;

  public void setAcceptLanguageAsLocales(java.util.List<java.util.Locale>);
    descriptor: (Ljava/util/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokeinterface #80,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
         7: invokedynamic #121,  0            // InvokeDynamic #1:apply:()Ljava/util/function/Function;
        12: invokeinterface #90,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
        17: invokeinterface #96,  1           // InterfaceMethod java/util/stream/Stream.toList:()Ljava/util/List;
        22: invokevirtual #124                // Method setAcceptLanguage:(Ljava/util/List;)V
        25: return
      LineNumberTable:
        line 513: 0
        line 514: 12
        line 515: 17
        line 513: 22
        line 516: 25
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      26     0  this   Lorg/springframework/http/HttpHeaders;
            0      26     1 locales   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      26     1 locales   Ljava/util/List<Ljava/util/Locale;>;
    MethodParameters:
      Name                           Flags
      locales
    Signature: #1019                        // (Ljava/util/List<Ljava/util/Locale;>;)V

  public java.util.List<java.util.Locale> getAcceptLanguageAsLocales();
    descriptor: ()Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=1
         0: aload_0
         1: invokevirtual #128                // Method getAcceptLanguage:()Ljava/util/List;
         4: astore_1
         5: aload_1
         6: invokeinterface #131,  1          // InterfaceMethod java/util/List.isEmpty:()Z
        11: ifeq          18
        14: invokestatic  #45                 // Method java/util/Collections.emptyList:()Ljava/util/List;
        17: areturn
        18: new           #135                // class java/util/ArrayList
        21: dup
        22: aload_1
        23: invokeinterface #137,  1          // InterfaceMethod java/util/List.size:()I
        28: invokespecial #141                // Method java/util/ArrayList."<init>":(I)V
        31: astore_2
        32: aload_1
        33: invokeinterface #144,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
        38: astore_3
        39: aload_3
        40: invokeinterface #148,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
        45: ifeq          90
        48: aload_3
        49: invokeinterface #153,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        54: checkcast     #116                // class java/util/Locale$LanguageRange
        57: astore        4
        59: aload         4
        61: invokevirtual #157                // Method java/util/Locale$LanguageRange.getRange:()Ljava/lang/String;
        64: ldc           #161                // String *
        66: invokevirtual #163                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        69: ifne          87
        72: aload_2
        73: aload         4
        75: invokevirtual #157                // Method java/util/Locale$LanguageRange.getRange:()Ljava/lang/String;
        78: invokestatic  #168                // Method java/util/Locale.forLanguageTag:(Ljava/lang/String;)Ljava/util/Locale;
        81: invokeinterface #172,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
        86: pop
        87: goto          39
        90: aload_2
        91: areturn
      LineNumberTable:
        line 526: 0
        line 527: 5
        line 528: 14
        line 531: 18
        line 532: 32
        line 533: 59
        line 534: 72
        line 536: 87
        line 537: 90
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           59      28     4 range   Ljava/util/Locale$LanguageRange;
            0      92     0  this   Lorg/springframework/http/HttpHeaders;
            5      87     1 ranges   Ljava/util/List;
           32      60     2 locales   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            5      87     1 ranges   Ljava/util/List<Ljava/util/Locale$LanguageRange;>;
           32      60     2 locales   Ljava/util/List<Ljava/util/Locale;>;
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [ class java/util/List ]
        frame_type = 253 /* append */
          offset_delta = 20
          locals = [ class java/util/List, class java/util/Iterator ]
        frame_type = 47 /* same */
        frame_type = 250 /* chop */
          offset_delta = 2
    Signature: #1024                        // ()Ljava/util/List<Ljava/util/Locale;>;

  public void setAcceptPatch(java.util.List<org.springframework.http.MediaType>);
    descriptor: (Ljava/util/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc           #176                // String Accept-Patch
         3: aload_1
         4: invokestatic  #53                 // Method org/springframework/http/MediaType.toString:(Ljava/util/Collection;)Ljava/lang/String;
         7: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        10: return
      LineNumberTable:
        line 546: 0
        line 547: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/springframework/http/HttpHeaders;
            0      11     1 mediaTypes   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      11     1 mediaTypes   Ljava/util/List<Lorg/springframework/http/MediaType;>;
    MethodParameters:
      Name                           Flags
      mediaTypes
    Signature: #1006                        // (Ljava/util/List<Lorg/springframework/http/MediaType;>;)V

  public java.util.List<org.springframework.http.MediaType> getAcceptPatch();
    descriptor: ()Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc           #176                // String Accept-Patch
         3: invokevirtual #41                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
         6: invokestatic  #63                 // Method org/springframework/http/MediaType.parseMediaTypes:(Ljava/util/List;)Ljava/util/List;
         9: areturn
      LineNumberTable:
        line 556: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/springframework/http/HttpHeaders;
    Signature: #1008                        // ()Ljava/util/List<Lorg/springframework/http/MediaType;>;

  public void setAccessControlAllowCredentials(boolean);
    descriptor: (Z)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc           #178                // String Access-Control-Allow-Credentials
         3: iload_1
         4: invokestatic  #180                // Method java/lang/Boolean.toString:(Z)Ljava/lang/String;
         7: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        10: return
      LineNumberTable:
        line 563: 0
        line 564: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/springframework/http/HttpHeaders;
            0      11     1 allowCredentials   Z
    MethodParameters:
      Name                           Flags
      allowCredentials

  public boolean getAccessControlAllowCredentials();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc           #178                // String Access-Control-Allow-Credentials
         3: invokevirtual #105                // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
         6: invokestatic  #185                // Method java/lang/Boolean.parseBoolean:(Ljava/lang/String;)Z
         9: ireturn
      LineNumberTable:
        line 570: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/springframework/http/HttpHeaders;

  public void setAccessControlAllowHeaders(java.util.List<java.lang.String>);
    descriptor: (Ljava/util/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: ldc           #188                // String Access-Control-Allow-Headers
         3: aload_0
         4: aload_1
         5: invokevirtual #101                // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
         8: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        11: return
      LineNumberTable:
        line 577: 0
        line 578: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/springframework/http/HttpHeaders;
            0      12     1 allowedHeaders   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      12     1 allowedHeaders   Ljava/util/List<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      allowedHeaders
    Signature: #1035                        // (Ljava/util/List<Ljava/lang/String;>;)V

  public java.util.List<java.lang.String> getAccessControlAllowHeaders();
    descriptor: ()Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc           #188                // String Access-Control-Allow-Headers
         3: invokevirtual #190                // Method getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
         6: areturn
      LineNumberTable:
        line 584: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/springframework/http/HttpHeaders;
    Signature: #1037                        // ()Ljava/util/List<Ljava/lang/String;>;

  public void setAccessControlAllowMethods(java.util.List<org.springframework.http.HttpMethod>);
    descriptor: (Ljava/util/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc           #193                // String Access-Control-Allow-Methods
         3: aload_1
         4: invokestatic  #195                // Method org/springframework/util/StringUtils.collectionToCommaDelimitedString:(Ljava/util/Collection;)Ljava/lang/String;
         7: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        10: return
      LineNumberTable:
        line 591: 0
        line 592: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/springframework/http/HttpHeaders;
            0      11     1 allowedMethods   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      11     1 allowedMethods   Ljava/util/List<Lorg/springframework/http/HttpMethod;>;
    MethodParameters:
      Name                           Flags
      allowedMethods
    Signature: #1041                        // (Ljava/util/List<Lorg/springframework/http/HttpMethod;>;)V

  public java.util.List<org.springframework.http.HttpMethod> getAccessControlAllowMethods();
    descriptor: ()Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=9, args_size=1
         0: aload_0
         1: ldc           #193                // String Access-Control-Allow-Methods
         3: invokevirtual #105                // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
         6: astore_1
         7: aload_1
         8: ifnull        77
        11: aload_1
        12: ldc           #198                // String ,
        14: invokestatic  #200                // Method org/springframework/util/StringUtils.tokenizeToStringArray:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
        17: astore_2
        18: new           #135                // class java/util/ArrayList
        21: dup
        22: aload_2
        23: arraylength
        24: invokespecial #141                // Method java/util/ArrayList."<init>":(I)V
        27: astore_3
        28: aload_2
        29: astore        4
        31: aload         4
        33: arraylength
        34: istore        5
        36: iconst_0
        37: istore        6
        39: iload         6
        41: iload         5
        43: if_icmpge     75
        46: aload         4
        48: iload         6
        50: aaload
        51: astore        7
        53: aload         7
        55: invokestatic  #204                // Method org/springframework/http/HttpMethod.valueOf:(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
        58: astore        8
        60: aload_3
        61: aload         8
        63: invokeinterface #172,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
        68: pop
        69: iinc          6, 1
        72: goto          39
        75: aload_3
        76: areturn
        77: invokestatic  #45                 // Method java/util/Collections.emptyList:()Ljava/util/List;
        80: areturn
      LineNumberTable:
        line 598: 0
        line 599: 7
        line 600: 11
        line 601: 18
        line 602: 28
        line 603: 53
        line 604: 60
        line 602: 69
        line 606: 75
        line 609: 77
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           60       9     8 method   Lorg/springframework/http/HttpMethod;
           53      16     7 token   Ljava/lang/String;
           18      59     2 tokens   [Ljava/lang/String;
           28      49     3 result   Ljava/util/List;
            0      81     0  this   Lorg/springframework/http/HttpHeaders;
            7      74     1 value   Ljava/lang/String;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           28      49     3 result   Ljava/util/List<Lorg/springframework/http/HttpMethod;>;
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 39
          locals = [ class org/springframework/http/HttpHeaders, class java/lang/String, class "[Ljava/lang/String;", class java/util/List, class "[Ljava/lang/String;", int, int ]
          stack = []
        frame_type = 248 /* chop */
          offset_delta = 35
        frame_type = 249 /* chop */
          offset_delta = 1
    Signature: #1050                        // ()Ljava/util/List<Lorg/springframework/http/HttpMethod;>;

  public void setAccessControlAllowOrigin(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc           #210                // String Access-Control-Allow-Origin
         3: aload_1
         4: invokevirtual #212                // Method setOrRemove:(Ljava/lang/String;Ljava/lang/String;)V
         7: return
      LineNumberTable:
        line 617: 0
        line 618: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/springframework/http/HttpHeaders;
            0       8     1 allowedOrigin   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      allowedOrigin
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #1054()
          org.springframework.lang.Nullable

  public java.lang.String getAccessControlAllowOrigin();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc           #210                // String Access-Control-Allow-Origin
         3: invokevirtual #215                // Method getFieldValues:(Ljava/lang/String;)Ljava/lang/String;
         6: areturn
      LineNumberTable:
        line 625: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/springframework/http/HttpHeaders;
    RuntimeVisibleAnnotations:
      0: #1054()
        org.springframework.lang.Nullable

  public void setAccessControlExposeHeaders(java.util.List<java.lang.String>);
    descriptor: (Ljava/util/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: ldc           #218                // String Access-Control-Expose-Headers
         3: aload_0
         4: aload_1
         5: invokevirtual #101                // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
         8: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        11: return
      LineNumberTable:
        line 632: 0
        line 633: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/springframework/http/HttpHeaders;
            0      12     1 exposedHeaders   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      12     1 exposedHeaders   Ljava/util/List<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      exposedHeaders
    Signature: #1035                        // (Ljava/util/List<Ljava/lang/String;>;)V

  public java.util.List<java.lang.String> getAccessControlExposeHeaders();
    descriptor: ()Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc           #218                // String Access-Control-Expose-Headers
         3: invokevirtual #190                // Method getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
         6: areturn
      LineNumberTable:
        line 639: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/springframework/http/HttpHeaders;
    Signature: #1037                        // ()Ljava/util/List<Ljava/lang/String;>;

  public void setAccessControlMaxAge(java.time.Duration);
    descriptor: (Ljava/time/Duration;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: ldc           #220                // String Access-Control-Max-Age
         3: aload_1
         4: invokevirtual #222                // Method java/time/Duration.getSeconds:()J
         7: invokestatic  #228                // Method java/lang/Long.toString:(J)Ljava/lang/String;
        10: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        13: return
      LineNumberTable:
        line 647: 0
        line 648: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/springframework/http/HttpHeaders;
            0      14     1 maxAge   Ljava/time/Duration;
    MethodParameters:
      Name                           Flags
      maxAge

  public void setAccessControlMaxAge(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: ldc           #220                // String Access-Control-Max-Age
         3: lload_1
         4: invokestatic  #228                // Method java/lang/Long.toString:(J)Ljava/lang/String;
         7: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        10: return
      LineNumberTable:
        line 654: 0
        line 655: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/springframework/http/HttpHeaders;
            0      11     1 maxAge   J
    MethodParameters:
      Name                           Flags
      maxAge

  public long getAccessControlMaxAge();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: ldc           #220                // String Access-Control-Max-Age
         3: invokevirtual #105                // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
         6: astore_1
         7: aload_1
         8: ifnull        18
        11: aload_1
        12: invokestatic  #233                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
        15: goto          21
        18: ldc2_w        #237                // long -1l
        21: lreturn
      LineNumberTable:
        line 662: 0
        line 663: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      22     0  this   Lorg/springframework/http/HttpHeaders;
            7      15     1 value   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [ class java/lang/String ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ long ]

  public void setAccessControlRequestHeaders(java.util.List<java.lang.String>);
    descriptor: (Ljava/util/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: ldc           #239                // String Access-Control-Request-Headers
         3: aload_0
         4: aload_1
         5: invokevirtual #101                // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
         8: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        11: return
      LineNumberTable:
        line 670: 0
        line 671: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/springframework/http/HttpHeaders;
            0      12     1 requestHeaders   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      12     1 requestHeaders   Ljava/util/List<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      requestHeaders
    Signature: #1035                        // (Ljava/util/List<Ljava/lang/String;>;)V

  public java.util.List<java.lang.String> getAccessControlRequestHeaders();
    descriptor: ()Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc           #239                // String Access-Control-Request-Headers
         3: invokevirtual #190                // Method getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
         6: areturn
      LineNumberTable:
        line 677: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/springframework/http/HttpHeaders;
    Signature: #1037                        // ()Ljava/util/List<Ljava/lang/String;>;

  public void setAccessControlRequestMethod(org.springframework.http.HttpMethod);
    descriptor: (Lorg/springframework/http/HttpMethod;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc           #241                // String Access-Control-Request-Method
         3: aload_1
         4: ifnull        14
         7: aload_1
         8: invokevirtual #243                // Method org/springframework/http/HttpMethod.name:()Ljava/lang/String;
        11: goto          15
        14: aconst_null
        15: invokevirtual #212                // Method setOrRemove:(Ljava/lang/String;Ljava/lang/String;)V
        18: return
      LineNumberTable:
        line 684: 0
        line 685: 18
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      19     0  this   Lorg/springframework/http/HttpHeaders;
            0      19     1 requestMethod   Lorg/springframework/http/HttpMethod;
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 14
          locals = [ class org/springframework/http/HttpHeaders, class org/springframework/http/HttpMethod ]
          stack = [ class org/springframework/http/HttpHeaders, class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/springframework/http/HttpHeaders, class org/springframework/http/HttpMethod ]
          stack = [ class org/springframework/http/HttpHeaders, class java/lang/String, class java/lang/String ]
    MethodParameters:
      Name                           Flags
      requestMethod
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #1054()
          org.springframework.lang.Nullable

  public org.springframework.http.HttpMethod getAccessControlRequestMethod();
    descriptor: ()Lorg/springframework/http/HttpMethod;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: ldc           #241                // String Access-Control-Request-Method
         3: invokevirtual #105                // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
         6: astore_1
         7: aload_1
         8: ifnull        16
        11: aload_1
        12: invokestatic  #204                // Method org/springframework/http/HttpMethod.valueOf:(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
        15: areturn
        16: aconst_null
        17: areturn
      LineNumberTable:
        line 692: 0
        line 693: 7
        line 694: 11
        line 697: 16
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      18     0  this   Lorg/springframework/http/HttpHeaders;
            7      11     1 requestMethod   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 16
          locals = [ class java/lang/String ]
    RuntimeVisibleAnnotations:
      0: #1054()
        org.springframework.lang.Nullable

  public void setAcceptCharset(java.util.List<java.nio.charset.Charset>);
    descriptor: (Ljava/util/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=5, args_size=2
         0: new           #246                // class java/util/StringJoiner
         3: dup
         4: ldc           #248                // String ,
         6: invokespecial #250                // Method java/util/StringJoiner."<init>":(Ljava/lang/CharSequence;)V
         9: astore_2
        10: aload_1
        11: invokeinterface #144,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
        16: astore_3
        17: aload_3
        18: invokeinterface #148,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
        23: ifeq          56
        26: aload_3
        27: invokeinterface #153,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        32: checkcast     #253                // class java/nio/charset/Charset
        35: astore        4
        37: aload_2
        38: aload         4
        40: invokevirtual #255                // Method java/nio/charset/Charset.name:()Ljava/lang/String;
        43: getstatic     #3                  // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
        46: invokevirtual #256                // Method java/lang/String.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;
        49: invokevirtual #260                // Method java/util/StringJoiner.add:(Ljava/lang/CharSequence;)Ljava/util/StringJoiner;
        52: pop
        53: goto          17
        56: aload_0
        57: ldc_w         #263                // String Accept-Charset
        60: aload_2
        61: invokevirtual #265                // Method java/util/StringJoiner.toString:()Ljava/lang/String;
        64: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        67: return
      LineNumberTable:
        line 706: 0
        line 707: 10
        line 708: 37
        line 709: 53
        line 710: 56
        line 711: 67
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           37      16     4 charset   Ljava/nio/charset/Charset;
            0      68     0  this   Lorg/springframework/http/HttpHeaders;
            0      68     1 acceptableCharsets   Ljava/util/List;
           10      58     2 joiner   Ljava/util/StringJoiner;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      68     1 acceptableCharsets   Ljava/util/List<Ljava/nio/charset/Charset;>;
      StackMapTable: number_of_entries = 2
        frame_type = 253 /* append */
          offset_delta = 17
          locals = [ class java/util/StringJoiner, class java/util/Iterator ]
        frame_type = 250 /* chop */
          offset_delta = 38
    MethodParameters:
      Name                           Flags
      acceptableCharsets
    Signature: #1080                        // (Ljava/util/List<Ljava/nio/charset/Charset;>;)V

  public java.util.List<java.nio.charset.Charset> getAcceptCharset();
    descriptor: ()Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=10, args_size=1
         0: aload_0
         1: ldc_w         #263                // String Accept-Charset
         4: invokevirtual #105                // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
         7: astore_1
         8: aload_1
         9: ifnull        116
        12: aload_1
        13: ldc           #198                // String ,
        15: invokestatic  #200                // Method org/springframework/util/StringUtils.tokenizeToStringArray:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
        18: astore_2
        19: new           #135                // class java/util/ArrayList
        22: dup
        23: aload_2
        24: arraylength
        25: invokespecial #141                // Method java/util/ArrayList."<init>":(I)V
        28: astore_3
        29: aload_2
        30: astore        4
        32: aload         4
        34: arraylength
        35: istore        5
        37: iconst_0
        38: istore        6
        40: iload         6
        42: iload         5
        44: if_icmpge     114
        47: aload         4
        49: iload         6
        51: aaload
        52: astore        7
        54: aload         7
        56: bipush        59
        58: invokevirtual #267                // Method java/lang/String.indexOf:(I)I
        61: istore        8
        63: iload         8
        65: iconst_m1
        66: if_icmpne     76
        69: aload         7
        71: astore        9
        73: goto          86
        76: aload         7
        78: iconst_0
        79: iload         8
        81: invokevirtual #271                // Method java/lang/String.substring:(II)Ljava/lang/String;
        84: astore        9
        86: aload         9
        88: ldc           #161                // String *
        90: invokevirtual #275                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        93: ifne          108
        96: aload_3
        97: aload         9
        99: invokestatic  #278                // Method java/nio/charset/Charset.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;
       102: invokeinterface #172,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       107: pop
       108: iinc          6, 1
       111: goto          40
       114: aload_3
       115: areturn
       116: invokestatic  #45                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       119: areturn
      LineNumberTable:
        line 718: 0
        line 719: 8
        line 720: 12
        line 721: 19
        line 722: 29
        line 723: 54
        line 725: 63
        line 726: 69
        line 729: 76
        line 731: 86
        line 732: 96
        line 722: 108
        line 735: 114
        line 738: 116
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           73       3     9 charsetName   Ljava/lang/String;
           63      45     8 paramIdx   I
           86      22     9 charsetName   Ljava/lang/String;
           54      54     7 token   Ljava/lang/String;
           19      97     2 tokens   [Ljava/lang/String;
           29      87     3 result   Ljava/util/List;
            0     120     0  this   Lorg/springframework/http/HttpHeaders;
            8     112     1 value   Ljava/lang/String;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           29      87     3 result   Ljava/util/List<Ljava/nio/charset/Charset;>;
      StackMapTable: number_of_entries = 6
        frame_type = 255 /* full_frame */
          offset_delta = 40
          locals = [ class org/springframework/http/HttpHeaders, class java/lang/String, class "[Ljava/lang/String;", class java/util/List, class "[Ljava/lang/String;", int, int ]
          stack = []
        frame_type = 253 /* append */
          offset_delta = 35
          locals = [ class java/lang/String, int ]
        frame_type = 252 /* append */
          offset_delta = 9
          locals = [ class java/lang/String ]
        frame_type = 248 /* chop */
          offset_delta = 21
        frame_type = 248 /* chop */
          offset_delta = 5
        frame_type = 249 /* chop */
          offset_delta = 1
    Signature: #1085                        // ()Ljava/util/List<Ljava/nio/charset/Charset;>;

  public void setAllow(java.util.Set<org.springframework.http.HttpMethod>);
    descriptor: (Ljava/util/Set;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #282                // String Allow
         4: aload_1
         5: invokestatic  #195                // Method org/springframework/util/StringUtils.collectionToCommaDelimitedString:(Ljava/util/Collection;)Ljava/lang/String;
         8: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        11: return
      LineNumberTable:
        line 747: 0
        line 748: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/springframework/http/HttpHeaders;
            0      12     1 allowedMethods   Ljava/util/Set;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      12     1 allowedMethods   Ljava/util/Set<Lorg/springframework/http/HttpMethod;>;
    MethodParameters:
      Name                           Flags
      allowedMethods
    Signature: #1090                        // (Ljava/util/Set<Lorg/springframework/http/HttpMethod;>;)V

  public java.util.Set<org.springframework.http.HttpMethod> getAllow();
    descriptor: ()Ljava/util/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=9, args_size=1
         0: aload_0
         1: ldc_w         #282                // String Allow
         4: invokevirtual #105                // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
         7: astore_1
         8: aload_1
         9: invokestatic  #284                // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
        12: ifeq          81
        15: aload_1
        16: ldc           #198                // String ,
        18: invokestatic  #200                // Method org/springframework/util/StringUtils.tokenizeToStringArray:(Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;
        21: astore_2
        22: new           #287                // class java/util/LinkedHashSet
        25: dup
        26: aload_2
        27: arraylength
        28: invokespecial #289                // Method java/util/LinkedHashSet."<init>":(I)V
        31: astore_3
        32: aload_2
        33: astore        4
        35: aload         4
        37: arraylength
        38: istore        5
        40: iconst_0
        41: istore        6
        43: iload         6
        45: iload         5
        47: if_icmpge     79
        50: aload         4
        52: iload         6
        54: aaload
        55: astore        7
        57: aload         7
        59: invokestatic  #204                // Method org/springframework/http/HttpMethod.valueOf:(Ljava/lang/String;)Lorg/springframework/http/HttpMethod;
        62: astore        8
        64: aload_3
        65: aload         8
        67: invokeinterface #290,  2          // InterfaceMethod java/util/Set.add:(Ljava/lang/Object;)Z
        72: pop
        73: iinc          6, 1
        76: goto          43
        79: aload_3
        80: areturn
        81: invokestatic  #293                // Method java/util/Collections.emptySet:()Ljava/util/Set;
        84: areturn
      LineNumberTable:
        line 756: 0
        line 757: 8
        line 758: 15
        line 759: 22
        line 760: 32
        line 761: 57
        line 762: 64
        line 760: 73
        line 764: 79
        line 767: 81
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           64       9     8 method   Lorg/springframework/http/HttpMethod;
           57      16     7 token   Ljava/lang/String;
           22      59     2 tokens   [Ljava/lang/String;
           32      49     3 result   Ljava/util/Set;
            0      85     0  this   Lorg/springframework/http/HttpHeaders;
            8      77     1 value   Ljava/lang/String;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           32      49     3 result   Ljava/util/Set<Lorg/springframework/http/HttpMethod;>;
      StackMapTable: number_of_entries = 3
        frame_type = 255 /* full_frame */
          offset_delta = 43
          locals = [ class org/springframework/http/HttpHeaders, class java/lang/String, class "[Ljava/lang/String;", class java/util/Set, class "[Ljava/lang/String;", int, int ]
          stack = []
        frame_type = 248 /* chop */
          offset_delta = 35
        frame_type = 249 /* chop */
          offset_delta = 1
    Signature: #1092                        // ()Ljava/util/Set<Lorg/springframework/http/HttpMethod;>;

  public void setBasicAuth(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: aconst_null
         4: invokevirtual #297                // Method setBasicAuth:(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
         7: return
      LineNumberTable:
        line 787: 0
        line 788: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/springframework/http/HttpHeaders;
            0       8     1 username   Ljava/lang/String;
            0       8     2 password   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      username
      password

  public void setBasicAuth(java.lang.String, java.lang.String, java.nio.charset.Charset);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=4
         0: aload_0
         1: aload_1
         2: aload_2
         3: aload_3
         4: invokestatic  #301                // Method encodeBasicAuth:(Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
         7: invokevirtual #305                // Method setBasicAuth:(Ljava/lang/String;)V
        10: return
      LineNumberTable:
        line 806: 0
        line 807: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/springframework/http/HttpHeaders;
            0      11     1 username   Ljava/lang/String;
            0      11     2 password   Ljava/lang/String;
            0      11     3 charset   Ljava/nio/charset/Charset;
    MethodParameters:
      Name                           Flags
      username
      password
      charset
    RuntimeVisibleParameterAnnotations:
      parameter 0:
      parameter 1:
      parameter 2:
        0: #1054()
          org.springframework.lang.Nullable

  public void setBasicAuth(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: ldc_w         #308                // String \'encodedCredentials\' must not be null or blank
         4: invokestatic  #310                // Method org/springframework/util/Assert.hasText:(Ljava/lang/String;Ljava/lang/String;)V
         7: aload_0
         8: ldc_w         #312                // String Authorization
        11: aload_1
        12: invokedynamic #314,  0            // InvokeDynamic #2:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
        17: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        20: return
      LineNumberTable:
        line 826: 0
        line 827: 7
        line 828: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/springframework/http/HttpHeaders;
            0      21     1 encodedCredentials   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      encodedCredentials

  public void setBearerAuth(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #312                // String Authorization
         4: aload_1
         5: invokedynamic #317,  0            // InvokeDynamic #3:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
        10: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        13: return
      LineNumberTable:
        line 838: 0
        line 839: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/springframework/http/HttpHeaders;
            0      14     1 token   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      token

  public void setCacheControl(org.springframework.http.CacheControl);
    descriptor: (Lorg/springframework/http/CacheControl;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #318                // String Cache-Control
         4: aload_1
         5: invokevirtual #320                // Method org/springframework/http/CacheControl.getHeaderValue:()Ljava/lang/String;
         8: invokevirtual #212                // Method setOrRemove:(Ljava/lang/String;Ljava/lang/String;)V
        11: return
      LineNumberTable:
        line 847: 0
        line 848: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/springframework/http/HttpHeaders;
            0      12     1 cacheControl   Lorg/springframework/http/CacheControl;
    MethodParameters:
      Name                           Flags
      cacheControl

  public void setCacheControl(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #318                // String Cache-Control
         4: aload_1
         5: invokevirtual #212                // Method setOrRemove:(Ljava/lang/String;Ljava/lang/String;)V
         8: return
      LineNumberTable:
        line 854: 0
        line 855: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1 cacheControl   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      cacheControl
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #1054()
          org.springframework.lang.Nullable

  public java.lang.String getCacheControl();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #318                // String Cache-Control
         4: invokevirtual #215                // Method getFieldValues:(Ljava/lang/String;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 862: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/springframework/http/HttpHeaders;
    RuntimeVisibleAnnotations:
      0: #1054()
        org.springframework.lang.Nullable

  public void setConnection(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #325                // String Connection
         4: aload_1
         5: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
         8: return
      LineNumberTable:
        line 869: 0
        line 870: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1 connection   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      connection

  public void setConnection(java.util.List<java.lang.String>);
    descriptor: (Ljava/util/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #325                // String Connection
         4: aload_0
         5: aload_1
         6: invokevirtual #101                // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
         9: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        12: return
      LineNumberTable:
        line 876: 0
        line 877: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/springframework/http/HttpHeaders;
            0      13     1 connection   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      13     1 connection   Ljava/util/List<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      connection
    Signature: #1035                        // (Ljava/util/List<Ljava/lang/String;>;)V

  public java.util.List<java.lang.String> getConnection();
    descriptor: ()Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #325                // String Connection
         4: invokevirtual #190                // Method getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
         7: areturn
      LineNumberTable:
        line 883: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/springframework/http/HttpHeaders;
    Signature: #1037                        // ()Ljava/util/List<Ljava/lang/String;>;

  public void setContentDispositionFormData(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=4, args_size=3
         0: aload_1
         1: ldc_w         #327                // String Name must not be null
         4: invokestatic  #31                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
         7: invokestatic  #329                // Method org/springframework/http/ContentDisposition.formData:()Lorg/springframework/http/ContentDisposition$Builder;
        10: aload_1
        11: invokeinterface #335,  2          // InterfaceMethod org/springframework/http/ContentDisposition$Builder.name:(Ljava/lang/String;)Lorg/springframework/http/ContentDisposition$Builder;
        16: astore_3
        17: aload_2
        18: invokestatic  #109                // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
        21: ifeq          32
        24: aload_3
        25: aload_2
        26: invokeinterface #340,  2          // InterfaceMethod org/springframework/http/ContentDisposition$Builder.filename:(Ljava/lang/String;)Lorg/springframework/http/ContentDisposition$Builder;
        31: pop
        32: aload_0
        33: aload_3
        34: invokeinterface #343,  1          // InterfaceMethod org/springframework/http/ContentDisposition$Builder.build:()Lorg/springframework/http/ContentDisposition;
        39: invokevirtual #347                // Method setContentDisposition:(Lorg/springframework/http/ContentDisposition;)V
        42: return
      LineNumberTable:
        line 898: 0
        line 899: 7
        line 900: 17
        line 901: 24
        line 903: 32
        line 904: 42
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      43     0  this   Lorg/springframework/http/HttpHeaders;
            0      43     1  name   Ljava/lang/String;
            0      43     2 filename   Ljava/lang/String;
           17      26     3 disposition   Lorg/springframework/http/ContentDisposition$Builder;
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 32
          locals = [ class org/springframework/http/ContentDisposition$Builder ]
    MethodParameters:
      Name                           Flags
      name
      filename
    RuntimeVisibleParameterAnnotations:
      parameter 0:
      parameter 1:
        0: #1054()
          org.springframework.lang.Nullable

  public void setContentDisposition(org.springframework.http.ContentDisposition);
    descriptor: (Lorg/springframework/http/ContentDisposition;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #351                // String Content-Disposition
         4: aload_1
         5: invokevirtual #353                // Method org/springframework/http/ContentDisposition.toString:()Ljava/lang/String;
         8: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        11: return
      LineNumberTable:
        line 917: 0
        line 918: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/springframework/http/HttpHeaders;
            0      12     1 contentDisposition   Lorg/springframework/http/ContentDisposition;
    MethodParameters:
      Name                           Flags
      contentDisposition

  public org.springframework.http.ContentDisposition getContentDisposition();
    descriptor: ()Lorg/springframework/http/ContentDisposition;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: ldc_w         #351                // String Content-Disposition
         4: invokevirtual #105                // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
         7: astore_1
         8: aload_1
         9: invokestatic  #109                // Method org/springframework/util/StringUtils.hasText:(Ljava/lang/String;)Z
        12: ifeq          20
        15: aload_1
        16: invokestatic  #354                // Method org/springframework/http/ContentDisposition.parse:(Ljava/lang/String;)Lorg/springframework/http/ContentDisposition;
        19: areturn
        20: invokestatic  #357                // Method org/springframework/http/ContentDisposition.empty:()Lorg/springframework/http/ContentDisposition;
        23: areturn
      LineNumberTable:
        line 926: 0
        line 927: 8
        line 928: 15
        line 930: 20
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lorg/springframework/http/HttpHeaders;
            8      16     1 contentDisposition   Ljava/lang/String;
      StackMapTable: number_of_entries = 1
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ class java/lang/String ]

  public void setContentLanguage(java.util.Locale);
    descriptor: (Ljava/util/Locale;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #360                // String Content-Language
         4: aload_1
         5: ifnull        15
         8: aload_1
         9: invokevirtual #362                // Method java/util/Locale.toLanguageTag:()Ljava/lang/String;
        12: goto          16
        15: aconst_null
        16: invokevirtual #212                // Method setOrRemove:(Ljava/lang/String;Ljava/lang/String;)V
        19: return
      LineNumberTable:
        line 941: 0
        line 942: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lorg/springframework/http/HttpHeaders;
            0      20     1 locale   Ljava/util/Locale;
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class org/springframework/http/HttpHeaders, class java/util/Locale ]
          stack = [ class org/springframework/http/HttpHeaders, class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/springframework/http/HttpHeaders, class java/util/Locale ]
          stack = [ class org/springframework/http/HttpHeaders, class java/lang/String, class java/lang/String ]
    MethodParameters:
      Name                           Flags
      locale
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #1054()
          org.springframework.lang.Nullable

  public java.util.Locale getContentLanguage();
    descriptor: ()Ljava/util/Locale;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #360                // String Content-Language
         4: invokevirtual #190                // Method getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
         7: invokeinterface #80,  1           // InterfaceMethod java/util/List.stream:()Ljava/util/stream/Stream;
        12: invokeinterface #365,  1          // InterfaceMethod java/util/stream/Stream.findFirst:()Ljava/util/Optional;
        17: invokedynamic #369,  0            // InvokeDynamic #4:apply:()Ljava/util/function/Function;
        22: invokevirtual #370                // Method java/util/Optional.map:(Ljava/util/function/Function;)Ljava/util/Optional;
        25: aconst_null
        26: invokevirtual #375                // Method java/util/Optional.orElse:(Ljava/lang/Object;)Ljava/lang/Object;
        29: checkcast     #4                  // class java/util/Locale
        32: areturn
      LineNumberTable:
        line 955: 0
        line 956: 7
        line 957: 12
        line 958: 22
        line 959: 26
        line 955: 32
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      33     0  this   Lorg/springframework/http/HttpHeaders;
    RuntimeVisibleAnnotations:
      0: #1054()
        org.springframework.lang.Nullable

  public void setContentLength(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: ldc_w         #379                // String Content-Length
         4: lload_1
         5: invokestatic  #228                // Method java/lang/Long.toString:(J)Ljava/lang/String;
         8: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        11: return
      LineNumberTable:
        line 967: 0
        line 968: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/springframework/http/HttpHeaders;
            0      12     1 contentLength   J
    MethodParameters:
      Name                           Flags
      contentLength

  public long getContentLength();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: ldc_w         #379                // String Content-Length
         4: invokevirtual #105                // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
         7: astore_1
         8: aload_1
         9: ifnull        19
        12: aload_1
        13: invokestatic  #233                // Method java/lang/Long.parseLong:(Ljava/lang/String;)J
        16: goto          22
        19: ldc2_w        #237                // long -1l
        22: lreturn
      LineNumberTable:
        line 976: 0
        line 977: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lorg/springframework/http/HttpHeaders;
            8      15     1 value   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [ class java/lang/String ]
        frame_type = 66 /* same_locals_1_stack_item */
          stack = [ long ]

  public void setContentType(org.springframework.http.MediaType);
    descriptor: (Lorg/springframework/http/MediaType;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: ifnull        54
         4: aload_1
         5: invokevirtual #381                // Method org/springframework/http/MediaType.isWildcardType:()Z
         8: ifne          15
        11: iconst_1
        12: goto          16
        15: iconst_0
        16: ldc_w         #384                // String Content-Type cannot contain wildcard type \'*\'
        19: invokestatic  #386                // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
        22: aload_1
        23: invokevirtual #390                // Method org/springframework/http/MediaType.isWildcardSubtype:()Z
        26: ifne          33
        29: iconst_1
        30: goto          34
        33: iconst_0
        34: ldc_w         #393                // String Content-Type cannot contain wildcard subtype \'*\'
        37: invokestatic  #386                // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
        40: aload_0
        41: ldc_w         #395                // String Content-Type
        44: aload_1
        45: invokevirtual #397                // Method org/springframework/http/MediaType.toString:()Ljava/lang/String;
        48: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        51: goto          62
        54: aload_0
        55: ldc_w         #395                // String Content-Type
        58: invokevirtual #398                // Method remove:(Ljava/lang/Object;)Ljava/util/List;
        61: pop
        62: return
      LineNumberTable:
        line 985: 0
        line 986: 4
        line 987: 22
        line 988: 40
        line 991: 54
        line 993: 62
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      63     0  this   Lorg/springframework/http/HttpHeaders;
            0      63     1 mediaType   Lorg/springframework/http/MediaType;
      StackMapTable: number_of_entries = 6
        frame_type = 15 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 16 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 19 /* same */
        frame_type = 7 /* same */
    MethodParameters:
      Name                           Flags
      mediaType
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #1054()
          org.springframework.lang.Nullable

  public org.springframework.http.MediaType getContentType();
    descriptor: ()Lorg/springframework/http/MediaType;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: ldc_w         #395                // String Content-Type
         4: invokevirtual #105                // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
         7: astore_1
         8: aload_1
         9: invokestatic  #284                // Method org/springframework/util/StringUtils.hasLength:(Ljava/lang/String;)Z
        12: ifeq          22
        15: aload_1
        16: invokestatic  #401                // Method org/springframework/http/MediaType.parseMediaType:(Ljava/lang/String;)Lorg/springframework/http/MediaType;
        19: goto          23
        22: aconst_null
        23: areturn
      LineNumberTable:
        line 1003: 0
        line 1004: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      24     0  this   Lorg/springframework/http/HttpHeaders;
            8      16     1 value   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 22
          locals = [ class java/lang/String ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class org/springframework/http/MediaType ]
    RuntimeVisibleAnnotations:
      0: #1054()
        org.springframework.lang.Nullable

  public void setDate(java.time.ZonedDateTime);
    descriptor: (Ljava/time/ZonedDateTime;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #405                // String Date
         4: aload_1
         5: invokevirtual #407                // Method setZonedDateTime:(Ljava/lang/String;Ljava/time/ZonedDateTime;)V
         8: return
      LineNumberTable:
        line 1013: 0
        line 1014: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1  date   Ljava/time/ZonedDateTime;
    MethodParameters:
      Name                           Flags
      date

  public void setDate(java.time.Instant);
    descriptor: (Ljava/time/Instant;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #405                // String Date
         4: aload_1
         5: invokevirtual #411                // Method setInstant:(Ljava/lang/String;Ljava/time/Instant;)V
         8: return
      LineNumberTable:
        line 1022: 0
        line 1023: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1  date   Ljava/time/Instant;
    MethodParameters:
      Name                           Flags
      date

  public void setDate(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: ldc_w         #405                // String Date
         4: lload_1
         5: invokevirtual #415                // Method setDate:(Ljava/lang/String;J)V
         8: return
      LineNumberTable:
        line 1032: 0
        line 1033: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1  date   J
    MethodParameters:
      Name                           Flags
      date

  public long getDate();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #405                // String Date
         4: invokevirtual #419                // Method getFirstDate:(Ljava/lang/String;)J
         7: lreturn
      LineNumberTable:
        line 1043: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/springframework/http/HttpHeaders;

  public void setETag(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_1
         1: ifnull        59
         4: aload_1
         5: ldc_w         #422                // String \"
         8: invokevirtual #163                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        11: ifne          24
        14: aload_1
        15: ldc_w         #424                // String W/
        18: invokevirtual #163                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        21: ifeq          28
        24: iconst_1
        25: goto          29
        28: iconst_0
        29: ldc_w         #426                // String Invalid ETag: does not start with W/ or \"
        32: invokestatic  #386                // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
        35: aload_1
        36: ldc_w         #422                // String \"
        39: invokevirtual #428                // Method java/lang/String.endsWith:(Ljava/lang/String;)Z
        42: ldc_w         #431                // String Invalid ETag: does not end with \"
        45: invokestatic  #386                // Method org/springframework/util/Assert.isTrue:(ZLjava/lang/String;)V
        48: aload_0
        49: ldc_w         #433                // String ETag
        52: aload_1
        53: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        56: goto          67
        59: aload_0
        60: ldc_w         #433                // String ETag
        63: invokevirtual #398                // Method remove:(Ljava/lang/Object;)Ljava/util/List;
        66: pop
        67: return
      LineNumberTable:
        line 1050: 0
        line 1051: 4
        line 1053: 35
        line 1054: 48
        line 1057: 59
        line 1059: 67
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      68     0  this   Lorg/springframework/http/HttpHeaders;
            0      68     1  etag   Ljava/lang/String;
      StackMapTable: number_of_entries = 5
        frame_type = 24 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 29 /* same */
        frame_type = 7 /* same */
    MethodParameters:
      Name                           Flags
      etag
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #1054()
          org.springframework.lang.Nullable

  public java.lang.String getETag();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #433                // String ETag
         4: invokevirtual #105                // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 1066: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/springframework/http/HttpHeaders;
    RuntimeVisibleAnnotations:
      0: #1054()
        org.springframework.lang.Nullable

  public void setExpires(java.time.ZonedDateTime);
    descriptor: (Ljava/time/ZonedDateTime;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #435                // String Expires
         4: aload_1
         5: invokevirtual #407                // Method setZonedDateTime:(Ljava/lang/String;Ljava/time/ZonedDateTime;)V
         8: return
      LineNumberTable:
        line 1075: 0
        line 1076: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1 expires   Ljava/time/ZonedDateTime;
    MethodParameters:
      Name                           Flags
      expires

  public void setExpires(java.time.Instant);
    descriptor: (Ljava/time/Instant;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #435                // String Expires
         4: aload_1
         5: invokevirtual #411                // Method setInstant:(Ljava/lang/String;Ljava/time/Instant;)V
         8: return
      LineNumberTable:
        line 1084: 0
        line 1085: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1 expires   Ljava/time/Instant;
    MethodParameters:
      Name                           Flags
      expires

  public void setExpires(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: ldc_w         #435                // String Expires
         4: lload_1
         5: invokevirtual #415                // Method setDate:(Ljava/lang/String;J)V
         8: return
      LineNumberTable:
        line 1094: 0
        line 1095: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1 expires   J
    MethodParameters:
      Name                           Flags
      expires

  public long getExpires();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #435                // String Expires
         4: iconst_0
         5: invokevirtual #437                // Method getFirstDate:(Ljava/lang/String;Z)J
         8: lreturn
      LineNumberTable:
        line 1105: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;

  public void setHost(java.net.InetSocketAddress);
    descriptor: (Ljava/net/InetSocketAddress;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=4, args_size=2
         0: aload_1
         1: ifnull        37
         4: aload_1
         5: invokevirtual #440                // Method java/net/InetSocketAddress.getHostString:()Ljava/lang/String;
         8: astore_2
         9: aload_1
        10: invokevirtual #445                // Method java/net/InetSocketAddress.getPort:()I
        13: istore_3
        14: iload_3
        15: ifeq          26
        18: aload_2
        19: iload_3
        20: invokedynamic #448,  0            // InvokeDynamic #5:makeConcatWithConstants:(Ljava/lang/String;I)Ljava/lang/String;
        25: astore_2
        26: aload_0
        27: ldc_w         #451                // String Host
        30: aload_2
        31: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        34: goto          46
        37: aload_0
        38: ldc_w         #451                // String Host
        41: aconst_null
        42: invokevirtual #453                // Method remove:(Ljava/lang/Object;Ljava/lang/Object;)Z
        45: pop
        46: return
      LineNumberTable:
        line 1116: 0
        line 1117: 4
        line 1118: 9
        line 1119: 14
        line 1120: 18
        line 1122: 26
        line 1123: 34
        line 1125: 37
        line 1127: 46
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            9      25     2 value   Ljava/lang/String;
           14      20     3  port   I
            0      47     0  this   Lorg/springframework/http/HttpHeaders;
            0      47     1  host   Ljava/net/InetSocketAddress;
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 26
          locals = [ class java/lang/String, int ]
        frame_type = 249 /* chop */
          offset_delta = 10
        frame_type = 8 /* same */
    MethodParameters:
      Name                           Flags
      host
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #1054()
          org.springframework.lang.Nullable

  public java.net.InetSocketAddress getHost();
    descriptor: ()Ljava/net/InetSocketAddress;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=7, args_size=1
         0: aload_0
         1: ldc_w         #451                // String Host
         4: invokevirtual #105                // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
         7: astore_1
         8: aload_1
         9: ifnonnull     14
        12: aconst_null
        13: areturn
        14: aconst_null
        15: astore_2
        16: iconst_0
        17: istore_3
        18: aload_1
        19: ldc_w         #456                // String [
        22: invokevirtual #163                // Method java/lang/String.startsWith:(Ljava/lang/String;)Z
        25: ifeq          43
        28: aload_1
        29: bipush        58
        31: aload_1
        32: bipush        93
        34: invokevirtual #267                // Method java/lang/String.indexOf:(I)I
        37: invokevirtual #458                // Method java/lang/String.indexOf:(II)I
        40: goto          49
        43: aload_1
        44: bipush        58
        46: invokevirtual #461                // Method java/lang/String.lastIndexOf:(I)I
        49: istore        4
        51: iload         4
        53: iconst_m1
        54: if_icmpeq     86
        57: aload_1
        58: iconst_0
        59: iload         4
        61: invokevirtual #271                // Method java/lang/String.substring:(II)Ljava/lang/String;
        64: astore_2
        65: aload_1
        66: iload         4
        68: iconst_1
        69: iadd
        70: invokevirtual #464                // Method java/lang/String.substring:(I)Ljava/lang/String;
        73: astore        5
        75: aload         5
        77: invokestatic  #467                // Method java/lang/Integer.parseInt:(Ljava/lang/String;)I
        80: istore_3
        81: goto          86
        84: astore        6
        86: aload_2
        87: ifnonnull     92
        90: aload_1
        91: astore_2
        92: aload_2
        93: iload_3
        94: invokestatic  #475                // Method java/net/InetSocketAddress.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;
        97: areturn
      Exception table:
         from    to  target type
            75    81    84   Class java/lang/NumberFormatException
      LineNumberTable:
        line 1138: 0
        line 1139: 8
        line 1140: 12
        line 1143: 14
        line 1144: 16
        line 1145: 18
        line 1146: 51
        line 1147: 57
        line 1148: 65
        line 1150: 75
        line 1154: 81
        line 1152: 84
        line 1157: 86
        line 1158: 90
        line 1160: 92
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           75      11     5 portString   Ljava/lang/String;
            0      98     0  this   Lorg/springframework/http/HttpHeaders;
            8      90     1 value   Ljava/lang/String;
           16      82     2  host   Ljava/lang/String;
           18      80     3  port   I
           51      47     4 separator   I
      StackMapTable: number_of_entries = 6
        frame_type = 252 /* append */
          offset_delta = 14
          locals = [ class java/lang/String ]
        frame_type = 253 /* append */
          offset_delta = 28
          locals = [ class java/lang/String, int ]
        frame_type = 69 /* same_locals_1_stack_item */
          stack = [ int ]
        frame_type = 255 /* full_frame */
          offset_delta = 34
          locals = [ class org/springframework/http/HttpHeaders, class java/lang/String, class java/lang/String, int, int, class java/lang/String ]
          stack = [ class java/lang/NumberFormatException ]
        frame_type = 250 /* chop */
          offset_delta = 1
        frame_type = 5 /* same */
    RuntimeVisibleAnnotations:
      0: #1054()
        org.springframework.lang.Nullable

  public void setIfMatch(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #479                // String If-Match
         4: aload_1
         5: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
         8: return
      LineNumberTable:
        line 1168: 0
        line 1169: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1 ifMatch   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      ifMatch

  public void setIfMatch(java.util.List<java.lang.String>);
    descriptor: (Ljava/util/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #479                // String If-Match
         4: aload_0
         5: aload_1
         6: invokevirtual #101                // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
         9: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        12: return
      LineNumberTable:
        line 1176: 0
        line 1177: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/springframework/http/HttpHeaders;
            0      13     1 ifMatchList   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      13     1 ifMatchList   Ljava/util/List<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      ifMatchList
    Signature: #1035                        // (Ljava/util/List<Ljava/lang/String;>;)V

  public java.util.List<java.lang.String> getIfMatch();
    descriptor: ()Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #479                // String If-Match
         4: invokevirtual #481                // Method getETagValuesAsList:(Ljava/lang/String;)Ljava/util/List;
         7: areturn
      LineNumberTable:
        line 1185: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/springframework/http/HttpHeaders;
    Signature: #1037                        // ()Ljava/util/List<Ljava/lang/String;>;

  public void setIfModifiedSince(java.time.ZonedDateTime);
    descriptor: (Ljava/time/ZonedDateTime;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #484                // String If-Modified-Since
         4: aload_1
         5: getstatic     #486                // Field GMT:Ljava/time/ZoneId;
         8: invokevirtual #490                // Method java/time/ZonedDateTime.withZoneSameInstant:(Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
        11: invokevirtual #407                // Method setZonedDateTime:(Ljava/lang/String;Ljava/time/ZonedDateTime;)V
        14: return
      LineNumberTable:
        line 1194: 0
        line 1195: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/springframework/http/HttpHeaders;
            0      15     1 ifModifiedSince   Ljava/time/ZonedDateTime;
    MethodParameters:
      Name                           Flags
      ifModifiedSince

  public void setIfModifiedSince(java.time.Instant);
    descriptor: (Ljava/time/Instant;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #484                // String If-Modified-Since
         4: aload_1
         5: invokevirtual #411                // Method setInstant:(Ljava/lang/String;Ljava/time/Instant;)V
         8: return
      LineNumberTable:
        line 1203: 0
        line 1204: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1 ifModifiedSince   Ljava/time/Instant;
    MethodParameters:
      Name                           Flags
      ifModifiedSince

  public void setIfModifiedSince(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: ldc_w         #484                // String If-Modified-Since
         4: lload_1
         5: invokevirtual #415                // Method setDate:(Ljava/lang/String;J)V
         8: return
      LineNumberTable:
        line 1212: 0
        line 1213: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1 ifModifiedSince   J
    MethodParameters:
      Name                           Flags
      ifModifiedSince

  public long getIfModifiedSince();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #484                // String If-Modified-Since
         4: iconst_0
         5: invokevirtual #437                // Method getFirstDate:(Ljava/lang/String;Z)J
         8: lreturn
      LineNumberTable:
        line 1222: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;

  public void setIfNoneMatch(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #496                // String If-None-Match
         4: aload_1
         5: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
         8: return
      LineNumberTable:
        line 1229: 0
        line 1230: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1 ifNoneMatch   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      ifNoneMatch

  public void setIfNoneMatch(java.util.List<java.lang.String>);
    descriptor: (Ljava/util/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #496                // String If-None-Match
         4: aload_0
         5: aload_1
         6: invokevirtual #101                // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
         9: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        12: return
      LineNumberTable:
        line 1236: 0
        line 1237: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/springframework/http/HttpHeaders;
            0      13     1 ifNoneMatchList   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      13     1 ifNoneMatchList   Ljava/util/List<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      ifNoneMatchList
    Signature: #1035                        // (Ljava/util/List<Ljava/lang/String;>;)V

  public java.util.List<java.lang.String> getIfNoneMatch();
    descriptor: ()Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #496                // String If-None-Match
         4: invokevirtual #481                // Method getETagValuesAsList:(Ljava/lang/String;)Ljava/util/List;
         7: areturn
      LineNumberTable:
        line 1244: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/springframework/http/HttpHeaders;
    Signature: #1037                        // ()Ljava/util/List<Ljava/lang/String;>;

  public void setIfUnmodifiedSince(java.time.ZonedDateTime);
    descriptor: (Ljava/time/ZonedDateTime;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #498                // String If-Unmodified-Since
         4: aload_1
         5: getstatic     #486                // Field GMT:Ljava/time/ZoneId;
         8: invokevirtual #490                // Method java/time/ZonedDateTime.withZoneSameInstant:(Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
        11: invokevirtual #407                // Method setZonedDateTime:(Ljava/lang/String;Ljava/time/ZonedDateTime;)V
        14: return
      LineNumberTable:
        line 1253: 0
        line 1254: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/springframework/http/HttpHeaders;
            0      15     1 ifUnmodifiedSince   Ljava/time/ZonedDateTime;
    MethodParameters:
      Name                           Flags
      ifUnmodifiedSince

  public void setIfUnmodifiedSince(java.time.Instant);
    descriptor: (Ljava/time/Instant;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #498                // String If-Unmodified-Since
         4: aload_1
         5: invokevirtual #411                // Method setInstant:(Ljava/lang/String;Ljava/time/Instant;)V
         8: return
      LineNumberTable:
        line 1262: 0
        line 1263: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1 ifUnmodifiedSince   Ljava/time/Instant;
    MethodParameters:
      Name                           Flags
      ifUnmodifiedSince

  public void setIfUnmodifiedSince(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: ldc_w         #498                // String If-Unmodified-Since
         4: lload_1
         5: invokevirtual #415                // Method setDate:(Ljava/lang/String;J)V
         8: return
      LineNumberTable:
        line 1272: 0
        line 1273: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1 ifUnmodifiedSince   J
    MethodParameters:
      Name                           Flags
      ifUnmodifiedSince

  public long getIfUnmodifiedSince();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #498                // String If-Unmodified-Since
         4: iconst_0
         5: invokevirtual #437                // Method getFirstDate:(Ljava/lang/String;Z)J
         8: lreturn
      LineNumberTable:
        line 1283: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;

  public void setLastModified(java.time.ZonedDateTime);
    descriptor: (Ljava/time/ZonedDateTime;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #500                // String Last-Modified
         4: aload_1
         5: getstatic     #486                // Field GMT:Ljava/time/ZoneId;
         8: invokevirtual #490                // Method java/time/ZonedDateTime.withZoneSameInstant:(Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
        11: invokevirtual #407                // Method setZonedDateTime:(Ljava/lang/String;Ljava/time/ZonedDateTime;)V
        14: return
      LineNumberTable:
        line 1292: 0
        line 1293: 14
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/springframework/http/HttpHeaders;
            0      15     1 lastModified   Ljava/time/ZonedDateTime;
    MethodParameters:
      Name                           Flags
      lastModified

  public void setLastModified(java.time.Instant);
    descriptor: (Ljava/time/Instant;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #500                // String Last-Modified
         4: aload_1
         5: invokevirtual #411                // Method setInstant:(Ljava/lang/String;Ljava/time/Instant;)V
         8: return
      LineNumberTable:
        line 1301: 0
        line 1302: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1 lastModified   Ljava/time/Instant;
    MethodParameters:
      Name                           Flags
      lastModified

  public void setLastModified(long);
    descriptor: (J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=2
         0: aload_0
         1: ldc_w         #500                // String Last-Modified
         4: lload_1
         5: invokevirtual #415                // Method setDate:(Ljava/lang/String;J)V
         8: return
      LineNumberTable:
        line 1311: 0
        line 1312: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1 lastModified   J
    MethodParameters:
      Name                           Flags
      lastModified

  public long getLastModified();
    descriptor: ()J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #500                // String Last-Modified
         4: iconst_0
         5: invokevirtual #437                // Method getFirstDate:(Ljava/lang/String;Z)J
         8: lreturn
      LineNumberTable:
        line 1322: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;

  public void setLocation(java.net.URI);
    descriptor: (Ljava/net/URI;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #502                // String Location
         4: aload_1
         5: ifnull        15
         8: aload_1
         9: invokevirtual #504                // Method java/net/URI.toASCIIString:()Ljava/lang/String;
        12: goto          16
        15: aconst_null
        16: invokevirtual #212                // Method setOrRemove:(Ljava/lang/String;Ljava/lang/String;)V
        19: return
      LineNumberTable:
        line 1330: 0
        line 1331: 19
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lorg/springframework/http/HttpHeaders;
            0      20     1 location   Ljava/net/URI;
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 15
          locals = [ class org/springframework/http/HttpHeaders, class java/net/URI ]
          stack = [ class org/springframework/http/HttpHeaders, class java/lang/String ]
        frame_type = 255 /* full_frame */
          offset_delta = 0
          locals = [ class org/springframework/http/HttpHeaders, class java/net/URI ]
          stack = [ class org/springframework/http/HttpHeaders, class java/lang/String, class java/lang/String ]
    MethodParameters:
      Name                           Flags
      location
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #1054()
          org.springframework.lang.Nullable

  public java.net.URI getLocation();
    descriptor: ()Ljava/net/URI;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: ldc_w         #502                // String Location
         4: invokevirtual #105                // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
         7: astore_1
         8: aload_1
         9: ifnull        19
        12: aload_1
        13: invokestatic  #509                // Method java/net/URI.create:(Ljava/lang/String;)Ljava/net/URI;
        16: goto          20
        19: aconst_null
        20: areturn
      LineNumberTable:
        line 1340: 0
        line 1341: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  this   Lorg/springframework/http/HttpHeaders;
            8      13     1 value   Ljava/lang/String;
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 19
          locals = [ class java/lang/String ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/net/URI ]
    RuntimeVisibleAnnotations:
      0: #1054()
        org.springframework.lang.Nullable

  public void setOrigin(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #513                // String Origin
         4: aload_1
         5: invokevirtual #212                // Method setOrRemove:(Ljava/lang/String;Ljava/lang/String;)V
         8: return
      LineNumberTable:
        line 1348: 0
        line 1349: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1 origin   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      origin
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #1054()
          org.springframework.lang.Nullable

  public java.lang.String getOrigin();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #513                // String Origin
         4: invokevirtual #105                // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 1356: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/springframework/http/HttpHeaders;
    RuntimeVisibleAnnotations:
      0: #1054()
        org.springframework.lang.Nullable

  public void setPragma(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #515                // String Pragma
         4: aload_1
         5: invokevirtual #212                // Method setOrRemove:(Ljava/lang/String;Ljava/lang/String;)V
         8: return
      LineNumberTable:
        line 1363: 0
        line 1364: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1 pragma   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      pragma
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #1054()
          org.springframework.lang.Nullable

  public java.lang.String getPragma();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #515                // String Pragma
         4: invokevirtual #105                // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 1371: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/springframework/http/HttpHeaders;
    RuntimeVisibleAnnotations:
      0: #1054()
        org.springframework.lang.Nullable

  public void setRange(java.util.List<org.springframework.http.HttpRange>);
    descriptor: (Ljava/util/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=2
         0: aload_1
         1: invokestatic  #517                // Method org/springframework/http/HttpRange.toString:(Ljava/util/Collection;)Ljava/lang/String;
         4: astore_2
         5: aload_0
         6: ldc_w         #520                // String Range
         9: aload_2
        10: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        13: return
      LineNumberTable:
        line 1378: 0
        line 1379: 5
        line 1380: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/springframework/http/HttpHeaders;
            0      14     1 ranges   Ljava/util/List;
            5       9     2 value   Ljava/lang/String;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      14     1 ranges   Ljava/util/List<Lorg/springframework/http/HttpRange;>;
    MethodParameters:
      Name                           Flags
      ranges
    Signature: #1176                        // (Ljava/util/List<Lorg/springframework/http/HttpRange;>;)V

  public java.util.List<org.springframework.http.HttpRange> getRange();
    descriptor: ()Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: ldc_w         #520                // String Range
         4: invokevirtual #105                // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
         7: astore_1
         8: aload_1
         9: invokestatic  #522                // Method org/springframework/http/HttpRange.parseRanges:(Ljava/lang/String;)Ljava/util/List;
        12: areturn
      LineNumberTable:
        line 1387: 0
        line 1388: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/springframework/http/HttpHeaders;
            8       5     1 value   Ljava/lang/String;
    Signature: #1177                        // ()Ljava/util/List<Lorg/springframework/http/HttpRange;>;

  public void setUpgrade(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #525                // String Upgrade
         4: aload_1
         5: invokevirtual #212                // Method setOrRemove:(Ljava/lang/String;Ljava/lang/String;)V
         8: return
      LineNumberTable:
        line 1395: 0
        line 1396: 8
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
            0       9     1 upgrade   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      upgrade
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #1054()
          org.springframework.lang.Nullable

  public java.lang.String getUpgrade();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #525                // String Upgrade
         4: invokevirtual #105                // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 1403: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/springframework/http/HttpHeaders;
    RuntimeVisibleAnnotations:
      0: #1054()
        org.springframework.lang.Nullable

  public void setVary(java.util.List<java.lang.String>);
    descriptor: (Ljava/util/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=2, args_size=2
         0: aload_0
         1: ldc_w         #527                // String Vary
         4: aload_0
         5: aload_1
         6: invokevirtual #101                // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
         9: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        12: return
      LineNumberTable:
        line 1414: 0
        line 1415: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/springframework/http/HttpHeaders;
            0      13     1 requestHeaders   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      13     1 requestHeaders   Ljava/util/List<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      requestHeaders
    Signature: #1035                        // (Ljava/util/List<Ljava/lang/String;>;)V

  public java.util.List<java.lang.String> getVary();
    descriptor: ()Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #527                // String Vary
         4: invokevirtual #190                // Method getValuesAsList:(Ljava/lang/String;)Ljava/util/List;
         7: areturn
      LineNumberTable:
        line 1422: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/springframework/http/HttpHeaders;
    Signature: #1037                        // ()Ljava/util/List<Ljava/lang/String;>;

  public void setZonedDateTime(java.lang.String, java.time.ZonedDateTime);
    descriptor: (Ljava/lang/String;Ljava/time/ZonedDateTime;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: getstatic     #529                // Field DATE_FORMATTER:Ljava/time/format/DateTimeFormatter;
         5: aload_2
         6: invokevirtual #533                // Method java/time/format/DateTimeFormatter.format:(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/String;
         9: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        12: return
      LineNumberTable:
        line 1432: 0
        line 1433: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/springframework/http/HttpHeaders;
            0      13     1 headerName   Ljava/lang/String;
            0      13     2  date   Ljava/time/ZonedDateTime;
    MethodParameters:
      Name                           Flags
      headerName
      date

  public void setInstant(java.lang.String, java.time.Instant);
    descriptor: (Ljava/lang/String;Ljava/time/Instant;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: aload_2
         3: getstatic     #486                // Field GMT:Ljava/time/ZoneId;
         6: invokestatic  #539                // Method java/time/ZonedDateTime.ofInstant:(Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
         9: invokevirtual #407                // Method setZonedDateTime:(Ljava/lang/String;Ljava/time/ZonedDateTime;)V
        12: return
      LineNumberTable:
        line 1442: 0
        line 1443: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/springframework/http/HttpHeaders;
            0      13     1 headerName   Ljava/lang/String;
            0      13     2  date   Ljava/time/Instant;
    MethodParameters:
      Name                           Flags
      headerName
      date

  public void setDate(java.lang.String, long);
    descriptor: (Ljava/lang/String;J)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=3
         0: aload_0
         1: aload_1
         2: lload_2
         3: invokestatic  #543                // Method java/time/Instant.ofEpochMilli:(J)Ljava/time/Instant;
         6: invokevirtual #411                // Method setInstant:(Ljava/lang/String;Ljava/time/Instant;)V
         9: return
      LineNumberTable:
        line 1453: 0
        line 1454: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/springframework/http/HttpHeaders;
            0      10     1 headerName   Ljava/lang/String;
            0      10     2  date   J
    MethodParameters:
      Name                           Flags
      headerName
      date

  public long getFirstDate(java.lang.String);
    descriptor: (Ljava/lang/String;)J
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_1
         3: invokevirtual #437                // Method getFirstDate:(Ljava/lang/String;Z)J
         6: lreturn
      LineNumberTable:
        line 1466: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/springframework/http/HttpHeaders;
            0       7     1 headerName   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      headerName

  public java.time.ZonedDateTime getFirstZonedDateTime(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/time/ZonedDateTime;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: iconst_1
         3: invokevirtual #549                // Method getFirstZonedDateTime:(Ljava/lang/String;Z)Ljava/time/ZonedDateTime;
         6: areturn
      LineNumberTable:
        line 1496: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       7     0  this   Lorg/springframework/http/HttpHeaders;
            0       7     1 headerName   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      headerName
    RuntimeVisibleAnnotations:
      0: #1054()
        org.springframework.lang.Nullable

  public java.util.List<java.lang.String> getValuesAsList(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #41                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
         5: astore_2
         6: aload_2
         7: ifnull        70
        10: new           #135                // class java/util/ArrayList
        13: dup
        14: invokespecial #579                // Method java/util/ArrayList."<init>":()V
        17: astore_3
        18: aload_2
        19: invokeinterface #144,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
        24: astore        4
        26: aload         4
        28: invokeinterface #148,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
        33: ifeq          68
        36: aload         4
        38: invokeinterface #153,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        43: checkcast     #164                // class java/lang/String
        46: astore        5
        48: aload         5
        50: ifnull        65
        53: aload_3
        54: aload         5
        56: invokestatic  #580                // Method tokenizeQuoted:(Ljava/lang/String;)Ljava/util/List;
        59: invokeinterface #583,  2          // InterfaceMethod java/util/List.addAll:(Ljava/util/Collection;)Z
        64: pop
        65: goto          26
        68: aload_3
        69: areturn
        70: invokestatic  #45                 // Method java/util/Collections.emptyList:()Ljava/util/List;
        73: areturn
      LineNumberTable:
        line 1555: 0
        line 1556: 6
        line 1557: 10
        line 1558: 18
        line 1559: 48
        line 1560: 53
        line 1562: 65
        line 1563: 68
        line 1565: 70
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           48      17     5 value   Ljava/lang/String;
           18      52     3 result   Ljava/util/List;
            0      74     0  this   Lorg/springframework/http/HttpHeaders;
            0      74     1 headerName   Ljava/lang/String;
            6      68     2 values   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           18      52     3 result   Ljava/util/List<Ljava/lang/String;>;
            6      68     2 values   Ljava/util/List<Ljava/lang/String;>;
      StackMapTable: number_of_entries = 4
        frame_type = 254 /* append */
          offset_delta = 26
          locals = [ class java/util/List, class java/util/List, class java/util/Iterator ]
        frame_type = 38 /* same */
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 1
    MethodParameters:
      Name                           Flags
      headerName
    Signature: #1190                        // (Ljava/lang/String;)Ljava/util/List<Ljava/lang/String;>;

  public void clearContentHeaders();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: ldc_w         #351                // String Content-Disposition
         7: invokeinterface #617,  2          // InterfaceMethod org/springframework/util/MultiValueMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
        12: pop
        13: aload_0
        14: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
        17: ldc_w         #621                // String Content-Encoding
        20: invokeinterface #617,  2          // InterfaceMethod org/springframework/util/MultiValueMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
        25: pop
        26: aload_0
        27: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
        30: ldc_w         #360                // String Content-Language
        33: invokeinterface #617,  2          // InterfaceMethod org/springframework/util/MultiValueMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
        38: pop
        39: aload_0
        40: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
        43: ldc_w         #379                // String Content-Length
        46: invokeinterface #617,  2          // InterfaceMethod org/springframework/util/MultiValueMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
        51: pop
        52: aload_0
        53: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
        56: ldc_w         #623                // String Content-Location
        59: invokeinterface #617,  2          // InterfaceMethod org/springframework/util/MultiValueMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
        64: pop
        65: aload_0
        66: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
        69: ldc_w         #625                // String Content-Range
        72: invokeinterface #617,  2          // InterfaceMethod org/springframework/util/MultiValueMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
        77: pop
        78: aload_0
        79: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
        82: ldc_w         #395                // String Content-Type
        85: invokeinterface #617,  2          // InterfaceMethod org/springframework/util/MultiValueMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
        90: pop
        91: return
      LineNumberTable:
        line 1622: 0
        line 1623: 13
        line 1624: 26
        line 1625: 39
        line 1626: 52
        line 1627: 65
        line 1628: 78
        line 1629: 91
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      92     0  this   Lorg/springframework/http/HttpHeaders;

  protected java.util.List<java.lang.String> getETagValuesAsList(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/util/List;
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=4, locals=7, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #41                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
         5: astore_2
         6: aload_2
         7: ifnull        145
        10: new           #135                // class java/util/ArrayList
        13: dup
        14: invokespecial #579                // Method java/util/ArrayList."<init>":()V
        17: astore_3
        18: aload_2
        19: invokeinterface #144,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
        24: astore        4
        26: aload         4
        28: invokeinterface #148,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
        33: ifeq          143
        36: aload         4
        38: invokeinterface #153,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        43: checkcast     #164                // class java/lang/String
        46: astore        5
        48: aload         5
        50: ifnull        140
        53: getstatic     #627                // Field ETAG_HEADER_VALUE_PATTERN:Ljava/util/regex/Pattern;
        56: aload         5
        58: invokevirtual #631                // Method java/util/regex/Pattern.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;
        61: astore        6
        63: aload         6
        65: invokevirtual #637                // Method java/util/regex/Matcher.find:()Z
        68: ifeq          115
        71: ldc           #161                // String *
        73: aload         6
        75: invokevirtual #642                // Method java/util/regex/Matcher.group:()Ljava/lang/String;
        78: invokevirtual #275                // Method java/lang/String.equals:(Ljava/lang/Object;)Z
        81: ifeq          99
        84: aload_3
        85: aload         6
        87: invokevirtual #642                // Method java/util/regex/Matcher.group:()Ljava/lang/String;
        90: invokeinterface #172,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
        95: pop
        96: goto          63
        99: aload_3
       100: aload         6
       102: iconst_1
       103: invokevirtual #645                // Method java/util/regex/Matcher.group:(I)Ljava/lang/String;
       106: invokeinterface #172,  2          // InterfaceMethod java/util/List.add:(Ljava/lang/Object;)Z
       111: pop
       112: goto          63
       115: aload_3
       116: invokeinterface #131,  1          // InterfaceMethod java/util/List.isEmpty:()Z
       121: ifeq          140
       124: new           #572                // class java/lang/IllegalArgumentException
       127: dup
       128: aload_1
       129: aload         5
       131: invokedynamic #647,  0            // InvokeDynamic #7:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
       136: invokespecial #577                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
       139: athrow
       140: goto          26
       143: aload_3
       144: areturn
       145: invokestatic  #45                 // Method java/util/Collections.emptyList:()Ljava/util/List;
       148: areturn
      LineNumberTable:
        line 1639: 0
        line 1640: 6
        line 1641: 10
        line 1642: 18
        line 1643: 48
        line 1644: 53
        line 1645: 63
        line 1646: 71
        line 1647: 84
        line 1650: 99
        line 1653: 115
        line 1654: 124
        line 1658: 140
        line 1659: 143
        line 1661: 145
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           63      77     6 matcher   Ljava/util/regex/Matcher;
           48      92     5 value   Ljava/lang/String;
           18     127     3 result   Ljava/util/List;
            0     149     0  this   Lorg/springframework/http/HttpHeaders;
            0     149     1 headerName   Ljava/lang/String;
            6     143     2 values   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
           18     127     3 result   Ljava/util/List<Ljava/lang/String;>;
            6     143     2 values   Ljava/util/List<Ljava/lang/String;>;
      StackMapTable: number_of_entries = 7
        frame_type = 254 /* append */
          offset_delta = 26
          locals = [ class java/util/List, class java/util/List, class java/util/Iterator ]
        frame_type = 253 /* append */
          offset_delta = 36
          locals = [ class java/lang/String, class java/util/regex/Matcher ]
        frame_type = 35 /* same */
        frame_type = 15 /* same */
        frame_type = 249 /* chop */
          offset_delta = 24
        frame_type = 250 /* chop */
          offset_delta = 2
        frame_type = 250 /* chop */
          offset_delta = 1
    MethodParameters:
      Name                           Flags
      headerName
    Signature: #1190                        // (Ljava/lang/String;)Ljava/util/List<Ljava/lang/String;>;

  protected java.lang.String getFieldValues(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #41                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
         5: astore_2
         6: aload_2
         7: ifnull        18
        10: aload_0
        11: aload_2
        12: invokevirtual #101                // Method toCommaDelimitedString:(Ljava/util/List;)Ljava/lang/String;
        15: goto          19
        18: aconst_null
        19: areturn
      LineNumberTable:
        line 1672: 0
        line 1673: 6
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      20     0  this   Lorg/springframework/http/HttpHeaders;
            0      20     1 headerName   Ljava/lang/String;
            6      14     2 headerValues   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            6      14     2 headerValues   Ljava/util/List<Ljava/lang/String;>;
      StackMapTable: number_of_entries = 2
        frame_type = 252 /* append */
          offset_delta = 18
          locals = [ class java/util/List ]
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class java/lang/String ]
    MethodParameters:
      Name                           Flags
      headerName
    RuntimeVisibleAnnotations:
      0: #1054()
        org.springframework.lang.Nullable

  protected java.lang.String toCommaDelimitedString(java.util.List<java.lang.String>);
    descriptor: (Ljava/util/List;)Ljava/lang/String;
    flags: (0x0004) ACC_PROTECTED
    Code:
      stack=3, locals=5, args_size=2
         0: new           #246                // class java/util/StringJoiner
         3: dup
         4: ldc           #248                // String ,
         6: invokespecial #250                // Method java/util/StringJoiner."<init>":(Ljava/lang/CharSequence;)V
         9: astore_2
        10: aload_1
        11: invokeinterface #144,  1          // InterfaceMethod java/util/List.iterator:()Ljava/util/Iterator;
        16: astore_3
        17: aload_3
        18: invokeinterface #148,  1          // InterfaceMethod java/util/Iterator.hasNext:()Z
        23: ifeq          52
        26: aload_3
        27: invokeinterface #153,  1          // InterfaceMethod java/util/Iterator.next:()Ljava/lang/Object;
        32: checkcast     #164                // class java/lang/String
        35: astore        4
        37: aload         4
        39: ifnull        49
        42: aload_2
        43: aload         4
        45: invokevirtual #260                // Method java/util/StringJoiner.add:(Ljava/lang/CharSequence;)Ljava/util/StringJoiner;
        48: pop
        49: goto          17
        52: aload_2
        53: invokevirtual #265                // Method java/util/StringJoiner.toString:()Ljava/lang/String;
        56: areturn
      LineNumberTable:
        line 1682: 0
        line 1683: 10
        line 1684: 37
        line 1685: 42
        line 1687: 49
        line 1688: 52
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           37      12     4   val   Ljava/lang/String;
            0      57     0  this   Lorg/springframework/http/HttpHeaders;
            0      57     1 headerValues   Ljava/util/List;
           10      47     2 joiner   Ljava/util/StringJoiner;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      57     1 headerValues   Ljava/util/List<Ljava/lang/String;>;
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 17
          locals = [ class java/util/StringJoiner, class java/util/Iterator ]
        frame_type = 31 /* same */
        frame_type = 250 /* chop */
          offset_delta = 2
    MethodParameters:
      Name                           Flags
      headerValues
    Signature: #1203                        // (Ljava/util/List<Ljava/lang/String;>;)Ljava/lang/String;

  public java.lang.String getFirst(java.lang.String);
    descriptor: (Ljava/lang/String;)Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: aload_1
         5: invokeinterface #648,  2          // InterfaceMethod org/springframework/util/MultiValueMap.getFirst:(Ljava/lang/Object;)Ljava/lang/Object;
        10: checkcast     #164                // class java/lang/String
        13: areturn
      LineNumberTable:
        line 1716: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/springframework/http/HttpHeaders;
            0      14     1 headerName   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      headerName
    RuntimeVisibleAnnotations:
      0: #1054()
        org.springframework.lang.Nullable

  public void add(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: aload_1
         5: aload_2
         6: invokeinterface #650,  3          // InterfaceMethod org/springframework/util/MultiValueMap.add:(Ljava/lang/Object;Ljava/lang/Object;)V
        11: return
      LineNumberTable:
        line 1729: 0
        line 1730: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/springframework/http/HttpHeaders;
            0      12     1 headerName   Ljava/lang/String;
            0      12     2 headerValue   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      headerName
      headerValue
    RuntimeVisibleParameterAnnotations:
      parameter 0:
      parameter 1:
        0: #1054()
          org.springframework.lang.Nullable

  public void addAll(java.lang.String, java.util.List<? extends java.lang.String>);
    descriptor: (Ljava/lang/String;Ljava/util/List;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: aload_1
         5: aload_2
         6: invokeinterface #653,  3          // InterfaceMethod org/springframework/util/MultiValueMap.addAll:(Ljava/lang/Object;Ljava/util/List;)V
        11: return
      LineNumberTable:
        line 1734: 0
        line 1735: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/springframework/http/HttpHeaders;
            0      12     1   key   Ljava/lang/String;
            0      12     2 values   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      12     2 values   Ljava/util/List<+Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      key
      values
    Signature: #1206                        // (Ljava/lang/String;Ljava/util/List<+Ljava/lang/String;>;)V

  public void addAll(org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>);
    descriptor: (Lorg/springframework/util/MultiValueMap;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: aload_1
         5: invokeinterface #656,  2          // InterfaceMethod org/springframework/util/MultiValueMap.addAll:(Lorg/springframework/util/MultiValueMap;)V
        10: return
      LineNumberTable:
        line 1739: 0
        line 1740: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/springframework/http/HttpHeaders;
            0      11     1 values   Lorg/springframework/util/MultiValueMap;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      11     1 values   Lorg/springframework/util/MultiValueMap<Ljava/lang/String;Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      values
    Signature: #995                         // (Lorg/springframework/util/MultiValueMap<Ljava/lang/String;Ljava/lang/String;>;)V

  public void set(java.lang.String, java.lang.String);
    descriptor: (Ljava/lang/String;Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: aload_1
         5: aload_2
         6: invokeinterface #658,  3          // InterfaceMethod org/springframework/util/MultiValueMap.set:(Ljava/lang/Object;Ljava/lang/Object;)V
        11: return
      LineNumberTable:
        line 1752: 0
        line 1753: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      12     0  this   Lorg/springframework/http/HttpHeaders;
            0      12     1 headerName   Ljava/lang/String;
            0      12     2 headerValue   Ljava/lang/String;
    MethodParameters:
      Name                           Flags
      headerName
      headerValue
    RuntimeVisibleParameterAnnotations:
      parameter 0:
      parameter 1:
        0: #1054()
          org.springframework.lang.Nullable

  public void setAll(java.util.Map<java.lang.String, java.lang.String>);
    descriptor: (Ljava/util/Map;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: aload_1
         5: invokeinterface #660,  2          // InterfaceMethod org/springframework/util/MultiValueMap.setAll:(Ljava/util/Map;)V
        10: return
      LineNumberTable:
        line 1757: 0
        line 1758: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/springframework/http/HttpHeaders;
            0      11     1 values   Ljava/util/Map;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      11     1 values   Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      values
    Signature: #1209                        // (Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;)V

  public java.util.Map<java.lang.String, java.lang.String> toSingleValueMap();
    descriptor: ()Ljava/util/Map;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: invokeinterface #664,  1          // InterfaceMethod org/springframework/util/MultiValueMap.toSingleValueMap:()Ljava/util/Map;
         9: areturn
      LineNumberTable:
        line 1762: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/springframework/http/HttpHeaders;
    Signature: #1210                        // ()Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;

  public int size();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: invokeinterface #668,  1          // InterfaceMethod org/springframework/util/MultiValueMap.size:()I
         9: ireturn
      LineNumberTable:
        line 1770: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/springframework/http/HttpHeaders;

  public boolean isEmpty();
    descriptor: ()Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: invokeinterface #669,  1          // InterfaceMethod org/springframework/util/MultiValueMap.isEmpty:()Z
         9: ireturn
      LineNumberTable:
        line 1775: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/springframework/http/HttpHeaders;

  public boolean containsKey(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: aload_1
         5: invokeinterface #670,  2          // InterfaceMethod org/springframework/util/MultiValueMap.containsKey:(Ljava/lang/Object;)Z
        10: ireturn
      LineNumberTable:
        line 1780: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/springframework/http/HttpHeaders;
            0      11     1   key   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      key

  public boolean containsValue(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: aload_1
         5: invokeinterface #673,  2          // InterfaceMethod org/springframework/util/MultiValueMap.containsValue:(Ljava/lang/Object;)Z
        10: ireturn
      LineNumberTable:
        line 1785: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/springframework/http/HttpHeaders;
            0      11     1 value   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      value

  public java.util.List<java.lang.String> get(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: aload_1
         5: invokeinterface #676,  2          // InterfaceMethod org/springframework/util/MultiValueMap.get:(Ljava/lang/Object;)Ljava/lang/Object;
        10: checkcast     #81                 // class java/util/List
        13: areturn
      LineNumberTable:
        line 1791: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/springframework/http/HttpHeaders;
            0      14     1   key   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      key
    Signature: #1002                        // (Ljava/lang/Object;)Ljava/util/List<Ljava/lang/String;>;
    RuntimeVisibleAnnotations:
      0: #1054()
        org.springframework.lang.Nullable

  public java.util.List<java.lang.String> put(java.lang.String, java.util.List<java.lang.String>);
    descriptor: (Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: aload_1
         5: aload_2
         6: invokeinterface #678,  3          // InterfaceMethod org/springframework/util/MultiValueMap.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        11: checkcast     #81                 // class java/util/List
        14: areturn
      LineNumberTable:
        line 1796: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/springframework/http/HttpHeaders;
            0      15     1   key   Ljava/lang/String;
            0      15     2 value   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      15     2 value   Ljava/util/List<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      key
      value
    Signature: #1211                        // (Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Ljava/lang/String;>;

  public java.util.List<java.lang.String> remove(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: aload_1
         5: invokeinterface #617,  2          // InterfaceMethod org/springframework/util/MultiValueMap.remove:(Ljava/lang/Object;)Ljava/lang/Object;
        10: checkcast     #81                 // class java/util/List
        13: areturn
      LineNumberTable:
        line 1801: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lorg/springframework/http/HttpHeaders;
            0      14     1   key   Ljava/lang/Object;
    MethodParameters:
      Name                           Flags
      key
    Signature: #1002                        // (Ljava/lang/Object;)Ljava/util/List<Ljava/lang/String;>;

  public void putAll(java.util.Map<? extends java.lang.String, ? extends java.util.List<java.lang.String>>);
    descriptor: (Ljava/util/Map;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: aload_1
         5: invokeinterface #682,  2          // InterfaceMethod org/springframework/util/MultiValueMap.putAll:(Ljava/util/Map;)V
        10: return
      LineNumberTable:
        line 1806: 0
        line 1807: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/springframework/http/HttpHeaders;
            0      11     1   map   Ljava/util/Map;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      11     1   map   Ljava/util/Map<+Ljava/lang/String;+Ljava/util/List<Ljava/lang/String;>;>;
    MethodParameters:
      Name                           Flags
      map
    Signature: #1213                        // (Ljava/util/Map<+Ljava/lang/String;+Ljava/util/List<Ljava/lang/String;>;>;)V

  public void clear();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: invokeinterface #685,  1          // InterfaceMethod org/springframework/util/MultiValueMap.clear:()V
         9: return
      LineNumberTable:
        line 1811: 0
        line 1812: 9
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/springframework/http/HttpHeaders;

  public java.util.Set<java.lang.String> keySet();
    descriptor: ()Ljava/util/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: invokeinterface #688,  1          // InterfaceMethod org/springframework/util/MultiValueMap.keySet:()Ljava/util/Set;
         9: areturn
      LineNumberTable:
        line 1816: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/springframework/http/HttpHeaders;
    Signature: #1214                        // ()Ljava/util/Set<Ljava/lang/String;>;

  public java.util.Collection<java.util.List<java.lang.String>> values();
    descriptor: ()Ljava/util/Collection;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: invokeinterface #691,  1          // InterfaceMethod org/springframework/util/MultiValueMap.values:()Ljava/util/Collection;
         9: areturn
      LineNumberTable:
        line 1821: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/springframework/http/HttpHeaders;
    Signature: #1215                        // ()Ljava/util/Collection<Ljava/util/List<Ljava/lang/String;>;>;

  public java.util.Set<java.util.Map$Entry<java.lang.String, java.util.List<java.lang.String>>> entrySet();
    descriptor: ()Ljava/util/Set;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: invokeinterface #695,  1          // InterfaceMethod org/springframework/util/MultiValueMap.entrySet:()Ljava/util/Set;
         9: areturn
      LineNumberTable:
        line 1826: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/springframework/http/HttpHeaders;
    Signature: #1216                        // ()Ljava/util/Set<Ljava/util/Map$Entry<Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;>;>;

  public void forEach(java.util.function.BiConsumer<? super java.lang.String, ? super java.util.List<java.lang.String>>);
    descriptor: (Ljava/util/function/BiConsumer;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: aload_1
         5: invokeinterface #698,  2          // InterfaceMethod org/springframework/util/MultiValueMap.forEach:(Ljava/util/function/BiConsumer;)V
        10: return
      LineNumberTable:
        line 1831: 0
        line 1832: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      11     0  this   Lorg/springframework/http/HttpHeaders;
            0      11     1 action   Ljava/util/function/BiConsumer;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      11     1 action   Ljava/util/function/BiConsumer<-Ljava/lang/String;-Ljava/util/List<Ljava/lang/String;>;>;
    MethodParameters:
      Name                           Flags
      action
    Signature: #1220                        // (Ljava/util/function/BiConsumer<-Ljava/lang/String;-Ljava/util/List<Ljava/lang/String;>;>;)V

  public java.util.List<java.lang.String> putIfAbsent(java.lang.String, java.util.List<java.lang.String>);
    descriptor: (Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: aload_1
         5: aload_2
         6: invokeinterface #702,  3          // InterfaceMethod org/springframework/util/MultiValueMap.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
        11: checkcast     #81                 // class java/util/List
        14: areturn
      LineNumberTable:
        line 1836: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      15     0  this   Lorg/springframework/http/HttpHeaders;
            0      15     1   key   Ljava/lang/String;
            0      15     2 value   Ljava/util/List;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      15     2 value   Ljava/util/List<Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      key
      value
    Signature: #1211                        // (Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Ljava/lang/String;>;

  public boolean equals(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Z
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=2
         0: aload_0
         1: aload_1
         2: if_acmpeq     31
         5: aload_1
         6: instanceof    #20                 // class org/springframework/http/HttpHeaders
         9: ifeq          35
        12: aload_1
        13: checkcast     #20                 // class org/springframework/http/HttpHeaders
        16: astore_2
        17: aload_0
        18: invokestatic  #705                // Method unwrap:(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/util/MultiValueMap;
        21: aload_2
        22: invokestatic  #705                // Method unwrap:(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/util/MultiValueMap;
        25: invokevirtual #709                // Method java/lang/Object.equals:(Ljava/lang/Object;)Z
        28: ifeq          35
        31: iconst_1
        32: goto          36
        35: iconst_0
        36: ireturn
      LineNumberTable:
        line 1842: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           17      14     2  that   Lorg/springframework/http/HttpHeaders;
            0      37     0  this   Lorg/springframework/http/HttpHeaders;
            0      37     1 other   Ljava/lang/Object;
      StackMapTable: number_of_entries = 3
        frame_type = 31 /* same */
        frame_type = 3 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ int ]
    MethodParameters:
      Name                           Flags
      other
    RuntimeVisibleParameterAnnotations:
      parameter 0:
        0: #1054()
          org.springframework.lang.Nullable

  public int hashCode();
    descriptor: ()I
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: invokevirtual #710                // Method java/lang/Object.hashCode:()I
         7: ireturn
      LineNumberTable:
        line 1847: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/springframework/http/HttpHeaders;

  public java.lang.String toString();
    descriptor: ()Ljava/lang/String;
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
         4: invokestatic  #713                // Method formatHeaders:(Lorg/springframework/util/MultiValueMap;)Ljava/lang/String;
         7: areturn
      LineNumberTable:
        line 1852: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       8     0  this   Lorg/springframework/http/HttpHeaders;

  public static org.springframework.http.HttpHeaders readOnlyHttpHeaders(org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>);
    descriptor: (Lorg/springframework/util/MultiValueMap;)Lorg/springframework/http/HttpHeaders;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=2, args_size=1
         0: aload_0
         1: instanceof    #20                 // class org/springframework/http/HttpHeaders
         4: ifeq          19
         7: aload_0
         8: checkcast     #20                 // class org/springframework/http/HttpHeaders
        11: astore_1
        12: aload_1
        13: invokestatic  #717                // Method readOnlyHttpHeaders:(Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpHeaders;
        16: goto          27
        19: new           #721                // class org/springframework/http/ReadOnlyHttpHeaders
        22: dup
        23: aload_0
        24: invokespecial #723                // Method org/springframework/http/ReadOnlyHttpHeaders."<init>":(Lorg/springframework/util/MultiValueMap;)V
        27: areturn
      LineNumberTable:
        line 1865: 0
        line 1866: 19
        line 1865: 27
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
           12       7     1 httpHeaders   Lorg/springframework/http/HttpHeaders;
            0      28     0 headers   Lorg/springframework/util/MultiValueMap;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      28     0 headers   Lorg/springframework/util/MultiValueMap<Ljava/lang/String;Ljava/lang/String;>;
      StackMapTable: number_of_entries = 2
        frame_type = 19 /* same */
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class org/springframework/http/HttpHeaders ]
    MethodParameters:
      Name                           Flags
      headers
    Signature: #1225                        // (Lorg/springframework/util/MultiValueMap<Ljava/lang/String;Ljava/lang/String;>;)Lorg/springframework/http/HttpHeaders;

  public static org.springframework.http.HttpHeaders readOnlyHttpHeaders(org.springframework.http.HttpHeaders);
    descriptor: (Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpHeaders;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #724                // String HttpHeaders must not be null
         4: invokestatic  #31                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
         7: aload_0
         8: instanceof    #721                // class org/springframework/http/ReadOnlyHttpHeaders
        11: ifeq          18
        14: aload_0
        15: goto          29
        18: new           #721                // class org/springframework/http/ReadOnlyHttpHeaders
        21: dup
        22: aload_0
        23: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
        26: invokespecial #723                // Method org/springframework/http/ReadOnlyHttpHeaders."<init>":(Lorg/springframework/util/MultiValueMap;)V
        29: areturn
      LineNumberTable:
        line 1876: 0
        line 1877: 7
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      30     0 headers   Lorg/springframework/http/HttpHeaders;
      StackMapTable: number_of_entries = 2
        frame_type = 18 /* same */
        frame_type = 74 /* same_locals_1_stack_item */
          stack = [ class org/springframework/http/HttpHeaders ]
    MethodParameters:
      Name                           Flags
      headers

  public static org.springframework.http.HttpHeaders writableHttpHeaders(org.springframework.http.HttpHeaders);
    descriptor: (Lorg/springframework/http/HttpHeaders;)Lorg/springframework/http/HttpHeaders;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=1, args_size=1
         0: aload_0
         1: ldc_w         #724                // String HttpHeaders must not be null
         4: invokestatic  #31                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
         7: aload_0
         8: getstatic     #726                // Field EMPTY:Lorg/springframework/http/HttpHeaders;
        11: if_acmpne     22
        14: new           #20                 // class org/springframework/http/HttpHeaders
        17: dup
        18: invokespecial #730                // Method "<init>":()V
        21: areturn
        22: aload_0
        23: instanceof    #721                // class org/springframework/http/ReadOnlyHttpHeaders
        26: ifeq          43
        29: new           #20                 // class org/springframework/http/HttpHeaders
        32: dup
        33: aload_0
        34: getfield      #37                 // Field headers:Lorg/springframework/util/MultiValueMap;
        37: invokespecial #19                 // Method "<init>":(Lorg/springframework/util/MultiValueMap;)V
        40: goto          44
        43: aload_0
        44: areturn
      LineNumberTable:
        line 1888: 0
        line 1889: 7
        line 1890: 14
        line 1892: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      45     0 headers   Lorg/springframework/http/HttpHeaders;
      StackMapTable: number_of_entries = 3
        frame_type = 22 /* same */
        frame_type = 20 /* same */
        frame_type = 64 /* same_locals_1_stack_item */
          stack = [ class org/springframework/http/HttpHeaders ]
    MethodParameters:
      Name                           Flags
      headers

  public static java.lang.String formatHeaders(org.springframework.util.MultiValueMap<java.lang.String, java.lang.String>);
    descriptor: (Lorg/springframework/util/MultiValueMap;)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=1, args_size=1
         0: aload_0
         1: invokeinterface #695,  1          // InterfaceMethod org/springframework/util/MultiValueMap.entrySet:()Ljava/util/Set;
         6: invokeinterface #731,  1          // InterfaceMethod java/util/Set.stream:()Ljava/util/stream/Stream;
        11: invokedynamic #732,  0            // InvokeDynamic #8:apply:()Ljava/util/function/Function;
        16: invokeinterface #90,  2           // InterfaceMethod java/util/stream/Stream.map:(Ljava/util/function/Function;)Ljava/util/stream/Stream;
        21: ldc           #248                // String ,
        23: ldc_w         #456                // String [
        26: ldc_w         #733                // String ]
        29: invokestatic  #735                // Method java/util/stream/Collectors.joining:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/util/stream/Collector;
        32: invokeinterface #741,  2          // InterfaceMethod java/util/stream/Stream.collect:(Ljava/util/stream/Collector;)Ljava/lang/Object;
        37: checkcast     #164                // class java/lang/String
        40: areturn
      LineNumberTable:
        line 1904: 0
        line 1905: 16
        line 1911: 29
        line 1904: 40
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      41     0 headers   Lorg/springframework/util/MultiValueMap;
      LocalVariableTypeTable:
        Start  Length  Slot  Name   Signature
            0      41     0 headers   Lorg/springframework/util/MultiValueMap<Ljava/lang/String;Ljava/lang/String;>;
    MethodParameters:
      Name                           Flags
      headers
    Signature: #1227                        // (Lorg/springframework/util/MultiValueMap<Ljava/lang/String;Ljava/lang/String;>;)Ljava/lang/String;

  public static java.lang.String encodeBasicAuth(java.lang.String, java.lang.String, java.nio.charset.Charset);
    descriptor: (Ljava/lang/String;Ljava/lang/String;Ljava/nio/charset/Charset;)Ljava/lang/String;
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=4, locals=6, args_size=3
         0: aload_0
         1: ldc_w         #745                // String Username must not be null
         4: invokestatic  #31                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
         7: aload_0
         8: ldc_w         #747                // String :
        11: ldc_w         #749                // String Username must not contain a colon
        14: invokestatic  #751                // Method org/springframework/util/Assert.doesNotContain:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
        17: aload_1
        18: ldc_w         #755                // String Password must not be null
        21: invokestatic  #31                 // Method org/springframework/util/Assert.notNull:(Ljava/lang/Object;Ljava/lang/String;)V
        24: aload_2
        25: ifnonnull     32
        28: getstatic     #757                // Field java/nio/charset/StandardCharsets.ISO_8859_1:Ljava/nio/charset/Charset;
        31: astore_2
        32: aload_2
        33: invokevirtual #763                // Method java/nio/charset/Charset.newEncoder:()Ljava/nio/charset/CharsetEncoder;
        36: astore_3
        37: aload_3
        38: aload_0
        39: invokevirtual #767                // Method java/nio/charset/CharsetEncoder.canEncode:(Ljava/lang/CharSequence;)Z
        42: ifeq          53
        45: aload_3
        46: aload_1
        47: invokevirtual #767                // Method java/nio/charset/CharsetEncoder.canEncode:(Ljava/lang/CharSequence;)Z
        50: ifne          70
        53: new           #572                // class java/lang/IllegalArgumentException
        56: dup
        57: aload_2
        58: invokevirtual #773                // Method java/nio/charset/Charset.displayName:()Ljava/lang/String;
        61: invokedynamic #776,  0            // InvokeDynamic #9:makeConcatWithConstants:(Ljava/lang/String;)Ljava/lang/String;
        66: invokespecial #577                // Method java/lang/IllegalArgumentException."<init>":(Ljava/lang/String;)V
        69: athrow
        70: aload_0
        71: aload_1
        72: invokedynamic #777,  0            // InvokeDynamic #5:makeConcatWithConstants:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;
        77: astore        4
        79: invokestatic  #778                // Method java/util/Base64.getEncoder:()Ljava/util/Base64$Encoder;
        82: aload         4
        84: aload_2
        85: invokevirtual #784                // Method java/lang/String.getBytes:(Ljava/nio/charset/Charset;)[B
        88: invokevirtual #788                // Method java/util/Base64$Encoder.encode:([B)[B
        91: astore        5
        93: new           #164                // class java/lang/String
        96: dup
        97: aload         5
        99: aload_2
       100: invokespecial #794                // Method java/lang/String."<init>":([BLjava/nio/charset/Charset;)V
       103: areturn
      LineNumberTable:
        line 1931: 0
        line 1932: 7
        line 1933: 17
        line 1934: 24
        line 1935: 28
        line 1938: 32
        line 1939: 37
        line 1940: 53
        line 1941: 58
        line 1944: 70
        line 1945: 79
        line 1946: 93
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0     104     0 username   Ljava/lang/String;
            0     104     1 password   Ljava/lang/String;
            0     104     2 charset   Ljava/nio/charset/Charset;
           37      67     3 encoder   Ljava/nio/charset/CharsetEncoder;
           79      25     4 credentialsString   Ljava/lang/String;
           93      11     5 encodedBytes   [B
      StackMapTable: number_of_entries = 3
        frame_type = 32 /* same */
        frame_type = 252 /* append */
          offset_delta = 20
          locals = [ class java/nio/charset/CharsetEncoder ]
        frame_type = 16 /* same */
    MethodParameters:
      Name                           Flags
      username
      password
      charset
    RuntimeVisibleParameterAnnotations:
      parameter 0:
      parameter 1:
      parameter 2:
        0: #1054()
          org.springframework.lang.Nullable

  static java.lang.String formatDate(long);
    descriptor: (J)Ljava/lang/String;
    flags: (0x0008) ACC_STATIC
    Code:
      stack=2, locals=4, args_size=1
         0: lload_0
         1: invokestatic  #543                // Method java/time/Instant.ofEpochMilli:(J)Ljava/time/Instant;
         4: astore_2
         5: aload_2
         6: getstatic     #486                // Field GMT:Ljava/time/ZoneId;
         9: invokestatic  #539                // Method java/time/ZonedDateTime.ofInstant:(Ljava/time/Instant;Ljava/time/ZoneId;)Ljava/time/ZonedDateTime;
        12: astore_3
        13: getstatic     #529                // Field DATE_FORMATTER:Ljava/time/format/DateTimeFormatter;
        16: aload_3
        17: invokevirtual #533                // Method java/time/format/DateTimeFormatter.format:(Ljava/time/temporal/TemporalAccessor;)Ljava/lang/String;
        20: areturn
      LineNumberTable:
        line 1959: 0
        line 1960: 5
        line 1961: 13
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      21     0  date   J
            5      16     2 instant   Ljava/time/Instant;
           13       8     3  time   Ljava/time/ZonedDateTime;
    MethodParameters:
      Name                           Flags
      date

  public void set(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #164                // class java/lang/String
         5: aload_2
         6: checkcast     #164                // class java/lang/String
         9: invokevirtual #59                 // Method set:(Ljava/lang/String;Ljava/lang/String;)V
        12: return
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/springframework/http/HttpHeaders;
    MethodParameters:
      Name                           Flags
      headerName                     synthetic
      headerValue                    synthetic
    RuntimeVisibleParameterAnnotations:
      parameter 0:
      parameter 1:
        0: #1054()
          org.springframework.lang.Nullable

  public void addAll(java.lang.Object, java.util.List);
    descriptor: (Ljava/lang/Object;Ljava/util/List;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #164                // class java/lang/String
         5: aload_2
         6: invokevirtual #797                // Method addAll:(Ljava/lang/String;Ljava/util/List;)V
         9: return
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lorg/springframework/http/HttpHeaders;
    MethodParameters:
      Name                           Flags
      key                            synthetic
      values                         synthetic

  public void add(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)V
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #164                // class java/lang/String
         5: aload_2
         6: checkcast     #164                // class java/lang/String
         9: invokevirtual #800                // Method add:(Ljava/lang/String;Ljava/lang/String;)V
        12: return
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/springframework/http/HttpHeaders;
    MethodParameters:
      Name                           Flags
      headerName                     synthetic
      headerValue                    synthetic
    RuntimeVisibleParameterAnnotations:
      parameter 0:
      parameter 1:
        0: #1054()
          org.springframework.lang.Nullable

  public java.lang.Object getFirst(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: checkcast     #164                // class java/lang/String
         5: invokevirtual #105                // Method getFirst:(Ljava/lang/String;)Ljava/lang/String;
         8: areturn
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       9     0  this   Lorg/springframework/http/HttpHeaders;
    MethodParameters:
      Name                           Flags
      headerName                     synthetic
    RuntimeVisibleAnnotations:
      0: #1054()
        org.springframework.lang.Nullable

  public java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #164                // class java/lang/String
         5: aload_2
         6: checkcast     #81                 // class java/util/List
         9: invokevirtual #802                // Method putIfAbsent:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
        12: areturn
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/springframework/http/HttpHeaders;
    MethodParameters:
      Name                           Flags
      key                            synthetic
      value                          synthetic

  public java.lang.Object remove(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #398                // Method remove:(Ljava/lang/Object;)Ljava/util/List;
         5: areturn
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/springframework/http/HttpHeaders;
    MethodParameters:
      Name                           Flags
      key                            synthetic

  public java.lang.Object put(java.lang.Object, java.lang.Object);
    descriptor: (Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=3, locals=3, args_size=3
         0: aload_0
         1: aload_1
         2: checkcast     #164                // class java/lang/String
         5: aload_2
         6: checkcast     #81                 // class java/util/List
         9: invokevirtual #805                // Method put:(Ljava/lang/String;Ljava/util/List;)Ljava/util/List;
        12: areturn
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lorg/springframework/http/HttpHeaders;
    MethodParameters:
      Name                           Flags
      key                            synthetic
      value                          synthetic

  public java.lang.Object get(java.lang.Object);
    descriptor: (Ljava/lang/Object;)Ljava/lang/Object;
    flags: (0x1041) ACC_PUBLIC, ACC_BRIDGE, ACC_SYNTHETIC
    Code:
      stack=2, locals=2, args_size=2
         0: aload_0
         1: aload_1
         2: invokevirtual #41                 // Method get:(Ljava/lang/Object;)Ljava/util/List;
         5: areturn
      LineNumberTable:
        line 78: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       6     0  this   Lorg/springframework/http/HttpHeaders;
    MethodParameters:
      Name                           Flags
      key                            synthetic
    RuntimeVisibleAnnotations:
      0: #1054()
        org.springframework.lang.Nullable

  static {};
    descriptor: ()V
    flags: (0x0008) ACC_STATIC
    Code:
      stack=5, locals=0, args_size=0
         0: new           #721                // class org/springframework/http/ReadOnlyHttpHeaders
         3: dup
         4: new           #832                // class org/springframework/util/LinkedMultiValueMap
         7: dup
         8: invokespecial #834                // Method org/springframework/util/LinkedMultiValueMap."<init>":()V
        11: invokespecial #723                // Method org/springframework/http/ReadOnlyHttpHeaders."<init>":(Lorg/springframework/util/MultiValueMap;)V
        14: putstatic     #726                // Field EMPTY:Lorg/springframework/http/HttpHeaders;
        17: ldc_w         #835                // String \\*|\\s*((W\\/)?(\"[^\"]*\"))\\s*,?
        20: invokestatic  #837                // Method java/util/regex/Pattern.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;
        23: putstatic     #627                // Field ETAG_HEADER_VALUE_PATTERN:Ljava/util/regex/Pattern;
        26: new           #841                // class java/text/DecimalFormatSymbols
        29: dup
        30: getstatic     #3                  // Field java/util/Locale.ENGLISH:Ljava/util/Locale;
        33: invokespecial #843                // Method java/text/DecimalFormatSymbols."<init>":(Ljava/util/Locale;)V
        36: putstatic     #73                 // Field DECIMAL_FORMAT_SYMBOLS:Ljava/text/DecimalFormatSymbols;
        39: ldc_w         #846                // String GMT
        42: invokestatic  #847                // Method java/time/ZoneId.of:(Ljava/lang/String;)Ljava/time/ZoneId;
        45: putstatic     #486                // Field GMT:Ljava/time/ZoneId;
        48: ldc_w         #853                // String EEE, dd MMM yyyy HH:mm:ss zzz
        51: getstatic     #855                // Field java/util/Locale.US:Ljava/util/Locale;
        54: invokestatic  #858                // Method java/time/format/DateTimeFormatter.ofPattern:(Ljava/lang/String;Ljava/util/Locale;)Ljava/time/format/DateTimeFormatter;
        57: getstatic     #486                // Field GMT:Ljava/time/ZoneId;
        60: invokevirtual #862                // Method java/time/format/DateTimeFormatter.withZone:(Ljava/time/ZoneId;)Ljava/time/format/DateTimeFormatter;
        63: putstatic     #529                // Field DATE_FORMATTER:Ljava/time/format/DateTimeFormatter;
        66: iconst_3
        67: anewarray     #534                // class java/time/format/DateTimeFormatter
        70: dup
        71: iconst_0
        72: getstatic     #866                // Field java/time/format/DateTimeFormatter.RFC_1123_DATE_TIME:Ljava/time/format/DateTimeFormatter;
        75: aastore
        76: dup
        77: iconst_1
        78: ldc_w         #869                // String EEEE, dd-MMM-yy HH:mm:ss zzz
        81: getstatic     #855                // Field java/util/Locale.US:Ljava/util/Locale;
        84: invokestatic  #858                // Method java/time/format/DateTimeFormatter.ofPattern:(Ljava/lang/String;Ljava/util/Locale;)Ljava/time/format/DateTimeFormatter;
        87: aastore
        88: dup
        89: iconst_2
        90: ldc_w         #871                // String EEE MMM dd HH:mm:ss yyyy
        93: getstatic     #855                // Field java/util/Locale.US:Ljava/util/Locale;
        96: invokestatic  #858                // Method java/time/format/DateTimeFormatter.ofPattern:(Ljava/lang/String;Ljava/util/Locale;)Ljava/time/format/DateTimeFormatter;
        99: getstatic     #486                // Field GMT:Ljava/time/ZoneId;
       102: invokevirtual #862                // Method java/time/format/DateTimeFormatter.withZone:(Ljava/time/ZoneId;)Ljava/time/format/DateTimeFormatter;
       105: aastore
       106: putstatic     #563                // Field DATE_PARSERS:[Ljava/time/format/DateTimeFormatter;
       109: return
      LineNumberTable:
        line 395: 0
        line 401: 17
        line 403: 26
        line 405: 39
        line 411: 48
        line 417: 66
        line 419: 84
        line 420: 96
        line 417: 109
}
Signature: #1248                        // Ljava/lang/Object;Lorg/springframework/util/MultiValueMap<Ljava/lang/String;Ljava/lang/String;>;Ljava/io/Serializable;
SourceFile: "HttpHeaders.java"
BootstrapMethods:
  0: #1252 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1259 (Ljava/lang/Object;)Ljava/lang/Object;
      #1260 REF_invokeStatic org/springframework/http/HttpHeaders.lambda$setAcceptLanguage$0:(Ljava/text/DecimalFormat;Ljava/util/Locale$LanguageRange;)Ljava/lang/String;
      #1263 (Ljava/util/Locale$LanguageRange;)Ljava/lang/String;
  1: #1252 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1259 (Ljava/lang/Object;)Ljava/lang/Object;
      #1265 REF_invokeStatic org/springframework/http/HttpHeaders.lambda$setAcceptLanguageAsLocales$1:(Ljava/util/Locale;)Ljava/util/Locale$LanguageRange;
      #1268 (Ljava/util/Locale;)Ljava/util/Locale$LanguageRange;
  2: #1269 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1275 Basic \u0001
  3: #1269 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1277 Bearer \u0001
  4: #1252 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1259 (Ljava/lang/Object;)Ljava/lang/Object;
      #1279 REF_invokeStatic java/util/Locale.forLanguageTag:(Ljava/lang/String;)Ljava/util/Locale;
      #1280 (Ljava/lang/String;)Ljava/util/Locale;
  5: #1269 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1281 \u0001:\u0001
  6: #1269 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1283 Cannot parse date value \"\u0001\" for \"\u0001\" header
  7: #1269 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1285 Could not parse header \'\u0001\' with value \'\u0001\'
  8: #1252 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1259 (Ljava/lang/Object;)Ljava/lang/Object;
      #1287 REF_invokeStatic org/springframework/http/HttpHeaders.lambda$formatHeaders$3:(Ljava/util/Map$Entry;)Ljava/lang/String;
      #1290 (Ljava/util/Map$Entry;)Ljava/lang/String;
  9: #1269 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1291 Username or password contains characters that cannot be encoded to \u0001
  10: #1269 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1293 \"\u0001\"
  11: #1252 REF_invokeStatic java/lang/invoke/LambdaMetafactory.metafactory:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodType;Ljava/lang/invoke/MethodHandle;Ljava/lang/invoke/MethodType;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1259 (Ljava/lang/Object;)Ljava/lang/Object;
      #1295 REF_invokeStatic org/springframework/http/HttpHeaders.lambda$formatHeaders$2:(Ljava/lang/String;)Ljava/lang/String;
      #1298 (Ljava/lang/String;)Ljava/lang/String;
  12: #1269 REF_invokeStatic java/lang/invoke/StringConcatFactory.makeConcatWithConstants:(Ljava/lang/invoke/MethodHandles$Lookup;Ljava/lang/String;Ljava/lang/invoke/MethodType;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/invoke/CallSite;
    Method arguments:
      #1299 \u0001;q=\u0001
InnerClasses:
  public static final #1302= #116 of #4;  // LanguageRange=class java/util/Locale$LanguageRange of class java/util/Locale
  public static #1303= #336 of #330;      // Builder=class org/springframework/http/ContentDisposition$Builder of class org/springframework/http/ContentDisposition
  public static #1304= #789 of #779;      // Encoder=class java/util/Base64$Encoder of class java/util/Base64
  public static #1307= #808 of #1305;     // Entry=class java/util/Map$Entry of class java/util/Map
  public static final #1312= #1308 of #1310; // Lookup=class java/lang/invoke/MethodHandles$Lookup of class java/lang/invoke/MethodHandles
